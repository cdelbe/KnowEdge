author: Mario Pietsch
core-version: >=5.1.0
created: 20180917073059029
creator: Charles Delbé
dependents: 
description: uni-link: Enhances the prettylink-parser
list: license readme history
modified: 20180917073059029
modifier: Charles Delbé
name: uni-link
plugin-type: plugin
title: $:/plugins/wikilabs/uni-link
type: application/json
version: 0.3.4

{
    "tiddlers": {
        "$:/plugins/wikilabs/uni-link/aka-footer/template": {
            "title": "$:/plugins/wikilabs/uni-link/aka-footer/template",
            "type": "text/vnd.tiddlywiki",
            "text": "''Note'': This tiddler has the following aliases || <<showAliases delim:\" ||\">>"
        },
        "$:/plugins/wikilabs/uni-link/aka-footer": {
            "title": "$:/plugins/wikilabs/uni-link/aka-footer",
            "tags": "$:/tags/ViewTemplate",
            "type": "text/vnd.tiddlywiki",
            "text": "<$list filter=\"[all[current]has[aliases]]\">\n<br/>\n<hr>\n\n{{||$:/plugins/wikilabs/uni-link/aka-footer/template}}\n</$list>"
        },
        "$:/plugins/wikilabs/uni-link/aka-macros": {
            "title": "$:/plugins/wikilabs/uni-link/aka-macros",
            "tags": "$:/tags/Macro",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define tooltip() Alias: <<currentTiddler>>\n\\define aka(target)\n\\whitespace trim\n<$list filter=\"[[$target$]is[alias]]\" variable=ali emptyMessage=\"\"\"<$link tooltip=\"Alias not defined!\" to=\"?\"><span class=\"uni-alias-missing\">$target$</span></$link>\"\"\">\n<$list filter=\"[has[aliases]!has[draft.of]]\">\n  <$list filter=\"[enlist{!!aliases}regexp[^$target$$(?i)]]\" variable=\"dummy\">\n    <$link tooltip=<<tooltip>> >\n\t\t<span class=\"uni-alias\">\n\t\t\t<$set name=\"tv-wikilinks\" value=\"no\">$target$</$set>\n\t\t</span></$link>\n  </$list>\n</$list>\n</$list>\n\\end\n\n\\define aka-no-links(target)\n\\whitespace trim\n<$list filter=\"[[$target$]is[alias]]\" variable=ali emptyMessage=\"\"\"<$link tooltip=\"Alias not defined!\" to=\"?\">$target$</$link>\"\"\">\n<$list filter=\"[has[aliases]!has[draft.of]]\">\n  <$list filter=\"[enlist{!!aliases}regexp[^$target$$(?i)]]\" variable=\"dummy\">\n    <span><<currentTiddler>></span>\n  </$list>\n</$list>\n</$list>\n\\end\n\n\\define showAliases(delim:\",\")\n<$list filter=\"[list[!!aliases]butlast[]]\"><$view field=title/>$delim$ </$list><$list filter=\"[list[!!aliases]last[]]\"><$view field=title/></$list>\n\\end\n\n\\define listAliases()\n<$list filter=\"[has[aliases]]\"><$link to=<<currentTiddler>> ><<currentTiddler>></$link> - <<showAliases>><br/></$list>\n\\end\n\n<pre><$view field=\"text\"/></pre>"
        },
        "$:/plugins/wikilabs/uni-link/alias-list": {
            "title": "$:/plugins/wikilabs/uni-link/alias-list",
            "type": "text/vnd.tiddlywiki",
            "text": "<<listAliases>>"
        },
        "$:/plugins/wikilabs/uni-link/backlinks-template": {
            "title": "$:/plugins/wikilabs/uni-link/backlinks-template",
            "text": "!!! Uni-links\n\n| Link | Result |h\n|`[[default prettylink|tiddler-with-caption]]` |[[default prettylink|tiddler-with-caption]] |\n|`[[tiddler-with-caption]]` |[[tiddler-with-caption]] |\n|`[[tiddler-with-subtitle]]` |[[tiddler-with-subtitle]] |\n|`[[tiddler-with-subtitle-and-caption]]` |[[tiddler-with-subtitle-and-caption]] |\n|`[[tiddler-with-subtitle-and-caption|]]` |[[tiddler-with-subtitle-and-caption|]] ... but don't use them!|\n|`[[tiddler doesn't exist]]` |[[tiddler doesn't exist]] |\n\n!!! Alias Links\n\n| Link | Result |h\n|`[[alias|?]]` |[[alias|?]] |\n"
        },
        "$:/plugins/wikilabs/uni-link/filters/aliasbacklinks.js": {
            "title": "$:/plugins/wikilabs/uni-link/filters/aliasbacklinks.js",
            "text": "/*\\\ntitle: $:/plugins/wikilabs/uni-link/filters/aliasbacklinks.js\ntype: application/javascript\nmodule-type: filteroperator\n\nFilter operator for returning all the backlinks from a tiddler\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nExport our filter function\n*/\nexports.aliasbacklinks = function(source,operator,options) {\n\tvar results = [];\n\tsource(function(tiddler,title) {\n\t\t$tw.utils.pushTop(results,options.wiki.getTiddlerAliasBacklinks(title));\n\t});\n\treturn results;\n};\n\n})();\n\n\n\n///*\\\n//title: $:/core/modules/filters/aliases.js\n//type: application/javascript\n//module-type: filteroperator\n//\n//Filter operator for returning all the alias-backlinks from a tiddler\n//\n//\\*/\n//(function(){\n//\n///*jslint node: true, browser: true */\n///*global $tw: false */\n//\"use strict\";\n//\n///*\n//Export our filter function\n//*/\n//exports.aliases = function(source,operator,options) {\n//\tvar results = [],\n//\t\tfield = operator.operand || \"aliases\";\n//\n//\t\tsource(function(tiddler,title) {\n//\t\t\tif(tiddler) {\n//\t\t\t\tvalue = (field === \"title\") ? title : tiddler.getFieldString(field);\n//\t\t\t\tif(!$tw.utils.hop(values,value)) {\n//\t\t\t\t\tvalues[value] = true;\n//\t\t\t\t\tresults.push(title);\n//\t\t\t\t}\n//\t\t\t}\n//\t\t});\n//\n//\tsource(function(tiddler,title) {\n//\t\t$tw.utils.pushTop(results,options.wiki.getTiddlerAliases(title));\n//\t});\n//\treturn results;\n//};\n//\n//})();\n//\n//\n\n///*\\\n//title: $:/core/modules/filters/each.js\n//type: application/javascript\n//module-type: filteroperator\n//\n//Filter operator that selects one tiddler for each unique value of the specified field.\n//With suffix \"list\", selects all tiddlers that are values in a specified list field.\n//\n//\\*/\n//(function(){\n//\n///*jslint node: true, browser: true */\n///*global $tw: false */\n//\"use strict\";\n//\n///*\n//Export our filter function\n//*/\n//exports.each = function(source,operator,options) {\n//\tvar results =[] ,\n//\t\tvalue,values = {},\n//\t\tfield = operator.operand || \"title\";\n//\tif(operator.suffix !== \"list-item\") {\n//\t\tsource(function(tiddler,title) {\n//\t\t\tif(tiddler) {\n//\t\t\t\tvalue = (field === \"title\") ? title : tiddler.getFieldString(field);\n//\t\t\t\tif(!$tw.utils.hop(values,value)) {\n//\t\t\t\t\tvalues[value] = true;\n//\t\t\t\t\tresults.push(title);\n//\t\t\t\t}\n//\t\t\t}\n//\t\t});\n//\t} else {\n//\t\tsource(function(tiddler,title) {\n//\t\t\tif(tiddler) {\n//\t\t\t\t$tw.utils.each(\n//\t\t\t\t\toptions.wiki.getTiddlerList(title,field),\n//\t\t\t\t\tfunction(value) {\n//\t\t\t\t\t\tif(!$tw.utils.hop(values,value)) {\n//\t\t\t\t\t\t\tvalues[value] = true;\n//\t\t\t\t\t\t\tresults.push(value);\n//\t\t\t\t\t\t}\n//\t\t\t\t\t}\n//\t\t\t\t);\n//\t\t\t}\n//\t\t});\n//\t}\n//\treturn results;\n//};\n//\n//})();\n",
            "type": "application/javascript",
            "module-type": "filteroperator"
        },
        "$:/plugins/wikilabs/uni-link/filters/all/aliases.js": {
            "title": "$:/plugins/wikilabs/uni-link/filters/all/aliases.js",
            "text": "/*\\\ntitle: $:/plugins/wikilabs/uni-link/filters/all/aliases.js\ntype: application/javascript\nmodule-type: allfilteroperator\n\nFilter function for [all[aliases]]\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nExport our filter function\n*/\nexports.aliases = function(source,prefix,options) {\n\treturn options.wiki.getAllAliases();\n};\n\n})();\n",
            "type": "application/javascript",
            "module-type": "allfilteroperator"
        },
        "$:/plugins/wikilabs/uni-link/filters/is/alias.js": {
            "title": "$:/plugins/wikilabs/uni-link/filters/is/alias.js",
            "text": "/*\\\ntitle: $:/plugins/wikilabs/uni-link/filters/is/alias.js\ntype: application/javascript\nmodule-type: isfilteroperator\n\nFilter function for [is[alias]]\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nExport our filter function\n*/\nexports.alias = function(source,prefix,options) {\n\tvar results = [],\n\t\taliases = options.wiki.getAllAliases();\n\n\tif(prefix === \"!\") {\n\t\tsource(function(tiddler,title) {\n\t\t\ttitle = title.toLowerCase();\n\t\t\tif (aliases.indexOf(title) === -1) results.push(title);\n\t\t});\n\t} else {\n\t\tsource(function(tiddler,title) {\n\t\t\ttitle = title.toLowerCase();\n\t\t\tif (aliases.indexOf(title) !== -1) results.push(title);\n\t\t});\n\t}\n\treturn results;\n};\n\n})();\n",
            "type": "application/javascript",
            "module-type": "isfilteroperator"
        },
        "$:/plugins/wikilabs/uni-link/history": {
            "title": "$:/plugins/wikilabs/uni-link/history",
            "text": "V 0.3.3 - 2018.08.06\n\n* fix [[issue 19|https://github.com/wikilabs/plugins/issues/19]] Alias References behaviour\n\nV 0.3.2 - 2018.02.02\n\n* new Undefined Aliases Sidebar tab under More: Aliases\n* `[[?]aliasbacklinks[]sort[title]]` shows a list of tiddlers that contain undefined alias links\n\nV 0.3.1 - 2018.01.31\n\n* fixed: [[CamelCase]] or [[$:/system]] tiddler \"double linking\"\n* [[NaturaL sElEcTiOn|?]] .. is a valid alias now. Same problem as above!\n\nV 0.3.0 - 2018.01.27\n\n* add: styling possibility for missing aliases\n* improve: history and copyright\n\nV 0.2.1 - 2018.01.27\n\n* fix: uni-link creates an unused a-element\n\nV 0.2.0 - 2017.12.15\n\n* added: [[alias|?]] link syntax\n** using aka-makros for tiddler alias handling\n\n* added: Alias backlinks\n** open the tiddler (i)nfo area: References\n\n* added filter operators:\n** is[alias] ... extends the core is operator see: https://tiddlywiki.com/#is Operator\n** all[aliases] ... extends the core all operator see: https://tiddlywiki.com/#all Operator\n\n* added: Right-Sidebar: More tab: \"Aliases\"\n** Sorted by Alias\n** Sorted by Tiddler Title\n\n* added: uni-link $:/ControlPanel setting\n* added: different colors for title, caption, subtitle and alias links\n\nV0.1.0 - 2017.07.25\n\n* fix \"backlink\" and \"missing\" issue\n\nV0.0.1 - 2017.07.23\n\n* initial release\n\nalso see: https://wikilabs.github.io/editions/uni-link/#History\n"
        },
        "$:/plugins/wikilabs/uni-link/license": {
            "title": "$:/plugins/wikilabs/uni-link/license",
            "text": "[[Uni-Link Plugin|https://wikilabs.github.io/#uni-link]] (C) Mario Pietsch - 2017-2018\n\nhttps://opensource.org/licenses/BSD-3-Clause"
        },
        "$:/plugins/wikilabs/uni-link/readme": {
            "title": "$:/plugins/wikilabs/uni-link/readme",
            "subtitle": "\"uni-link\" readme",
            "text": "\\define createExampleTiddlers()\n<$button>\n<$action-sendmessage $message=\"tm-new-tiddler\"  title=\"tiddler-with-caption\"  caption=\"Short Caption\"/>\n<$action-sendmessage $message=\"tm-new-tiddler\"  title=\"tiddler-with-subtitle\"  subtitle=\"Tiddler With Subtitle Only Defined\"/>\n<$action-sendmessage $message=\"tm-new-tiddler\"  title=\"tiddler-with-subtitle-and-caption\"  subtitle=\"Tiddler With Subtitle And Caption - using subtitle\" caption=\"capt.ion\"/>\n<$action-sendmessage $message=\"tm-new-tiddler\"  title=\"tiddler-with-alias\"  aliases=\"alias\"/>\n<$action-sendmessage $message=\"tm-new-tiddler\"  title=\"test-links\" text={{$:/plugins/wikilabs/uni-link/backlinks-template!!text}}/>\nCreate \"uni-link\" example tiddlers!\n</$button>\n\\end\n\\define deleteExampleTiddlers()\n<$button>\n<$action-deletetiddler $tiddler=\"tiddler-with-caption\"/>\n<$action-deletetiddler $tiddler=\"tiddler-with-subtitle\"/>\n<$action-deletetiddler $tiddler=\"tiddler-with-subtitle-and-caption\"/>\n<$action-deletetiddler $tiddler=\"tiddler-with-alias\"/>\n<$action-deletetiddler $tiddler=\"test-links\"/>\nDelete example tiddlers!\n</$button>\n\\end\n\n!! Important\n\nThis plugin overwrites the core tiddler: $:/core/ui/TiddlerInfo/References\n\n!! Video\n\n* https://youtu.be/V9l-vipAoNw\n\n!! Examples\n\nYou can use the following buttons to create example tiddlers!\n\n<<createExampleTiddlers>>\n\n!! Uni-link\n\n* A new wikitext parsing rule, that calls the global [[\"uni-link\" macro|$:/plugins/wikilabs/uni-link/uni-link-macro]], instead of referencing the tiddler name. \n\n* It substitues the following tiddler fields: ''subtitle'', ''caption'' and ''title''. From left to right, the first field it finds is shown.\n\n!! Alias\n\n* Alias Link Syntax\n** `[[alias|?]]`\n** using [[aka-makros|$:/plugins/wikilabs/uni-link/aka-macros]] for tiddler alias handling\n\n* Alias Backlinks\n** open the tiddler (i)nfo area: References\n\n* Filter Operators:\n** `is[alias]` ... extends the core `is` operator see: [[https://tiddlywiki.com/#is Operator]]\n** `all[aliases]` ... extends the core `all` operator see: [ext[https://tiddlywiki.com/#all Operator]]\n** `[aliasbacklinks[]]` ... shows a list of all tiddlers that contain alias links\n** `[[?]aliasbacklinks[]sort[title]]` ... shows a list of tiddlers that contain undefined alias links\n\n* Right-Sidebar: More tab: [[Aliases|$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases]]\n** [[Sorted by Alias|$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/byAlias]]\n** [[Sorted by Tiddler Title|$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/byTitle]]\n** [[Undefined Aliases|$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/undefined]]\n\n* uni-link $:/ControlPanel setting\n\n* [[uni-fields|$:/plugins/wikilabs/uni-link/uni-fields.js]] widget, that allows us to assign CSS classes based on tiddler fields existence.\n\n!! Installation\n\n* You can drag & drop import this link: $:/plugins/wikilabs/uni-link<br>\n\n!! Link Styling\n\n* Uni-links are styled like this: $:/plugins/wikilabs/uni-link/styles\n\n!! Examples\n\n<<createExampleTiddlers>> -- <<deleteExampleTiddlers>>\n\n{{$:/plugins/wikilabs/uni-link/backlinks-template}}\n"
        },
        "$:/config/ShortcutInfo/aliasify": {
            "title": "$:/config/ShortcutInfo/aliasify",
            "created": "20180909092707749",
            "modified": "20180909092719567",
            "type": "text/vnd.tiddlywiki",
            "text": "{{$:/language/Buttons/Aliasify/Hint}}"
        },
        "$:/config/shortcuts/aliasify": {
            "title": "$:/config/shortcuts/aliasify",
            "created": "20180909085336000",
            "modified": "20180909091537816",
            "tags": "",
            "type": "text/vnd.tiddlywiki",
            "text": "ctrl-K"
        },
        "$:/core/images/aliasify": {
            "title": "$:/core/images/aliasify",
            "created": "20180909082646243",
            "modified": "20180909091537847",
            "tags": "$:/tags/Image",
            "type": "text/vnd.tiddlywiki",
            "text": "<svg class=\"tc-linkify-button tc-image-button\" width=\"22pt\" height=\"22pt\" viewBox=\"0 0 128 128\">\n<path d=\"m17.031 31.919h-7.983v64.931h7.983v6.92h-17.031v-78.77h17.031zm24.66 0h-7.983v64.931h7.983v6.92h-17.031v-78.77h17.03v6.919zm44.619 64.931h7.982v-64.93h-7.982v-6.92h17.031v78.77h-17.031zm24.659 0h7.983v-64.93h-7.983v-6.92h17.031v78.77h-17.031z\" fill-rule=\"evenodd\"/>\n <path d=\"m45.188 34.74v62.668h7.3507c-0.02998-28.03 0.06401-32 0.04791-62.668zm28.464 2.6834c-2.6133 0-5.1484 0.36297-7.6094 1.0734-2.4357 0.7104-4.8412 1.7835-7.2261 3.2297v7.159c2.461-1.6999 4.8147-2.9934 7.0728-3.8814 2.2834-0.88801 4.4263-1.3321 6.4306-1.3321 2.7401 0 4.9348 0.69381 6.584 2.0892 1.6745 1.3954 2.5205 3.2238 2.5205 5.4819 0 1.2432-0.33704 2.4589-0.9967 3.6514-0.63429 1.1925-1.6685 2.46-3.1147 3.8047l-3.431 3.3926c-2.2834 2.182-3.7748 4.0915-4.4852 5.7406-0.71039 1.6491-1.0638 3.7627-1.0638 6.3252v5.8556h7.2644v-4.6768c0-1.3193 0.03891-2.3631 0.115-3.1243 0.07613-0.76115 0.19278-1.4031 0.34501-1.9359 0.20297-0.63429 0.5434-1.2858 1.0255-1.9455 0.50744-0.68504 1.3568-1.6251 2.5493-2.8176l3.3447-3.268c2.2834-2.182 3.888-4.1399 4.8014-5.8652 0.91338-1.7506 1.3705-3.592 1.3705-5.5202 0-4.0341-1.4231-7.276-4.2647-9.737-2.8162-2.461-6.5637-3.6993-11.232-3.6993zm-5.5489 48.187v9.6604h7.7244v-9.6604z\" fill-rule=\"evenodd\" stroke-width=\"1.1245\"/>\n</svg>\n"
        },
        "$:/core/ui/EditorToolbar/aliasify": {
            "title": "$:/core/ui/EditorToolbar/aliasify",
            "caption": "{{$:/language/Buttons/Aliasify/Caption}}",
            "condition": "[<targetTiddler>!has[type]] [<targetTiddler>type[text/vnd.tiddlywiki]]",
            "created": "20180909082308073",
            "description": "{{$:/language/Buttons/Aliasify/Hint}}",
            "icon": "$:/core/images/aliasify",
            "list-before": "$:/core/ui/EditorToolbar/mono-block",
            "modified": "20180909091537847",
            "shortcuts": "((aliasify))",
            "tags": "$:/tags/EditorToolbar",
            "type": "text/vnd.tiddlywiki",
            "text": "<$action-sendmessage\n\t$message=\"tm-edit-text-operation\"\n\t$param=\"wrap-selection\"\n\tprefix=\"[[\"\n\tsuffix=\"|?]]\"\n/>\n"
        },
        "$:/core/ui/TiddlerInfo/References": {
            "title": "$:/core/ui/TiddlerInfo/References",
            "caption": "{{$:/language/TiddlerInfo/References/Caption}}",
            "tags": "$:/tags/TiddlerInfo",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define lingo-base() $:/language/TiddlerInfo/\n<$list filter=\"[all[current]backlinks[]sort[title]]\" emptyMessage=<<lingo References/Empty>> template=\"$:/core/ui/ListItemTemplate\"></$list>\n<hr>\n<$list filter=\"[all[current]aliasbacklinks[]sort[title]]\" emptyMessage=<<lingo References/Empty>> template=\"$:/core/ui/ListItemTemplate\"></$list>\n"
        },
        "$:/language/Buttons/Aliasify/Caption": {
            "title": "$:/language/Buttons/Aliasify/Caption",
            "created": "20180909082422201",
            "modified": "20180909091537832",
            "tags": "",
            "type": "text/vnd.tiddlywiki",
            "text": "alias-link"
        },
        "$:/language/Buttons/Aliasify/Hint": {
            "title": "$:/language/Buttons/Aliasify/Hint",
            "created": "20180909082514412",
            "modified": "20180909091537832",
            "tags": "",
            "type": "text/vnd.tiddlywiki",
            "text": "Wrap selection in square brackets and add alias postfix"
        },
        "$:/plugins/wikilabs/uni-link/ui/ControlPanel/settings": {
            "title": "$:/plugins/wikilabs/uni-link/ui/ControlPanel/settings",
            "caption": "uni-link",
            "created": "20171205224905238",
            "modified": "20171205230149750",
            "tags": "$:/tags/ControlPanel",
            "type": "text/vnd.tiddlywiki",
            "text": "!! [[Enable Aliases Footer|$:/plugins/wikilabs/uni-link/aka-footer]]\n\n<<<\n<$checkbox tiddler=\"$:/plugins/wikilabs/uni-link/aka-footer\" tag=\"$:/tags/ViewTemplate\"> Enable Aliases Footer</$checkbox>\n<<<\n\n!! Additional Info\n\nSee: [[$:/plugins/wikilabs/uni-link/readme]]\n"
        },
        "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases": {
            "title": "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases",
            "caption": "Aliases",
            "created": "20171214213808142",
            "list-before": "$:/core/ui/MoreSideBar/Recent",
            "modified": "20171214215245931",
            "tags": "$:/tags/MoreSideBar",
            "type": "text/vnd.tiddlywiki",
            "text": "<div class=\"uni-link-sidebar tc-sidebar-lists\">\n<<tabs \"[all[shadows+tiddlers]tag[$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases]!has[draft.of]]\" \"$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/byAlias\" \"$:/state/tab/Aliases\" >>\n</div>"
        },
        "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/byAlias": {
            "title": "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/byAlias",
            "caption": "Alias",
            "created": "20171214203739053",
            "list-before": "$:/core/ui/MoreSideBar/Recent",
            "modified": "20171214213743140",
            "tags": "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases",
            "type": "text/vnd.tiddlywiki",
            "text": "\\whitespace trim\n<$list filter=\"[all[aliases]sort[title]]\" variable=alias>\n  <div class=\"tc-menu-list-item\">\n   <$macrocall $name=\"aka\" target=<<alias>> />\n     <div class=\"tc-menu-list-subitem\">\n       <$macrocall $name=\"aka-no-links\" target=<<alias>> />\n      </div>\n   </div>\n</$list>\n"
        },
        "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/byTitle": {
            "title": "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/byTitle",
            "caption": "Title",
            "created": "20171214201333460",
            "list-before": "$:/core/ui/MoreSideBar/Recent",
            "modified": "20171214213745643",
            "tags": "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases",
            "type": "text/vnd.tiddlywiki",
            "text": "\\whitespace trim\n<$list filter=\"[has[aliases]sort[title]]\">\n  <div class=\"tc-menu-list-item\">\n    <$link to=<<currentTiddler>> ><<currentTiddler>></$link>\n    <$list filter=\"[list[!!aliases]]\">\n      <div class=\"tc-menu-list-subitem\">\n        <$view field=title/>\n      </div>\n    </$list>\n  </div>\n</$list>\n"
        },
        "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/undefined": {
            "title": "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases/undefined",
            "caption": "Undefined",
            "created": "20180202150804918",
            "list-before": "$:/core/ui/MoreSideBar/Recent",
            "modified": "20180202151517364",
            "tags": "$:/plugins/wikilabs/uni-link/ui/MoreSideBar/Aliases",
            "type": "text/vnd.tiddlywiki",
            "text": "<$list filter=\"[[?]aliasbacklinks[]sort[title]]\" template=\"$:/core/ui/ListItemTemplate\" emptyMessage=\"No undefined Aliases\"/>\n\n---\n\nYou'll need to reload the page, to update this list!\n"
        },
        "$:/plugins/wikilabs/uni-link/uni-fields.js": {
            "title": "$:/plugins/wikilabs/uni-link/uni-fields.js",
            "text": "/*\\\ntitle: $:/plugins/wikilabs/uni-link/uni-fields.js\ntype: application/javascript\nmodule-type: widget\n\nunifields widget, derived from Fields Widget\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\nvar FieldsWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n};\n\n/*\nInherit from the base widget class\n*/\nFieldsWidget.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nFieldsWidget.prototype.render = function(parent,nextSibling) {\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\tvar textNode = this.document.createTextNode(this.text);\n\tparent.insertBefore(textNode,nextSibling);\n\tthis.domNodes.push(textNode);\n};\n\n/*\nCompute the internal state of the widget\n*/\nFieldsWidget.prototype.execute = function() {\n\t// Get parameters from our attributes\n\tthis.tiddlerTitle = this.getAttribute(\"tiddler\",this.getVariable(\"currentTiddler\"));\n\tthis.template = this.getAttribute(\"template\");\n\tthis.sort = this.getAttribute(\"sort\",\"yes\") === \"yes\";\n\tthis.exclude = this.getAttribute(\"exclude\");\n\tthis.include = this.getAttribute(\"include\",null);\n\tthis.stripTitlePrefix = this.getAttribute(\"stripTitlePrefix\",\"no\") === \"yes\";\n\tthis.sortReverse = this.getAttribute(\"sortReverse\",\"no\") === \"yes\";\n\t// Get the value to display\n\tvar tiddler = this.wiki.getTiddler(this.tiddlerTitle);\n\n\t// Get the inclusion and exclusion list\n\tvar exclude = (this.exclude) ? this.exclude.split(\" \") : [\"text\"];\n\t// If inclusion is defined, everything else is auto excluded\n\tvar include = (this.include) ? this.include.split(\" \") : null;\n\n\t// Compose the template\n\tvar text = [];\n\tif(this.template && tiddler) {\n\t\tvar fields = [];\n\t\tif (include) {\n\t\t\tfor(var i=0; i<include.length; i++) {\n\t\t\t\tif(tiddler.fields[include[i]]) {\n\t\t\t\t\tfields.push(include[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor(var fieldName in tiddler.fields) {\n\t\t\t\tif(exclude.indexOf(fieldName) === -1) {\n\t\t\t\t\tfields.push(fieldName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.sort) fields.sort();\n\t\tif (this.sortReverse) fields.reverse();\n\t\tfor(var f=0, fmax=fields.length; f<fmax; f++) {\n\t\t\tfieldName = fields[f];\n//\t\t\tif(exclude.indexOf(fieldName) === -1) {\n\t\t\tvar row = this.template,\n\t\t\t\tvalue = tiddler.getFieldString(fieldName);\n\t\t\tif(this.stripTitlePrefix && fieldName === \"title\") {\n\t\t\t\tvar reStrip = /^\\{[^\\}]+\\}(.+)/mg,\n\t\t\t\t\treMatch = reStrip.exec(value);\n\t\t\t\tif(reMatch) {\n\t\t\t\t\tvalue = reMatch[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\trow = $tw.utils.replaceString(row,\"$name$\",fieldName);\n\t\t\trow = $tw.utils.replaceString(row,\"$value$\",value);\n\t\t\trow = $tw.utils.replaceString(row,\"$encoded_value$\",$tw.utils.htmlEncode(value));\n\t\t\ttext.push(row);\n//\t\t\t}\n\t\t}\n\t}\n\tthis.text = text.join(\"\");\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nFieldsWidget.prototype.refresh = function(changedTiddlers) {\n\tvar changedAttributes = this.computeAttributes();\n\tif(changedAttributes.tiddler || changedAttributes.template || changedAttributes.exclude || changedAttributes.stripTitlePrefix || changedTiddlers[this.tiddlerTitle]) {\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexports[\"uni-fields\"] = FieldsWidget;\n\n})();\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/wikilabs/uni-link/uni-link-macro": {
            "title": "$:/plugins/wikilabs/uni-link/uni-link-macro",
            "tags": "$:/tags/Macro",
            "text": "\\define getClass()\n<$uni-fields template=\"uni-$name$ \" include=\"subtitle caption\" sort=\"no\"/> uni-link\n\\end\n\n\\define returnText()\n\\whitespace trim\n<$set name=\"tv-wikilinks\" value=\"no\">\n<span class=<<class>> >\n  <$transclude field=subtitle><$transclude field=caption><$transclude field=title/></$transclude></$transclude>\n</span>\n</$set>\n\\end\n\n\\define uni-link(tid)\n\\whitespace trim\n<$tiddler tiddler=\"\"\"$tid$\"\"\">\n  <$wikify name=class text=<<getClass>> >\n    <$link to=\"\"\"$tid$\"\"\" tooltip=\"\"\"uni-link to: $tid$\"\"\"><<returnText>></$link>\n  </$wikify>\n</$tiddler>\n\\end\n\n<pre><$view field=\"text\"/></pre>"
        },
        "$:/plugins/wikilabs/uni-link/styles": {
            "title": "$:/plugins/wikilabs/uni-link/styles",
            "tags": "$:/tags/Stylesheet",
            "text": ".uni-link {\n  color: navy;\n}\n\n.uni-caption {\n  color: #2a699f;\n}\n\n.uni-subtitle {\n  color: #0e8446;\n}\n\n.uni-alias {\n  color: #7557d8;\n}\n\n.uni-alias-missing {\n  color: red;\n}\n\n.uni-link-sidebar .tc-tab-buttons {\n  padding-top: 0;\n}\n"
        },
        "$:/plugins/wikilabs/uni-link/uni-link.js": {
            "title": "$:/plugins/wikilabs/uni-link/uni-link.js",
            "text": "/*\\\ntitle: $:/plugins/wikilabs/uni-link/uni-link.js\ntype: application/javascript\nmodule-type: wikirule\n\nWiki text inline rule for uni link macros. For example:\n\n```\n[[Introduction]] ... uni-link\n\n[[Link description|?]] ... alias-link\n```\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nexports.name = \"unilink\";\nexports.types = {inline: true};\n\nexports.init = function(parser) {\n\tthis.parser = parser;\n\t// Regexp to match\n\tthis.matchRegExp = /\\[\\[(.*?)(?:\\|(.*?))?\\]\\]/mg;\n};\n\nexports.parse = function() {\n\t// Move past the match\n\tthis.parser.pos = this.matchRegExp.lastIndex;\n\t// Process the link\n\tvar text = this.match[1],\n\t\tlink = this.match[2] || text,\n\t\tcheckAlias = this.match[2] === \"?\",\n\t\tuseUniLink = !(this.match[2] === \"\");\n\n\tif($tw.utils.isLinkExternal(link)) {\n\t\treturn [{\n\t\t\ttype: \"element\",\n\t\t\ttag: \"a\",\n\t\t\tattributes: {\n\t\t\t\thref: {type: \"string\", value: link},\n\t\t\t\t\"class\": {type: \"string\", value: \"tc-tiddlylink-external\"},\n\t\t\t\ttarget: {type: \"string\", value: \"_blank\"},\n\t\t\t\trel: {type: \"string\", value: \"noopener noreferrer\"}\n\t\t\t},\n\t\t\tchildren: [{\n\t\t\t\ttype: \"text\", text: text\n\t\t\t}]\n\t\t}];\n\t} else if(checkAlias) {\n\t\treturn [{\n\t\t\ttype: \"macrocall\",\n\t\t\tname: \"aka\",\n\t\t\tparams: [\n\t\t\t\t{name: \"target\", value: text}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t} else if((text == link) && useUniLink) {\n\t\t// we need to add the type: \"link\" element, since the core needs it to find \"backlinks\" and \"missing links\" ...\n\t\treturn [{\n\t\t\ttype: \"link\",\n\t\t\tattributes: {\n\t\t\t\tto: {type: \"string\", value: text},\n\t\t\t\ttag: {type: \"string\", value: \"x\"},\n\t\t\t\toverrideClass: {type: \"string\", value: \"\"},\n\t\t\t\tdraggable: {type: \"string\", value: \"false\"}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\ttype: \"macrocall\",\n\t\t\tname: \"uni-link\",\n\t\t\tparams: [\n\t\t\t\t{name: \"tid\", value: text}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t} else {\n\t\treturn [{\n\t\t\ttype: \"link\",\n\t\t\tattributes: {\n\t\t\t\tto: {type: \"string\", value: link}\n\t\t\t},\n\t\t\tchildren: [{\n\t\t\t\ttype: \"text\", text: text\n\t\t\t}]\n\t\t}];\n\t}\n};\n\n})();\n",
            "type": "application/javascript",
            "module-type": "wikirule"
        },
        "$:/plugins/wikilabs/uni-link/wiki-ext.js": {
            "title": "$:/plugins/wikilabs/uni-link/wiki-ext.js",
            "text": "/*\\\ntitle: $:/plugins/wikilabs/uni-link/wiki-ext.js\ntype: application/javascript\nmodule-type: wikimethod\n\nExtension methods for the $tw.Wiki object\n\nAdds the following properties to the wiki object:\n\nexports.getTiddlerAliasLinks = function(title) {\nexports.getTiddlerAliasBacklinks = function(targetTitle) {\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n//var widget = require(\"$:/core/modules/widgets/widget.js\");\n\nfunction aliasInit(title) {\n\t// Parse the tiddler\n\tvar parser = this.parseTiddler(title);\n\t// Count up the links\n\tvar links = [],\n\t\tcheckParseTree = function(parseTree) {\n\t\t\tfor(var t=0; t<parseTree.length; t++) {\n\t\t\t\tvar parseTreeNode = parseTree[t];\n\t\t\t\tif(parseTreeNode.type === \"macrocall\" && parseTreeNode.name === \"aka\") {\n\t\t\t\t\tvar value = parseTreeNode.params[0].value;\n\t\t\t\t\tif(links.indexOf(value) === -1) {\n\t\t\t\t\t\tlinks.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(parseTreeNode.children) {\n\t\t\t\t\tcheckParseTree(parseTreeNode.children);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\tif(parser) {\n\t\tcheckParseTree(parser.tree);\n\t}\n\t/*\n\tFor every tiddler invoke a callback(title,tiddler) with `this` set to the wiki object. Options include:\n\tsortField: field to sort by\n\texcludeTag: tag to exclude\n\tincludeSystem: whether to include system tiddlers (defaults to false)\n\t*/\n\tvar backlinks = []\n\tthis.forEachTiddler({includeSystem:true}, function(ttl,tiddler) {\n\t\tif (tiddler.fields[\"aliases\"]) {\n\t\t\t// var fields = tiddler.fields[\"aliases\"];\n\t\t\tvar fields = $tw.utils.parseStringArray(tiddler.fields[\"aliases\"]);\n\t\t\tlinks.map( function (el) {\n\t\t\t\tif (fields.indexOf(el) != -1) backlinks.push(ttl);\n\t\t\t})\n\t\t} // if tiddler aliases\n\t});\n\n\tif ((backlinks.length === 0) && (links.length > 0)) {\n\t\tbacklinks[0] = \"?\";\n\t}\n\n\treturn backlinks;\n}\n\nexports.getAllAliases = function() {\n\tvar self = this,\n\t\taliases = \"\";\n\t/*\n\tFor every tiddler invoke a callback(title,tiddler) with `this` set to the wiki object. Options include:\n\tsortField: field to sort by\n\texcludeTag: tag to exclude\n\tincludeSystem: whether to include system tiddlers (defaults to false)\n\t*/\n\tself.forEachTiddler({includeSystem:true}, function(title,tiddler) {\n\t\tif (tiddler.fields[\"aliases\"]) {\n//\t\t\t$tw.utils.pushTop(aliases, this.getCacheForTiddler(title,\"alias\",aliasInit.bind(this, title)));\n\t\t\taliases = aliases + ` ${tiddler.fields.aliases}`;\n\t\t} // if tiddler aliases\n\t});\n\taliases = aliases.toLowerCase();\n\treturn $tw.utils.parseStringArray(aliases);\n};\n\n\n/*\nReturn an array of tiddler titles that are alias linked from the specified tiddler\n*/\nexports.getTiddlerAliasLinks = function(title) {\n\tvar self = this;\n\n\t// We'll cache the links so they only get computed if the tiddler changes\n\treturn this.getCacheForTiddler(title,\"alias\",aliasInit.bind(this, title));\n};\n\n/*\nReturn an array of tiddler titles that link to the specified tiddler\n*/\nexports.getTiddlerAliasBacklinks = function(targetTitle) {\n\tvar self = this,\n\t\tbacklinks = [];\n\tthis.forEachTiddler(function(title,tiddler) {\n\t\tvar links = self.getTiddlerAliasLinks(title);\n\t\tif(links.indexOf(targetTitle) !== -1) {\n\t\t\tbacklinks.push(title);\n\t\t}\n\t});\n\treturn backlinks;\n};\n\n})();\n\n",
            "type": "application/javascript",
            "module-type": "wikimethod"
        }
    }
}