created: 20181108075032876
creator: Charles Delbé
modified: 20181108075032876
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\samples\toolbarconfigurator\font\fontello.woff
tmap.id: d69110fd-f1d4-4f5e-8fef-50b2ef8e512d
type: application/x-font-ttf

created: 20181108074509460
creator: Charles Delbé
modified: 20181108074509460
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\samples\toolbarconfigurator\font\fontello.woff
tmap.id: f14f8347-19f1-4cf4-905b-fd8fe0000cdf
type: application/x-font-ttf

Y3JlYXRlZDogMjAxODExMDgwNzQyMTQ1MTINCmNyZWF0b3I6IENoYXJsZXMgRGVsYsOpDQptb2RpZmllZDogMjAxODExMDgwNzQyMTQ1MTINCm1vZGlmaWVyOiBDaGFybGVzIERlbGLDqQ0KdGl0bGU6IGM6XFVzZXJzXENoYXJsZXNcZGV2XHByb2plY3RzXHRpZGRseXdpa2lcd2lraVx3aWtpXHRpZGRsZXJzXGxpYnNcY2tlZGl0b3Jcc2FtcGxlc1x0b29sYmFyY29uZmlndXJhdG9yXGZvbnRcZm9udGVsbG8ud29mZg0KdG1hcC5pZDogMjg4ZWEwOTAtZTg1MS00M2Y4LWJmNWMtN2VhYzk5NTYyZjk0DQp0eXBlOiBhcHBsaWNhdGlvbi94LWZvbnQtdHRmDQoKWTNKbFlYUmxaRG9nTWpBeE9ERXhNRGd3TnpNME1UZ3lNemNOQ21OeVpXRjBiM0k2SUVOb1lYSnNaWE1nUkdWc1lzT3BEUXB0YjJScFptbGxaRG9nTWpBeE9ERXhNRGd3TnpNME1UZ3lNemNOQ20xdlpHbG1hV1Z5T2lCRGFHRnliR1Z6SUVSbGJHTERxUTBLZEdsMGJHVTZJR002WEZWelpYSnpYRU5vWVhKc1pYTmNaR1YyWEhCeWIycGxZM1J6WEhScFpHUnNlWGRwYTJsY2QybHJhVngzYVd0cFhIUnBaR1JzWlhKelhHeHBZbk5jWTJ0bFpHbDBiM0pjYzJGdGNHeGxjMXgwYjI5c1ltRnlZMjl1Wm1sbmRYSmhkRzl5WEdadmJuUmNabTl1ZEdWc2JHOHVkMjltWmcwS2RHMWhjQzVwWkRvZ01HUmpZemRrTjJFdFptRTNPUzAwTVRaaExXSmxaRE10TkRWaFlUVTVOV0pqTkRZekRRcDBlWEJsT2lCaGNIQnNhV05oZEdsdmJpOTRMV1p2Ym5RdGRIUm1EUW9LV1ROS2JGbFlVbXhhUkc5blRXcEJlRTlFUlhoTlJHZDNUbnBCTVUxcWF6RlBWRlZPUTIxT2VWcFhSakJpTTBrMlNVVk9iMWxZU25OYVdFMW5Va2RXYzFselQzQkVVWEIwWWpKU2NGcHRiR3hhUkc5blRXcEJlRTlFUlhoTlJHZDNUbnBCTVUxcWF6RlBWRlZPUTIweGRscEhiRzFoVjFaNVQybENSR0ZIUm5saVIxWjZTVVZTYkdKSFRFUnhVVEJMWkVkc01HSkhWVFpKUjAwMldFWldlbHBZU25wWVJVNXZXVmhLYzFwWVRtTmFSMVl5V0VoQ2VXSXljR3haTTFKNldFaFNjRnBIVW5ObFdHUndZVEpzWTJReWJISmhWbmd6WVZkMGNGaElVbkJhUjFKeldsaEtlbGhIZUhCWmJrNWpXVEowYkZwSGJEQmlNMHBqWXpKR2RHTkhlR3hqTVhnd1lqSTVjMWx0Um5sWk1qbDFXbTFzYm1SWVNtaGtSemw1V0VkYWRtSnVVbU5hYlRsMVpFZFdjMkpIT0hWa01qbHRXbWN3UzJSSE1XaGpRelZ3V2tSdloxcFhVVE5OUjAxNVdWUlJkRTlVU20xTlV6QXdUVEpTYlV4WFNteGFWMDEwVGpKRmVVMUVZekJPUjBwb1QwUkplVVJSY0RCbFdFSnNUMmxDYUdOSVFuTmhWMDVvWkVkc2RtSnBPVFJNVjFwMlltNVJkR1JJVW0xRVVXOUxWMVJPUzJKR2JGbFZiWGhoVWtjNWJsUlhjRUpsUlRsRlVsaG9UbEpIWkROVWJuQkNaV3N4VldFemNFOWhhMFpQVVRJeFQyVldjRmhTYWtKcFRUQnJNbE5WVms5aU1XeFpVMjVPWVZkRk1XNVZhMlJYWXpGc2VsUXpRa1ZWV0VJd1dXcEtVMk5HY0hSaVIzaGhVa2M1YmxSWGNFSmxSVGxGVWxob1RsSkhaRE5VYm5CQ1pXc3hWV0V6Y0U5aGEwWlBVVEl3ZUdSc2NFaGlSekZvVmpGYU5WUXliRU5TUjBaSVVtNXNhVkl4V2paVFZWWlRZa2RLU0ZSRlVuaFZWRUpNV2tWa2MwMUhTa2hXVkZwS1VqQXdNbGRGV2xkbGJIQlpVMjV3V1ZKVk5YWlhWbWhMWXpGd1dWUnRUbUZTTVZsNVYwVm9RMlZYU1hsalIzaGFUVEZLTmxkRmFGTmpSbkJJVlc1T2JGZEhVbmRaVkVweldUSlJlV0pJU21oV2JtZDZXVlprTUdOR2FFbFZia0poVWpGS2VsZHNhRXRsYkdoSVpVaENXbUpyTldwWFZFb3dZa1p3U0dKRVFtbE5NSEJxV1hwS1IyUkhUa2hsUjNocVRWaG5kMWxxU1RWak1XeDBVbTVzV2sxcWJERlhiVEZ6WW0xU1dWTnRhR3RTZW13MVYwVmtZV1J0U25WVmJVNWhZbFJzTVZwRlpGZGpNa3BJVDBoV2EwMXFiSFJYYldOM1V6SlNTRTFYYUdwUmVsWjNWMnRTZGxvd01WaFRWRUpPWlcxME0xUXdVazVrUm5CVlVtMW9ZV0ZVUVhkVWJYQmhZVlY0V0ZOdE1WQlNNREV3VjIweFQySkZOVmhXYlhCUFVqRnJlVlJyWkZkaGExSlNZMFJDYkZkRlNuTlVNbXhEWVVkT1NWRnVUbWhXTURWdldrVmtjMlJ0U25CUFZGSk5WakZ3TWxsdE5WSmtSMUpKVlcweFJWVlhPVXhXTVZKUFV6SktSMkpHYkZaaVdHaG9WV3RqTldKc1VsaGpSVXBzVWxSc1JsVnNhRzlVYkVwSVdrUk9WV0pZUWs5VWJGVjRUbXhhV1dKRk9WTlNiRnBRVlZSSmVGUXlWbGRqUm1oVFlXdEtjRlJVUW5KTmJFNVdWbXM1YVUxWGVGcFZNalZQV1Zaa1JrMVhOVlpoTWxKWVdYcEdjMlZzVVhwUmExWldWMFZKZDFkWGNFdFZNazVIWTBoU2FWSXphR2hWYTJNMVlteFNXR05GU214U1ZHeEdWV3hvYjFSc1NraGFSRTVWWWxoQ1QxUnNWWGhPYkZwWllrVTVVMUpzV2xCVlZFbDNaVWRTYzJORmFHbFNla1p2Vm1wR1lVNVdVWGxpUlU1VFVqQmFTVlZ0TlhOaFZrbDRWMnBhVkZaV1dsUlphMlJMVTBaU1JsVnVhRlpXUlVwTlYydFdhMk13TVVoVGEyaFhWa1p3UzFWcVFYZE5iR1JHVjJ4a2JHSklRbHBWTWpWM1YxWktWazVZV2xoV2JXaE1XWHBHZDFkV1VuUlViVVpUVFZac05WWXdWbTlSTWxaWVUxaHNhbEl6YUdGVVZFWkxUbXhrUm1GR1RtcFNia0pKVmxjMVQySkdaRWhWYm1SYVZrVndlbGRVU2xKbFYwcEpVMjFvVjJKdFpEWlhWbHByVFVkT1IyRkZiRlppYTBwb1ZXcEdTMlZzWkhOaFJYUnNZa2RvU1ZwVmFFTlhiVXB5VGxkd1dGWkZiM2RaYTFwM1UwZEtSVkZ0YkU1TlNFSnhWMWh3UzFJeVVraFVhMmhzVWpOb2NWUldhRzVrTVd4eFUxUldhazFYZURCVmJUVnpWMnN4Y1dKRVJsaGlWRVo2V1cweFUxZFdUblJoUjNSVFpXMTNNVll3Vm10WlYxSjBVMjVXVm1KVk5XaFpiRkp6VFZad1JscEdaR3BOYTNCSlZEQm9WMkV3TVhGaVNGSllZbGRPTTFWNlNsTlRSVEZZWVVkd1VtVnNXak5XTW5SVFpHeHZkMDVXVm1obGEwcFBXV3hXWVdOc1VsVlRiRnByVW01Q2VGWkhNWE5VTWxaVlVWaGtXR0pIVW1GVVZWWTBWbGRGZW1ORk9WTk5WbGwzVmpKMFUyTnJNVmRpUkZwV1ZrVktUMWxzV25KbGJGSldXa1phYkdFeFNsTlpNRkpEWWtaa1JsTnVUbFZOYlhoRVdWVmtUMU5XUm5WVWJXaFhUVVJXZGxkclZtdGpNbEowVTI1Q1VGWkdTazVXYWtaM1RXeHNkRTVXU210U01VcEtWbGN3ZUZKV1ZsaFBWWGhYVFZaS1VGVjZTa3RTTWtwSFlrWmFhVmRIYUc5V1YzUnFUbGRLYzFWc2FHcFNWWEJ6Vld4U2MxSnNWbk5oUnpsVllrVndTVmRyVWs5V1YwcFpVV3M1VldFeFZqUldiRnB6VG14V2NrOVhhR2xYUmtwUlZsWlNTbVZHVVhsV2JHUnFVbTFvVkZsWGRFdGpSbEpWVVc1S1RtSkZOVmRXYlhNMVlWVXhXR1ZHY0ZaTmFsWlFWMVphYTFKck1WaE9WbHBvVFd4S1dWZFljRWRqTWxaelZWaHdVbUV4V2xkV01GWktaREZrV0dORmRGWk5helZJV1RCb1UyRldTWHBoUjJoV1lUSk5NVmx0ZUZOWFIwNUdVMjE0VTFaSGVFZFdWM2h2WWpGU2MxTnJhR0ZTUlRWV1dXeG9RMVF4VW5KV1dHaFhWbTEzTWxaWGN6VmhSMHBaVld4Q1ZsWkZiRE5hVldSVFl6Sk9SbUZIYkZObGExcDJWbTF3UjFsVk5WZFZXR3hwVWxVMVZGVnFRbUZUVmxaMFRsaE9hRlpyYkRSV01uQmhWa1phVjFkc1VscGhNbEpNVlRCYVUxSnNWblZoUmxwWFVsVndUbFl5ZEZkaE1rMTNUVlZvVkdFeWFGaFdhMXAzVXpGV2NWRllaRTVpUjFKSFZqSjRhMkpIU2tsUmJIQldUV3BXTTFZeFdrdFdhelZaVjJ4b1YySlhhRTFYV0hCSFpERmtWMVZ1VWxWaVZWcFVWRlphYzA1V1dYZFdiVGxTVFd4YVdWVXhhSE5oYkVsNllVZEdWVlpGV2t4VWJYaHJVbTFHUjFSdGNGTmlhMHBLVm14ak1WUXlTa2RhUldoV1ltMVNZVlpyVm5kbGJHUlZVMnhLYkZZd2NFcFZNakZ2VmpKS2RGcEVXbGhXYkhCeVZGVmtUMUl5UmtaaVJscHBZVEJ3YjFaWGNFZFRNbFp6V2toT2FGSllVbk5aYTJSdlUxWmFTRTVWZEZwV2JHdzBWVEkxYTFsV1NsaFVWRVpoVm14d2RsVXhXbE5rUjBaSVlrWm9VMVpZUVRKV2FrbzBZakZSZUdFemJGWmhNbWhSVmpCYWQyTkdWbkZSYm1ScFRWZDBOVlJXVlRWaE1rcFdZMFJDVjAxcVZrUlhWbFYzWlVaa2NWWnNhRmRpVjJoVlYydGplRlF5VFhsV2EyaE9Wako0VDFsWGVGZE5NVmwzVm0xMFdsWXhTakJWTWpWWFZtMUtXV0ZJUWxaaGF6VjJWRmQ0VTFORk5WaGtSM1JwVTBWSmQxWnFSbFpOVmtwSVUyNU9WR0ZyU2xsV2JURnZVVEZ3UjFwRlpGaFNiRnBXVmpKMGQxVXhTblZSYm14WFVteGFjbFl5TVZKa01ERlhZVVpTVjFKc2NFOVdiWEJDWlVVd2VGcElVazVXYkhCeVZXeFNWMU5XV1hoaFNFNWFWakJhVmxWdE5VTlhSMHBJVldzNVZWWXpVVEJXYkZweVpXMUtSMk5HWkU1VFJVbzJWbXRhWVZVeVJYbFRiR1JwVW14YVZsWnJWbmRoUmxaWFZXdE9WVkp1UWtkWlZXaFBZVEF4V1ZGc1dscGhhM0J5VmpKNGExSnNUbkZVYkhCb1RXeEtObGRXWkRSak1XUlhWbTVXVW1KWGVFOVpWM2hLWlZaa2MxWnJOV3hTTUhCWlZURm9jMVF4V2taVGF6VlhUVVp3UzFwRVJtdGtSbXQ2V2taU1RsSlVWWGRXYkZwdllURldSMWRzYUZaaVJrcFpXVmQwUzFOR1ZsVlNhMlJYWWtWd2VWVXllRXRXTVZwWFkwVlNXR0V4V21oWmVrWkhZekZLYzFac1dtaE5TRUpVVm0xNFYxbFdSWGhXYkdSWFlrZFNUMVZ0ZUdGV01WWjBaRVYwVjJKR2NGZFdNblJQVm14YWMxZHJhRlpXTTJoSVZtMTRTMk5zVG5OVGJHUlhWbTVDUlZac1dtRldNVWw0VW01T1UySkdjRlJaVkVKM1ZURmFjMVp0UmxKTlZscFlWbTEwYTFWdFNrWlhiR1JXWWxoU1RGWlhlR0ZXYkdSeVZXeGtWMVp1UWxsV1IzaFdUbFpPV0ZOcldsUmlSWEJZVm14YWQxSldXbk5hUkVKVFRWVmFlbFZ0ZUdGVk1rVjRZMFprVjJKR1dtaFZWRVpYVmpGYWNtUkdhRk5pUm5CS1ZtMHhNR0V4V2tkWGExcHFVbGQ0V0ZWdWNGZFdSbGw1WlVkMFUySkZjSGxWTW5oTFZqRmFWMk5GY0ZkV1JWcFlWV3BHUjJNeFNuTlhiRTVwVWxWd2IxWkdWbGRaVmtWNFZteGtXR0pIVW5OV2JYaGhWakZhZEdOR1RtaFdiSEJIVkd4a1IxWldXa1pYYWtwaFVrVmFVRlp0ZUV0amJFNXpVMnhrVjFadVFqUldiWGhoVmpGSmVGSnVUbE5pUm5CVVdXdGFkMVV4V25OV2JVWlNUVlphV0ZadE1EVlZiVXBJVlc1c1dtRnJOV2hXUkVaaFkyMU9SVkZzYUZkU1ZYQjVWMVpTUzFVeFNuTlRia3BVWWtWd1dGWnNaRE5OVmxwWFYyeGtVMDFWV25wVmJUVlBWVzFLY21OR1RsZGlSbHBvVlZSR2MyTXhaSEprUjNCVFlsUnJNbFpXV2xOUk1WcFlWbTVLYWxORmNHRldiR1JUVkRGd1dHVkZaRmRpUlhCNVZUSjRTMVl3TVVsUmJHaFhWbXh3V0ZWcVJrZGpNVXB6VjJ4V2FFMUlRbFJXYlhoWFdWWkZlRlpzWkdGU00xSlRXV3RXWVZZeFZuUmtSWFJYWWtad01GUXhVbGRaVmxwWFUyeG9XRlpzY0RKYVJFWkxZMnhPYzFOdGJHbFNWM2N5Vm14YVlWWXhTWGhTYms1VllUSjRVMWxVUW5kVk1WcHpWbTFHVTFadGVGZFhhMlF3VkRGYWMxTnVhRlpOYmtKWVZsY3hTMVpYU2toaFJtUm9ZVEJ3YjFkVVNqUlNNVnB6VTI1S1ZHSkdTbGxWYWs1dlVrWmFWMWRzWkZOTlZWcDZWVEowYTFVeVJYZGpSazVYWWtaYWFGVlVSbE5YUjFKR1drWmtVMDFWV1hwV1Z6RjNWREZTZEZOc2FHaFNSWEJZVkZjMWIyTnNWblJsUldSWFlrVndlVlV5TVc5aFIwcFlZVVZTVjFac2NGaFZha1pIWXpGU2MxZHNUbWhOU0VKVVZtMTRWMWxXU2xkWGJHUlhZbFJzVmxscll6Vk5NVkp6VjIwNVdHSkdjRmxXUjNCVFZsWmFXRlZzYUZaV00yaElWbTE0UzJOc1ZuTlhiV3hwVm10d1JWWnNXbUZXTVVsNFVtNU9WMkpHY0ZSWlZFSjNWVEZhYzFadFJsTk5WbHBZVmxkNFMxUnNXbkpYYkdSV1lsaFNVRmxYYzNoamJVcEZWbXhrVTJWcldqSldWbVEwVWpGYWMxTnVTbXRTYkZwVVZteGFkMUpHV2xkWGJHUlRUVlZhTUZVeGFHdFZNa1YzWTBaT1YySkdXbWhXUmxwWFZqRmtkVlJ0Y0dsU1ZuQmFWMVJDVjJJeFVuTlhXR3hvVTBVMVYxUlZXbUZUUmxaWVpVVmtWMkpGY0RGVk1uTTFWVEZhVjJORlVsZFdiSEJZVldwR1QyTXhTbk5YYkU1b1RVaENWRlp0ZUZaTlZrVjRWbXhrVm1KVWJFOVVWM1J6VGxaUmVGcElUbWhXYkhCWVdXcE9hMVl3TVhWaFJXaFdWak5vU0ZadGVGTmpNWEJJVW1zMVUxWnVRa1ZXYkZwaFZqRmtkRlp1VGxOaVJuQlVXVlJDZDFVeFVsVlVhMDVxVm01Q1dGZHJXazlXUmtsM1YydHdXbFpXU2xCV01qRkhZMnMxVjFGc1ZsZFdiSEJKVmxaa05GSXhXblJVV0hCaFVtdHdXRlpzV25kU1JscFhWMnhrVldGNlZraFZiWGhoVlRKRmQyTkdUbHBXUlVWNFZrVmFZVmRYU2tWUmJFNW9aV3RhTlZkV1ZsZFVNa3BIVjI1V1VtSklRbGRXYlhoaFUwWldXR1ZGWkZoV2JFcDVWVEo0UzFZeFdsZGpSVkpYVm14d2FGZFdaRXRqTVVwelYyeE9hRTFJUWxWWFYzaFhXVlphVjJKSVJsTmliVkp6Vm14b2EwNVdXblJrUkVKcFVtdHNObFZYTVVkV2JVWnlWMnhTVlZac2NISldiRnBoWTFaa2MxTnNhRk5OVlhCUlZqRlNTMDFHU1hkTlNHaFlZbXMxVjFsVVNsTmpiRlp6V2tSU2FrMVdXbGxVVm1Rd1lVWktjbU5HWkZwV1ZuQk1XVlZrUjA1c1JuVmlSbVJPVm14d1ZWWldVa3RTYlZaSVZHdGFhRkpzU25CV2FrWkxZVVphV0dORlRtdE5hM0I2VjJ0b1QxbFdTWGxsUms1WFlrWlZlRnBHV21GU2JHUnlUMVpvVjJFelFqVldSbHBoWkRGYVIxTnNaR2hOTWxKb1ZXdFZNV0ZHVlhkWGEyUnJVakJ3UjFadE1UQmhWMFY0WTBSQ1dHSkdXbWhWZWtaTFZqRk9kVlp0Y0ZOV1JscFFWa1pqZUZVeFNuTmpSbHBZWVROU2NsVnRkR0ZsVmxKWFlVVjBWbUpWVmpOV01uaEhWMjFHY2s1WWNGWmhNbEpZV2tWYVYxWldSblJpUjJoT1lrVndVbFpxU25kU01rMTRWR3RrVTJKc1NrOVdibkJYVmtaU1ZsWnRSbWhTYkZwWlZGWlNRMWRIU2taaVJFNVhZbGhTZWxaWGVHRldiVVkyVVd4d1YxWXhTWHBXVmxKSFpESk9jMVJ1VG1wU2F6VlBWVzEwZDFac1dsaGtSbHBPVm10V05WWkhlR3RWTWtwV1YyeFNWVlp0YUVSYVJscGFaVVphZEdSR1RrNVNSbHBMVmpGU1QxbFdiRmhTYmxKb1VtdHdXRmxyWkc5aFJsWnlWMnRhYTAxVmNIcFdNbmhoWVVVd2VXRkdRbGRXTTJoWVZHdGFXbVZHU25OaVIwWlRWbTVDZGxkV1VrdFVhekZIVjJ0V1VtSnJOVk5VVjNoSFRURlZlVTVXVGxaaVJuQjVWakl3TlZsV1NrWlRhMmhXVmpOb1NGa3hXbGRrVmxwelZHczFVMUpzYjNoV2JYaGhWakZKZUZWWWFGUlhSMUpYV1ZSR2QxbFdiRmxqUlU1UFlrWndWMVpYTURGaVIwcElUMVJXV2sxR1dreFdWM2hoVmpGa2NrNVdaRmRpUm5CVVZrWldZV0V4VGtoVGEyaHFVako0Y0ZWdE5VTlpWbHB4VTFob1ZrMUVSa2hXVnpWUFdWWktXRlZzVmxwaE1YQlhWRlZhV21WWFVraFBWa3BwVW14WmVsWkVSbTlWTVZweVRWaFNWbUZyY0ZkV2JYaExZMnhaZUZaWVpHdE5WbG93VkRGYVlWWXhTblJqTTJSWVZrVmFXRlpxUmxOU01WcDFWVzFHVTFKVVZtaFdiVEY2VFZVMVYxWnVVazVXYXpWeFZXMTBkMWRXV2xoa1NFNVdZa1pzTlZwRVRtdFdiRmw2Vld0MFlWWnRVa2RhUkVaWFkyMUtSMXBHVGs1TlZXdzBWbXBHVTFNeFVuUlVia3BQVjBWYVZWbFhkR0ZXYkZKWFZtMUdUMVp1UWtkV01qRXdWa1phV1ZwRVZsVldWMmh5VmtSQmVHTldWbkZVYkZaT1ZteHZlbFpyV21GV01rNVhVbTVXYVZKdVFuQlZhazV1VFd4a1dHUkhPVlZpVlRWNVdYcE9iMVpHWkVoaFNFcFdZbTVDVkZSc1dsZGpiVVpHWkVkMFYySkdiM2RYVmxaVFZESkdTRkpZY0ZaaGExcFdWbXhrVTFOR2EzZFhhM0JzWWtkU2VsWXlNWE5VYkdSR1UyczFWMkZyU2xoVmJYTjRaRVpPYzJKR1ZtbFNWbkJhVjFkMGIxRXhVbGRWV0doV1lUQTFjVlJXWkROTmJGWnpZVWhrVjAxWFVraFpNR2h2VmxkS1IyTkdhRmRTTTJoSVdrVlZNVlpzY0VoU2JGSlRZVE5CZVZac1VrdE9Sa1Y0VjJ0a1lWTkdXbGhaYlhoM1kwWnNjbFpVUmxkU2JGa3lWVEowYTFSc1NsVlJhbHBYVWpOb2FGWlhNVmRrUmxaVlVXeGthR0V3VlhoWGJHTjRWREZaZUdORlpGWmlWVnBVV1d4b2IxUldWWHBqUldSU1RXc3hORlpIZUdGWFIwcFdWMnhrVm1KWWFETlpWVnBUWXpGc05sSnRkR2xTVm5CaFYxUkNiMUV4VlhsU1dHUm9UVEpvWVZsVVJuZFZSbHAwWlVaa1dGSnJOWHBXUjNoTFlWZEtSMkl6Y0ZoV00xSjJXWHBHYzFZeFVuVlNiRnBwWWtoQ2QxZFhlRzlSTVZKSFZXNUtZVkpGU2xsVmJURlRUVlpzVmxacmRGcFdNRlkyVlZkNGExZHNXa1pqU0VwV1pXdGFlbFp0YzNoV01VNTBZMFpPVTAweWFGQldiRkpIV1ZaWmVGTnVUbFZpUmxwVVdWUktiMk5XVWxkV2JtUlhWbXhLV0ZkclZtdFZNREZYVTJ4YVYwMXFSWGRXVjNOM1pESktSVlZ0UmxkV2JGWTBWa2QwVm1WR1NsZFNia3BYWWtaS1QxWnNhRUpOUmxweVYyMTBWMDFyVmpSV01qVlRZVVpLYzJOR1JsZGhNVnBNVmxkNFYyUkhVa2xYYXpsVFlsaGplVlpYTURGaE1WWkhWMjVLVDFaR2NGZFdiWGhMVWtaWmVVMVZPVmROVjFKNFZqSXhjMkZGTVVWV2EyeFhUVzVvZGxkV1dscGxSbHAxVm14U1YxSlZjR2hYVnpFd1UyMVdjMWRyWkdoU01GcHdWV3hTVjFZeFdsaGtSMFpYVmxSQ00xUnNWbk5aVmxvMlZtdDRWMDF1YUhsYVZ6RkhVbTFLU0dKSGJGZE5NbU41Vm1wSmQwMVdSWGhXYmxKVllrZG9jbFZzYUVOalZscDBaRWhLYkZadFVsWlZNakYzWVRKS1NWRnJiR0ZTVjJoeVZteFZlR1JYUmtaa1JtaFhZa1p3VFZadGNFZFVNVXAwVW10a1dHSlhlRTlXYlRWRFpERmtWMWRzVGxwV2EzQllWV3hvYjFadFNraGxSVFZWVmpOb2FGWnJXbUZqYkZweVQxZDRWMkpGY0RaV1Z6RXdUa1prYzFkc1ZsTmlWVnBoVm10V1lXTnNiRFpSVkVKc1ZsUnNWMWxWVlRWVk1VcFZWbXBDVjFKc2NGUlZWekZYVjBaYWNscEhiRk5TYTNCWVZsY3dlR0l4VlhoVmJsSlBWakJhY1ZWc1VsZFdNWEJHWVVVNVYwMVdiRE5XTW5CVFdWWktkR0ZGZUdGU2JIQlRXa1JLVTFKdFVraGpSMnhwVWxac05sWnFTWGhOUjBWNVZXNU9hVTB6UW5CVmJuQlhWakZXY2xadVpHcFdiVkpaVkd4V1QyRXdNVmRUYWtaYVRVWndURlpITVV0V01rNUpVVzFHVkZORlNsbFdiRkpMVXpGSmVGWnVUbUZTYkVwUFZGWldkMlZXV1hoVmEzUlVUVlphV1ZaWGRHdFZNa1Y1WVVac1YySkdTbGhXTW5oWFl6SkdSbVJHVWs1V00yZzFWMVpXWVZVeGJGaFRhMXBxVWxVMVYxWnRNVk5XUmxZMlUydDBVMkpXV2twVmJYTTFZVlpLVjJORmJGZGhNVXBEVkZaYWMxZEdWbGxhUmxacFlsZG9XRmRYZUZOVk1EVkhWMnhvYWxKNmJGbFdiVEZUWlVaYWMxVnNUbFpTYTNCWFdUQldhMWR0Vm5KaWVrSmFWbnBHVEZWdE1WTlRWbVJ6VVd4T2FWTkZTbGhXYkdoM1VUSkplVk5yWkdsTk1sSlJWbXBDWVZac1dYZGhSVXByVFZaS2VGVXljelZXTVZweVRsVndWMVo2Um5wWlZWcGFaVVprY1Zac2NHeGhNblEwVmxkMGExSnRWbFpPVmxaVllraENUMVJYTlc5a01WcEhWV3RrYTJKV1dsZFViRlpYVmpGa1NHVkdWbFppV0ZKWFdsWmFhMk5zWkhSUFYyeE9Va1ZWZUZaRVJtRlVNVkpHVFZoU2FGTkZjRmhWYlhoTFZrWnNXRTFXWkZOaVZWcEtWVzEwTkZSc1RrWlRhazVYVFdwQ05GcEhjM2hXTVVweFZtMTBWRkpVVmxSWFZ6RXdXVmRTUjJKR1pGZGliVkpYVlcxek1XVldjRVpYYlhSV1RVUkdXVlpYY3pWWlZsbzJWbTV3WVZKRlJYaFZha3BMVTBVeFYyTkZOVmRpYTBvMFZtcEtkMUl4U1hsV2JHaFRWMGhDYjFVd1ZrdFZNVmwzVmxSR1dHSklRbGhaVlZwclZXc3hWMk5GYkZwV1ZscFlXVlphUzFKc1RuTlZiR2hvVFcxb1RWWXhXbUZoTWxKSVZWaHdhbEl5YUhCWmExWjNWakZhVlZGc1RsUk5hMncxVmtkd1YxVkdTa1pYYkdSVlZrVkthRnBYZUhOV2JHUnlWR3hhYVZaWVFYZFdWM2hUVXpGYVJrMVdXbE5YUjFKWldXeFNSMk5zY0ZkV1ZGWlhUVlphTVZWWGVHRlhSa3BaVVd0MFYxWXpRa3hXVkVaV1pWWk9jVlpzUWxkaVZrcFdWbTAxZDFZeFVYaFZiR1JoVTBad2MxVnNVa05PUm1SeVZXdE9WV0Y2UmtsV1Z6VkxWakZhYzJORk9WVldSVnBvVkcxNGQxSnNjRWhsUjJ4b1pXeEdORll4VWt0a01VVjRWbXRrV0dKcmNIQlZhMVpoVlVaU1ZWSnVaRk5XYmtKR1ZrZDRhMVJzV25OVGJGWmhVbGRSTUZaVVJtRmtSMVpJWVVaV2FFMVlRbmxXVjNSV1pVWlplRnBJVWs1V01uaHdXV3RvUW1WR1dYbGxSbVJVVFZad1dGWXlkRk5WUmxwV1RsaENWVlo2Um5aVVZscFRVbFpHYzFwR1RsZGlhMHBZVmtkNFYyUXhXWGxTV0hCaFUwZDRWbGxyV25kbGJIQkZVbXhhYkdKRk5YcFdSekV3WVZaYVJsSnFWbGRXUlhBMldsVlZlRlpyTVZsVmJXeFRWMGRvVkZaR1VrZFdNREI0VjJ4V1UySlZXbFpWYlhoM1RVWmFXR042Vm1oaGVrWllWako0YTFaWFJuSlhibkJoVW5wR1VGVXhXa2RrVmxaMFlrZHNVMVpYT1ROV01XUTBWakF4UjFScldsQldiV2hvVkZSS2IxZEdWWGRoUlU1V1VteFpNbFV5ZUd0V1YwcFhWMjVzWVZaWGFFaFdSbVJYWkVadmVtSkdhRmhUUlVwWVZrWmFZVlF4U2xkalJWcHBVbXhhYjFsc1drWmtNV1JYVld0T2EwMUVSbmxVVm1oUFlVWkplbUZHWkZWV00wSklXa1ZhWVZZeFVuVmpSVFZYWWxob1dsWnNXbE5XTVZwSFUxaGthVTB5VW1GWlYzUmhVa1pyZVdWRk9XdFdiRnA2V1ZWYVUxWXlTa1pqU0d4WVlURmFXRmxxU2tkWFJrNXlZa1pLYUdWclducFdiWGhYVmpBMWMyRXpiR3hTYlZKaFZtcEdTMVpzVlhsT1ZUbFhUVVJHTVZWWGVFZFhiVXBaWVVod1ZtSllhRXRhVmxwM1UwWktkR05HVGxkaVdHTjNWbXhTUjFsV2JGZFdiazVxVWxad1ZGWXdaRk5qVmxKVlVtNWtUazFYZUZkV1YzTTFWVEF4V0dWR2JGWk5Wa3BZVm1wR1lWWXhUbk5pUm5CWFRURktWVlpzVWtKT1ZrNUhVMjVPYUZKck5WVlZhazV2VkRGa1dHVkdaRTlTYXpWNVdYcE9kMVl5U25SVmJGSlhZbGhTZVZwVldsTlhSMDVHV2tVMVUySllVVEZXUkVacVpVZEtSMU51VWxwbGExcFdWbTE0UzFaR2JIUk5WVFZyVFd0YVNWa3daSE5XTWxaeVYycE9XRlpGU2xSWlZFcFhaRVpLYzFkc2FGZFNWbkI1VjFkNGEwNUdVbk5oTTJoVlZrWmFiMVp0ZEhkTlJteDFZMFZPVmxKcmNFZFViR2hQVmxkS1ZWWnJlRnBOVmxWNFZqRmFSMk50UmtaT1ZUVm9UVEJLU0ZadE1IaGpNREZIVlc1T2FWSnRVbFZXYTFwTFlqRnNWVkZ0Um1wTlZuQlpWRlZTUjJFeVNraGtSRlpWVm14S1JGWlhNVXRUUlRsWllrWm9XRk5GU2xGWFYzQkxWVEpPU0ZSWWNHaFNiRnB2V1Zod1YxWnNXa2hOU0doVFlYcENOVlZ0TlV0aE1VNUlZVVphVjAxR2NHaGFSbHBYVjBkU1NGSnNaR2xXYTFsNlYydFdVMVF4Vm5OWGJGcHFVMGhDVmxsWGRHRlhSbFpZWlVWa1QySkZXbmhXTWpGM1lWWmFXVkZyV2xkTlZuQm9WbGN4VjFOR1RuTmlSazVwVmtWYVVWWlhkR3RpTWxKWFdraEtZVkl6VWxsV2JYTXhWMFpzZFdORlRtbFNNSEJhVmxkd1QxWnRSWGxoUmxKWFlXdGFWMXBXV210ak1VWnlUMVpPVGxKdE9UTldhMk14WXpBeFIxZFlaRTlXYlZKb1ZGUkdkMkZHV1hkYVJ6bFdWbTFTTUZwRlpIZGhiVXBYVjJ0V1dtVnJOVE5XVkVGNFUxZEdSVlpzYUdoTmJFcFJWMVpTUW1ReVZsaFZhMXByVW0xU1QxbHJWbmRoUmxweVdUTm9WVTFzU2toV2JYUlhWa1phUjFOc1dscFdla1V3Vm14YVdtVlhVa1ZSYlhoWFRVUldOVll5Y0U5VE1WbDRXa1ZrVkdGc1dsaFpiR2h2VTBad1IxZHNaR3BXYlZKNFZrY3hkMkZGTVhGaFJFNVhVa1ZhYUZkV1pFZFRSbHB5WVVkb1UxWnNjRlpXUmxKRFpHMVdjMkpJUmxWaVIxSnpWbXhTVjJWc1draE9WVGxYVW1zMVNGWnRjRTlaVmtwWFkwVjRWVlpzV1hwYVJFcFRVbTFXU0dKR2FGTk5NREV6VmpGa01GVXhiRmRYYmtwT1ZtMTRWbGx0TVRSalJteHpZVVUxYkZKc1dsWlZNblF3Vm14YWRGVnNaRlZXYlZKNlZtMTRXbVZzYjNwaFJsWlhUVEJLZVZkclZtRlRiVlp6WTBWYWFsSlVWbFZWYWtwdVpXeGtjMWR0ZEdwTlZuQjZXVEJhYTJGR1RrWk9WbHBWVm5wV2RsWkdXbGRqYkZaeVQxWmthVkp1UWxwV1JFSlRVekpLUjFkdVNsaFdSVnBvVm14a2IyRkdXa1pYYmtwc1ZsUnNSbFpYY3pWVk1XUkdVMnhhVjJFeFdsaFdSekZYVTBaU2MxZHRSbE5TYTNCWFZsZHdTMVV4VmxkYVNFcFlZVEZ3VUZacVFURlhWbFp6Vld4T1YwMVZOVWRWTW5CTFZqQXhTRlJVUmxkTmJtaExXbGQ0ZDFOWFRraGhSazVPWWxkamQxWnNZekZrTVVWM1RWaE9WMkpyY0ZWWlYzTXhWakZTVmxaVVJteGlSMUo1Vm0weFIyRkZNVWxWVkVwV1ZqTkNXRmxXWkV0V01rbzJVV3hhVGxJeWFFbFdSbFpyVkRKT1YxUnVUbEppVjJodldXdFdjbVF4V25OYVJGSnBUV3RzTTFSc2FFOWhSazVJVlc1T1YySkdjR2hhUjNoWFkxWk9jMk5GTlZOTlJuQmhWbFJHVTFReFdYaFhXR2hxVWxaS1dGbHJXa3RTTVhCRlVtNU9hbFl3V1RKVk1uaExWakZKZUZOdVdsaGhNbEYzV1ZSS1IxWXlUa1pYYXpWWVVtNUNWMVpxUWxkVE1XUkhXa1prYUZKWFVuSldiR2hTVFd4YVdHTkdUbGRpUlRWSFZHeGpOVlpXU2taalJYUlZZa2RTVEZWdGVHdGtSa3B6WTBaa1RsSnVRbGRXYlhSVFZERlJkMDVWWkdwU2JGcFdXV3RrVTFVeFduRlNibVJZWWtad1NWa3pjRmRpUjBwSVpVWmtWVTFXY0ZCV01GcExZekZPYzFkc1VteGhNWEJOVjJ4YVZrMVdTblJTYTJSVllsaFNiMXBYTVRSVGJHUlhXVE5vVmsxVldqQldiVFZIVlRKS1IyTkhhRnBXUlZwTVZtdGFWMWRIVWtsVGJYaFRZa2hDVjFaWE1YZFZNVkpHVFZoV1VtRXllRmRhVjNSTFkyeGFTR016YUZSU01WcEtWVzE0YjFVd01IbFZWRXBZWVRGS1NGVXlNVkpsUmxaeldrWm9hVlpXY0U1V1JsSkxWREExVjJKR2FHeFNNRnBaV1d4YVMwMVdXa2RWYkdSVllYcEdTRlp0TlhOWFIwVjVZVVZTVm1GcldtRmFWM2hUWTFaS2MxcEdhRk5pU0VKdlZtdGtkMUV5VVhsV2JrNVlZVEZhYjFSVVFuZFZNWEJZWkVWd2JGSnNTa3BaTUZaUFlrWktXVlZVU2xoaE1YQjJWakp6ZUZkR1VuRlViR2hYVFRKb2VGZHJaRFJrTVU1SFZXNUthRkl6VW5CVmFrRXdUV3hrVjFWcmRHcE5iRVl6VkRGV2IyRnNTbFZXYlVaYVZucEdkVnBFUmxkV1ZsSjBVbXMxVGxKR1NYcFdWRVp2WXpGYVNGWnVTazlXTW1oWFZtMTRTMVZHV25SbFJrNVBZa1p3ZWxWWGVFdGhSVEZ6VTJ0U1dHRXlVWGRaZWtaclVqSk9SbGRzVG1sVFJVcDZWbGR3UzJJeGJGZGlTRTVoVW1zMVVGVnFRbUZYYkZwMFRVUkdWV0pWV25sVWJGWnJWMFphTmxKdGFGZE5ibEY2V2tSS1QxTlhSa2hTYldoWFVqSmplVlpyWkRCaE1VbDRVMWhvVjJKck5XOVZiR2hUVjFaV2MxVnVTazVTYlhRMFZsY3hNR0ZXU25WUmJIQldUVzVTV0ZaSGVHRmtWa1p6VVd4a1YwMHhTWHBXYWtaaFpESk5lVk5xV2xaaVdFSndWakJXUzFReFduUmtSMFpwVFZkNFdGZHJhRWRWTVZwR1kwWmFWMkV4V2pOV2ExcFNaVVprZEZKc1dsTmhNbmN5Vm1wSk1XUXhXa2RYV0hCU1lrWmFWbFpzV25kU1JscEZVVzV3YkZack5YcFpNRlUxVlRKS1dHRkZlRmhYU0VKUVZsUktWMk14V25WVmJVWlRZVE5DYUZkWGVGZGpNbFpYWTBWV1ZHSklRbEJWYWtaaFVteGtjbGw2UmxaTmExcDVWR3hqTlZZeVNsbFZiR2hXWVRGVmVGVnRjekZXYkZwelZXeGthV0V3Y0haV01WcGhWakpPZEZac2FGUmlhelZXV1d4U2MyTkdiSFJsUjBaUFZtMTRWMVpYTVVkaFZURkZWbXBHVmsxcVZqTldha3BYWTJ4S1dWcEdaR2xXUmxveVZsUktORkl5VWtkV2JsWnFVbFJXY0Zsc1pFOU5NVnBIVld0a1UwMVZXbnBaTUZwdldWWktWbU5JU2xkaVdGSm9XVEo0VW1ReGNFWlBWVFZYVmtkNFdsWlVTbmRaVmxaeVRWWm9iRkpXY0ZaV2JYaExWVVpXY2xkc1pGUlNWRlpYVkZaa2QxUnNTbGhqTTJoWFRWWktURmxVU2twa01ERlpWbTFzVTFacmNGWldWM1JoVXpKV2MxWnNhRTlYUlRWVVZXcEdZV1ZHYkZaaFJVNVZUVlp3VjFrd2FGTldiRnB6VTJ4b1YxWldjRmhXYWtaUFpFVXhXR0ZGTlZOaVNFSlJWakowVTFFeVRYaFViazVxVWxkb2FGVXdWVEZWUmxsM1drVTFiR0pHV2xoV2JYUmhZVEpLUms1V1pGcGhNWEI2V1ZWYVMxZEhWa1pYYkhCc1lUQndXVmRYZEdGVmJWWkhVMjVPVm1KR2NGVlZhazV2VlZaa1YxVnJUbGRpVlRWNlZrYzFTMkZXU1hwUmJXaFZWa1ZLV0ZSWGVGWmxSbHAxVkd4b2FWWldjRFZYVkVKWFpERlplRmRZY0ZKaE0xSm9WVzE0ZDFJeGNGaE5Wa3BzVmxSR1YxWkhNVFJXTVZwVlZtc3hWazB6UWtoVmFrWlhZekpPU1ZOc1pGaFNNVXBYVmtaU1MxVXhXbk5hU0VwWFlsaFNjMVpxUWxwTmJGcDBUbFYwVlZaVVFqTlZNakZIVm1zeFIxTnJlRmRXTTJoTVZXeGFhMk5XWkhSalJtUllVbXR3TTFadGVHRldNREZJVld0a2FsSldjR2hWYm5Cell6RnNjMVp0UmxaV2JGcDRWVzEwTUZaR1NYZE9WRUphWldzMU0xWXdXbFpsYkZaVlUyMUdWMVp1UWpWV1IzaHJVMjFSZUZwSVNtRlNiV2h2VkZWa2VtVkdXWGhYYlVaVVRWWmFTVlpIZUd0V1IwcHlZMGRvVjAxR1ZYaFdiWGhUWkVVeFZWVnNWbWxUUlVwWVYyeFdZVkl4V1hsU2JsSldZbTFTVmxac1pGTk5iRkp6V2taS2JGSnNTbmxhUlZwaFZHMUtTRTlJYkZkaVIwMTRXWHBHYTJOck1WWlhiWFJzWWtad2RsWnRNVEJaVjA1elYydGFWVlpHV205VVYzUlhUbFpzY2xkdFJtaFdNRnBhVmxaU1ExZHNXbk5XV0doWFZrVndURnBHWkVkVFZuQklVbXhrYVdFd2NFMVdNbmhoWVcxV1JrMVlUbFJoTW5oVFZtdFZNV014YkhOaFJVNXJWbXhLTVZsclVrTlZhekZXVGxSQ1YwMXFWblpaVnpGTFVqSkZlbHBHV2xkaVJuQkpWbFprTkZJeFduTlRia3BVWWtad1dGWnNXbmRTVmxwR1lVaEtUMUpVVmtoVmJYaGhWbXhrU1ZGdE9WZGhhMFY0V2tkNFdtVlhVa2hQVmxwWFlsaG5lRmRXVmxkTlJsWjBVbGhvYWxKVWJGbFpiRkpIWVVac1ZWTnNaRk5OYTJ3MldXdGtjMVpHU1hoVGEzQllWbXhhV0ZSVlZURmpNVloxVTIxNFUxWnVRbEJYVmxKSFdWWlNSMWRzV2xaaVdGSnlWRmR6TVdWV1dYaFZiR1JYVW14c00xWXllSE5XYkZwR1UyeENWMVpGV21GYVZsVTFWbXhrYzFkck5VNVNSbHB2VmpGa05GWXlVWGxVYTJSaFVsZG9hRlZyV2t0alZsWnpWbFJHV2xadGVIcFdNakZIVjJ4WmVGTnFRbFZOVmtwTVZqQmFTbVF3TVVsaFJtaFhVbGhDVlZaVVFtRlZNVXBHVDFab1QxWXdXbFJWYWtFd1RVWmFXR1ZHV2s5U1ZGWllXVEJhYTFWdFNrWk9WbVJXWVRGYVRGWlhlRk5TVmtaeVQxZHNhR1ZzV2twV2FrbDRUa1paZUZOWVpHcFNSWEJXV1d4b1UxTkdVbFZTYm1SVFRWVmFlRlpYTVhOaFZscDBaRVJPV0dKSFRqTlVWbFY0WkVaYWRWWnNhR2xpYTBwM1YxWmplRlZyTVhOV2JHaFBWbFJzVkZWc1VrZFRWbHB6Vld4a2FFMXJjREJYYWs1clZqRktWMWR1Y0ZwTmFrWkhXbFphYTJOck9WZGFSbVJwVmxSUmVGWnJaSGRVTWtWNFVtNVNVMkpIVW5CVmJHUnZWVEZhYzFadFJteFNiRnBaVkZab2EyRXlTbFpYYm14YVlUSm9TRll3V21GT2JGcFZVV3h3VjJWcldqSldhMUpIWVRKU1IxTnNWbFppVjJoUFZtMTRkazFzV25SbFIwWm9UV3RzTkZWdGVHdFpWa3BIWTBaV1ZrMUdWWGhWYkZwaFZteFdkR1JIZUZOaVJYQktWbXBKTVdJeFpISk5WV3hXWVROb1ZWcFhkSEpOVmxwRlUyeE9XRlp1UVRKVmJYaHZWVEZhU0dWR1VsZFdla0kwVm1wQmVGZEdVbGxoUjNCVFlrWndWbGRXVWtOak1ERnpXa2hPVm1FelVsUlpiRlpoVjFad1JWUnVaRlZpUm5CNVdUQlNRMVpyTVVkVGJFSmhWbGRTVTFwVldsTmpWbFowWWtkb1RtSnRaRFZXYlhoaFZURlZlVlJ1U2s1VFIzaFFWakJXZDJJeGJITlhiVVpYVm14S2VWZFljRWRYUmxwMFZXeHdWMkpVVmtoWlZFWmhZMnMxV1Zkc2NHaE5iRWw2Vm0xd1IxWXhaRVpPVm1SVllrWmFWRlJYTlc5TlJtUllUVVJHVlUxV2JEUldiVFZYVm14a1NGVnRPVmROUjFKVVZqSjRkMVp0UmtaVWJGWlhWa2Q0VjFaVVNucGxSbFowVTI1S1QxWnRlRmhVVm1SdlkyeGFTR1ZIUmxOaVJUVjZWbGQ0VDFSc1NsZGpSMmhYWVRKTmVGbFVSbFpsVms1WllrWk9hRTFFVm5sV2JYQkRXVlpTYzFkcldsaGlhelZ4VkZkek1WZEdXa2hqUlhSWFlrWndSMVl5Y3pGV01WcDBWV3Q0VmsxWFVrOWFWM2gzVWxaV2MxUnJOV2hoTUd0M1ZtcEdZV0V5VW5KTlNHaFhZVEpvVmxsc1VrZFdNVkpZVGxjNVYxSnNSak5XYkZKSFZUQXhWbU5FUW1GV1YyaHlXV3RrUzFKdFRrWk5WbkJPVmpKb2VWZFhlR0ZVTVVweVRsVldWR0pZUWs5VVYzaExWREZhY1ZKc1RsVk5WWEI2V1dwT2IxVXlTbkpYYkd4V1lUSlNWRnBYZUdGamJIQklUMVphYVZKVVZscFhWbFpYWWpGWmVWTnJhR2hTYldoWVZGVmFZV05zVW5OWGJYUlVVbFJHV2xaSGVFdFViVVY1WlVSV1YyRXhjRlJWYWtaV1pWWlNjbUZIYUZSU01taFZWMWN4TkdOdFZsZFdiR1JZWWxoU1dGVnFSa3RYUm1SeVdrYzVWVTFyY0hsWmFrNXpWakZaZW1GR1FtRlNNMmhYV2xkNGEyUlhUa1pPVmxKVFZsaENSMVp0ZEd0a01XeFhWMnRrYUUweWVGaFpiWFJoWVVaYWNsZHJkRmhTYlhRMVZHeG9hMVpYUmpaV2JIQmFWbGRTU0ZsWGMzaFRSMUpGVm14YWFWZEZTazFYYTFaaFV6RktkRk5yYUdwU2JWSllXV3hvYjFkc1dYaFhiR1JUVFZWc05GZHJhRTlXYlVZMlVteENWMkpHU25wWmVrWmFaREpHU1ZkdGRHbFNWRlphVmpKMGIyUXhXa1pOU0hCU1YwZG9ZVmxzVWxkVVJsVjVUVlU1YTFacldqRlZWM2hEVmpGYVIxZFlhRmRpV0ZKMldXcEtSbVZHV25KWGJXaFVVbFp3VWxadGRHRmpNbFpYVjJ0V1VtRXpRazlWYlhoTFRVWmtkV05GVGxkTmEzQldXVlZTVjFack1YVmhSVkpYVmtWR00xcFdXbGRrVjBwSVpFWmtVMkpyU21GV2JYQkxUa2RHY2s1V1pGUmhNWEJQVm0xNGQxZFdWbFZVYkU1VVRWZDRXVlJXVWxOVWJVWTJWbTV3VjFadGFIWldSM2hoVW14T2RFOVdjR2xpYTBwNVZrWlNRbVZHU25SVVdIQm9VbFJXV0ZadGRIWmxWbHBZVFVSR1YyRjZSa2hWYlhodlZsZEdObUpGT1ZaaE1WcE1WRlJHWVZKc1ZuUmtSbVJPVmxSV1NGWXlkR0ZVTWtaelYydGFUMU5IYUZkV2FrNURWVEZTVlZKdVRsaFdia0pIVmtkek1WWXlWblJaTTJoV1RUTkNSRlZxUmxkamJVMTZZa2QwVTFKV2NIaFdiVEUwV1ZaRmVGWnFXbE5oTUhCelZteFNSMUpzVlhsTldFNW9ZbFZhV2xaWGVIZFhSMFY0VTJzNVlWSXphRmhXTVZwWFkxWkdkR1ZIYkZkV2JUazJWako0VjJFeFduSk9WV2hVWW10d1VWWnFUbE5qYkZaMVkwVk9iRlpzY0VoV1YzaHJZa2RLUjFOVVNsWmlWRlpZVmxWYWExSXhaSEZVYkZwcFYwWkdNMVpxUmxaTlZtUkhZMFZzWVZKVVJrOVZhMlEwVmxaYVIxcEVVbEpoZWxaWlZrZDBZV0ZzU1hsbFNFcFhZVEZhYUZWcVJsTmtSMUpJWkVkMFYySnJTWGhYVmxaVFZqRlZlRk51VGxSaWEzQmhWbXBLTkU1c1VsVlNiazVxVFZaYWVGVXljelZWTWtweVUydDBWMkV5VWpOWmFrWmhVakpLU1ZKdFJsUlNNbWhZVjJ4a05GTnJNVmRWYkdSVlZrWmFjVlZ0ZUV0bGJGWllaVVprYUdKRmJEWlhibkJMVjBkRmVHTkVUbHBOYm1ob1ZUQlZNVlpzVG5Sa1IyaG9UVEJKZDFac1VrcE5WMFY0Vkd0YVRsWlhhRkJXYkZKWFZERmFjbHBIT1dwTlYzUXpXVlZvVDJGR1dYaFhha1pXVFdwR1NGWXdXbUZUUjBaSFdrWldWMkpYYURKV1ZFbDRVbTFXYzFWdVJsVmlXR2hVVm10V1dtVkdaRmhOVkZKU1lYcEdTRlZ0ZUdGVk1rcDBZVVprV21KR1NsaFdiRnByWTFaR2NscEdTbWxTVm5CWVYxWldiMUV4WkhKTlZtaHJVa1phVjFadWNFWmtNVmw1WlVWd2EwMVZjSGxWTW5NMVZUSldjbGRyTVZkaE1rMTRWVEp6ZDJWR1VuVlNiRnBwVmtWYWVGWlVRbUZYYlZaWFZtNUtWMVpGV2xCWmExcExWakZ3U1dORlRsWmlSbXcxV2xWV1lWWXhTa1pqUmxKYVZrVmFNMXBGVlhoVFYwcEhWR3hrVTFaWVFrMVdha1pUVVRBeFIxUnJaRmRpYkVwd1ZGUkNkMWxXYkZoa1NHUlhVbTVDU0ZZeU5XdFViRnAwVld4a1dHRXlVak5aVldSTFYxWldkRkpzY0dsU2JIQlpWbGQwYTFJeFduTlRia3BYWVhwc1dGUlhlRXRTYkZwSFZtMUdhMkY2UmtsVk1qVkxXVlpLVldKSGFGVldiV2hFVlRGYVYxZEZNVmhrUms1WFRWVnZlRlpYTUhkbFIwcEhVMjVLYWxKV2NGZFpiR1I2VFZaVmVXVkZOV3ROVlRWV1ZWY3hSMkZIU2xsVldHeFhVak5vY1ZwVldtdGpNVTVaWWtaQ1YxWllRbTlXUmxadlZURnNWMVpzWkZkaVIxSlRXV3hXWVZkV1draGpSVGxXVFd0d1dsVlhOVmRXTVZwWVZGUkdWbFl6YUVoV2JYaExZMnhhZEdKRk5WTldia0pGVm14YVlWWXhTbkpOV0U1VFlrWndWRmxVUW5kVk1WcHpWV3RrVjFKc1dsaFdiWFJyVlcxS1JsZHNaRlppV0ZKTVZsZDRZVlpzWkhKVWJGcHBVbTVDTmxaV1kzaFNNazV6VTI1S1lWSnJOVlJXYkZwM1VrWmFWMWRzWkZOTlZWcDZWbTE0WVZVeVJYZGpSazVYWWtaYWFGWlVSbGRXTVhCR1drWkthVkpXY0ZoV01uUlhVekZXYzFkc1dsaGhNRFZYVm0xNFlWTkdWbGhsUlZwclRWVndlVlpYZUV0V01WcFhZMFU1VjJKR2NGaFZla0Y0VmpGS2MxZHNUbWhOU0VKVVZtMHdlRlV5VWxkaVNFNVlZVE5TVTFsclZtRldNVlowWkVWMFZtSkdjRmxaVldoclYwWmFSbU5HVWxoV2JIQk1WVzB4VjFOSFJraGpSVFZVVWxWd1JWWnNZM2hOUjAxNVVteGFiRkpHY0c5VmFrNVRWbFpTVm1GSE9WWk5WM2g1V1ZWYVQyRkdTbFZXYm14aFZsZFNkbGxyWkVabGJGWjFZa1p3VGxJeWFFVldSbVEwVTIxUmVGTnNiR3BTTUZwUFdXeG9iMUpXV25GU2JYUldUVlpHTkZaWE5WZFdNa3AwVld4YVZtRnJjRk5hUkVaaFVqRndSazlXYUdsV1ZsbDZWbTB3TVZJeFdsZGFSV2hzVWxkNFdGWnRlSGRoUm14eldrVjBUMVl3TVRaV01uaGhWakF4ZEZWcVZsaFdNMUpZVkZSQk1WWXhUblZWYXpsVFVsaENkMVp0ZEdGVGF6RlhZa2hLVjJGclNsUlpXSEJIWld4c2NsVnRSbGRTYTJ3MFZtMDFjMVl4U2taWGJscFhWbTFTVEZacVNrOVNiRTV6VTIxc1YxWkZTWHBXTW5oWFlqRlJlRk5yV21wTk1uaFpXV3RXWVZaR1duRlViRTVxVW14d1YxWnRkR3RXUmtwMFpVWmtWVTFYVWpOV1YzTjNaV3hHZFZkc1dtbFdSbGw1VjJ4a05GUnRWa2RVYkd4WVlsaFNWRlJVU21wbFJtUlhWMjEwV2xaVVZrbFZiWGh6VmpKS1NWRnVTbFZXUlVwWVZHMTRjMVl5UmtsVWJXeFhWa1ZhU0ZkcmFIZFdNV1IwVTI1S2FVMHlhRmRXYlhoaFZFWnNkR1ZJWkZkTlZuQXhXVlZhZDJGWFNrbFJhMlJYVm0xUmQxWkVTbGRTTVZKMVVteEthR0pJUW5kV2JYQkxUa1pLUjFkdVNsWmlWR3h6V1d0V1YwNUdXWGhoUlhSWFZtdHdlVlJzYUVkWFIwWnlVMnhvVjAxV1ZYaFZNVnBUVmxaS2RHVkdaRTVOVlc5M1ZtdGtkMUl4VFhsU2JsSlVWMGQ0VUZacVRrTmpWbkJZWkVad1RtSkdXbmhXUjNRd1YwWlpkMWRzV2xaaVZFSTBWbFJHWVZkV2IzcGlSbVJvWVROQ1NGWkdXbUZrYlZGNVUydHNWV0pHV2xSV01HUnZWMVpaZVdSSE9XcE5Wa3BaVmtjMVIxWnRSWGxWYlVaWFlXdEtNMVl5ZUdGak1XUnpXa2RzVGxaWVFscFdWRW8wWWpGV2RGTnNWbGRpU0VKWVZGZHdSMVJHY0ZkWGJYUlhWbTFTTUZrd1pIZGhWMFY0WTBac1dGWnNjSEpaZWtwU1pVWlNjVmRzVm1oTmJFcDJWbTEwWVdReVNYaGpSbHBYVjBkb2MxVnFRbmROUmxwSVRsYzVWVkpVUm5oV2JYTjRXVlpKZWxWc1pGcE5ibWhRVlcxNGQxTlhUa2RWYkU1WFlrWldNMVl5ZEZkVk1rMTNUbGhTVjJKcldsVlpiRkpYVkRGU1YxcEhPVTlpUmtvd1ZGVlNRMkpHV2xWV2EyeFZZa1pLV0ZkV1dsWmxiRlp6VjJ4d1YySkdWWGhXYlhCTFZqRmFkRlJyYUdsU2JWSlVWV3hTVjFSc1pISlhiVVpVVFd4S1YxcEVUbk5oYkVsNVlVWmFXbUpHY0hsYVZWcHpUbXhLZEZKck9XaGxhMGt4Vm14a01GUXhWWGxXYmtwWVltMW9WbGxyWkU1bFJscEdXa1pPVjFacmNIcFhhMXBUVmpGYVNHVklaRmRoYTFwb1drUktSMk15U2tkaFJsSnBVak5vZVZaR1dsZFRNazE0VjJ0V1VtSkhVbEJWYWtFeFYyeHNXV05GZEdoU01IQlhWR3hvUTFkSFNsbFJibHBWWWxob1IxcEVSa3RqVmxKMFVtczFUbEpZUWpOV2FrWmhWakZaZUZkcldsQldWM2hVV1d4U2MxVXhXbk5hUms1VFRWZDRXVnBWWXpWaFJrcHpVbXBhVjJKVVJqTldSekZMVmxaS2NWRnNjRmRpVmtveVZteGtlazFXWkVaUFZsWlhZa1p3V1ZVd1ZrdFVSbVJ6V1hwR2EyRjZSa2xXUjNoclZUSkdjazVXVWxkaVdHZ3pWa1JHVTJOc1ZuSmtSbFpYWWtWd05WZFdWbUZpTVZWNVZtNUthbE5IZUdGV2FrNVNUVVpTVjFkdVRrOWlWVnBHVmtkNGIyRkZNSGRUYm1SWFlrWndVRlJWV2xOamF6RlpVMjEwVTFKc2NGUldiWFJoVWpBeGMxcElVbXBTYlZKaFZtMTBkMWRXV1hsT1ZYUm9UVVJHU2xkcVRtOVhiRmw2VVd0b1dtVnJXa3haTW5oM1RteE9jazVXVGs1V2JYUXpWakZhVjFsV1JYaFhhMXBQVTBkNFVWWnJWVEZqUm5CWVRWZHdiRkpzVmpWWk1HaFBWbXhLZFZGc2NGcE5Sa3BJVm14YVlWZEdWbGxhUmxwcFVtNUNVVmRzV21GVU1rNXlUVlphVUZaVWJFOVZhMlI2WlZaYVIyRklaR3BoZWtaWVZqSjBiMVpIUlhsbFJ6bFdZV3RLYUZSVldsSmxSbVIxV2tVMVRsSkZXbGRXYWtaVFVqRmFWMU5xV2xkaVNFSllXV3RrVWsxR1draGxSMFpVVmpCd1NsWXllRk5XTWtwWVlVUldWMDFxUVhoV2JYTjNaVVprYzFkc2FHbGhNWEJaVm0xd1IyUnRWbGRYV0d4clVrWktiMVJYZEdGWFZsWjBZek5vYUUxVmJ6SlhibkJEVmpGYVYxTnNRbUZTYkZrd1ZHMTRVMVpXUm5OVGJHUlRWa1phV2xaVVRuZFJNVmw0VjJ0b1ZsZEhVbFZXYTFaTFkwWnNWVk5zVGxaU2JWSjRWVzAxVDJFeVNrWlhiR1JXWWxoT05GZFdWWGhqYlU1RlYyeG9hR0V3Y0RaV2FrSmhVakpTUjJORmFGTmlSVFZQVlRCV1MwNVdXbkZUV0dSc1VteFdOVlZ0ZEd0V1YwWTJWbTVDVmsxR2NESlVWM2gzVm14a2NsUnNWazVpUm5CYVYydFdVMWxYUmxoVGJGcFhZV3hhVmxac1dtRlRSbFowWlVaYWJHSlZXa3BXUnpGdlZUSkZlR05FV2xkV2VrSXpXbFZrUjJSR1ZsbGFSVFZYVmxoQ1ZGWnRlRmRaVjBaSFZXeG9hbEpyTlZWV2FrRXhaV3hXZEdSRk9WZFdhelZJVmpKMFQxWnRSWGhYYm5CWFlsUkdURlV3WkV0U1ZsWnpVMnhrYUUxWVFrdFdiWFJUVWpKRmVWSnNhRk5YUjFKd1ZXeFdkMVV4V25GVGJFNVNUVlpzTkZsVmFFOVZNVWw0VW1wT1ZtSllhRlJXYkdSR1pVWmtjVmRzV2xkaVJsa3dWMVJHWVdOdFVYbFdhMXBxVW1zMVdGWXdXa3RTUm1SWVpFWmtXbFpzY0RCVmJHaHZWbGRHYzFkc1RsVldla1pVVlhwR1ZtUXhXbkZSYlhoWFlUTkNXRll5ZEZkVE1WbDRWMjVLVDFKRlNsZFVWelZUVTBaVmQxZHJPVmROVm5CNlYydGtiMWRHU1hoVGJGSlhWa1ZhY2xscVJtdGtSbEpaWVVaT2FWTkZTbFZXVnpFd1pERlNjMVp1VGxwTk1taFRXV3RrVTFkV2JGWlhhemxYVFVSR1NsbFZhRmRXYlVwSFYydG9WazFxUmtoVmFrcExVMWRPUjFkc1pHbFhSMmhHVm0xNGEwMUdiRmhVV0doaFUwVTFhRlZ0TVZOalJscHlWMnQwVWsxWFVqQlphMUpEVlRBeGNrMVVUbFppV0doVVZteGtTMk5yTlZkVWJHUnBVbXh3U1Zac1VrZFNNVnB6VTI1S1ZGWkVRVGs9