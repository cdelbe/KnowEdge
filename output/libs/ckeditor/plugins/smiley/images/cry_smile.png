created: 20181108075031857
creator: Charles Delbé
modified: 20181108075031857
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\cry_smile.png
tmap.id: 7a3b95c3-91d9-4783-9225-6cc6351641a4
type: image/png

