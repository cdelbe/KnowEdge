created: 20181108075032270
creator: Charles Delbé
modified: 20181108075032270
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\thumbs_up.png
tmap.id: 5196738d-1631-4c18-9066-f30d984c5567
type: image/png

