created: 20181108075031904
creator: Charles Delbé
modified: 20181108075031904
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\angel_smile.png
tmap.id: 7b534894-64b5-4fd7-9420-de841ad5b57e
type: image/png

