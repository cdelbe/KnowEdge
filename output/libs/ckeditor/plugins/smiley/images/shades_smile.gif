created: 20181108075031932
creator: Charles Delbé
modified: 20181108075031932
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\shades_smile.gif
tmap.id: bd29fcdf-60a8-4a66-b6dd-3096b8ee59c0
type: image/gif

