created: 20181108075032077
creator: Charles Delbé
modified: 20181108075032077
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\teeth_smile.png
tmap.id: 1dc7a47e-7d88-4368-a86b-8a87d5518938
type: image/png

