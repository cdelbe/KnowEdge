created: 20181108075032042
creator: Charles Delbé
modified: 20181108075032042
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\embarrassed_smile.png
tmap.id: 0139b6ef-4a7b-40ae-8281-e0ae08e3ae6b
type: image/png

