created: 20181108075031865
creator: Charles Delbé
modified: 20181108075031865
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\cry_smile.gif
tmap.id: f744da13-ea4b-4cd2-8c6e-362a62cf5aaa
type: image/gif

