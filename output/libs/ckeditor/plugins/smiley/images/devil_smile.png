created: 20181108075031841
creator: Charles Delbé
modified: 20181108075031841
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\devil_smile.png
tmap.id: 3d44755e-c485-403d-b63a-960b501b4904
type: image/png

Y3JlYXRlZDogMjAxODExMDgwNzQ1MDg0NDQNCmNyZWF0b3I6IENoYXJsZXMgRGVsYsOpDQptb2RpZmllZDogMjAxODExMDgwNzQ1MDg0NDQNCm1vZGlmaWVyOiBDaGFybGVzIERlbGLDqQ0KdGl0bGU6IGM6XFVzZXJzXENoYXJsZXNcZGV2XHByb2plY3RzXHRpZGRseXdpa2lcd2lraVx3aWtpXHRpZGRsZXJzXGxpYnNcY2tlZGl0b3JccGx1Z2luc1xzbWlsZXlcaW1hZ2VzXGRldmlsX3NtaWxlLnBuZw0KdG1hcC5pZDogOTk1N2U2ODktYTViZC00MGJmLWE2ZjMtZjhkOTE5YTM0YTM4DQp0eXBlOiBpbWFnZS9wbmcNCgpZM0psWVhSbFpEb2dNakF4T0RFeE1EZ3dOelF5TVRNMU1qZ05DbU55WldGMGIzSTZJRU5vWVhKc1pYTWdSR1ZzWXNPcERRcHRiMlJwWm1sbFpEb2dNakF4T0RFeE1EZ3dOelF5TVRNMU1qZ05DbTF2WkdsbWFXVnlPaUJEYUdGeWJHVnpJRVJsYkdMRHFRMEtkR2wwYkdVNklHTTZYRlZ6WlhKelhFTm9ZWEpzWlhOY1pHVjJYSEJ5YjJwbFkzUnpYSFJwWkdSc2VYZHBhMmxjZDJscmFWeDNhV3RwWEhScFpHUnNaWEp6WEd4cFluTmNZMnRsWkdsMGIzSmNjR3gxWjJsdWMxeHpiV2xzWlhsY2FXMWhaMlZ6WEdSbGRtbHNYM050YVd4bExuQnVadzBLZEcxaGNDNXBaRG9nTlRjd016QXhNVGt0TkROaE1TMDBPVFZtTFRnNU1UZ3RaV0ZsTkRGak56Um1NamMwRFFwMGVYQmxPaUJwYldGblpTOXdibWNOQ2dwWk0wcHNXVmhTYkZwRWIyZE5ha0Y0VDBSRmVFMUVaM2RPZWswd1RWUmplVTVFWjA1RGJVNTVXbGRHTUdJelNUWkpSVTV2V1ZoS2MxcFlUV2RTUjFaeldYTlBjRVJSY0hSaU1sSndXbTFzYkZwRWIyZE5ha0Y0VDBSRmVFMUVaM2RPZWswd1RWUmplVTVFWjA1RGJURjJXa2RzYldGWFZubFBhVUpFWVVkR2VXSkhWbnBKUlZKc1lrZE1SSEZSTUV0a1Iyd3dZa2RWTmtsSFRUWllSbFo2V2xoS2VsaEZUbTlaV0VweldsaE9ZMXBIVmpKWVNFSjVZakp3YkZrelVucFlTRkp3V2tkU2MyVllaSEJoTW14alpESnNjbUZXZUROaFYzUndXRWhTY0ZwSFVuTmFXRXA2V0VkNGNGbHVUbU5aTW5Sc1drZHNNR0l6U21OalIzZ3hXakpzZFdNeGVIcGlWMnh6V2xoc1kyRlhNV2hhTWxaNldFZFNiR1J0YkhOWU0wNTBZVmQ0YkV4dVFuVmFkekJMWkVjeGFHTkROWEJhUkc5blRsZGFhMDE2VVhsUFYxbDBUWHBvYTAxRE1EQk5WRkUxVEZSck0wNVVRWFJhVkdzMFRWZEpNMDFVU21sUFYwcG9SRkZ3TUdWWVFteFBhVUp3WWxkR2JscFRPWGRpYldOT1EyZHdXazB3Y0hOWFZtaFRZa1p3UldJeVpFNWhhMFkwVkRCU1JtVkZNVVZhTTJSUFpXdEZlRlJYY0dwbGF6bEZXakExUkdKVk5UVlhiR1JIVFVkSmVsTlVXa3BTVlRWMlYxWm9TMk14Y0ZsVVYyUlRVakZhZWxkWVRsQmpSVkpTWTBoU2FVMXNTbmRYYlRGellrWndSV0l5WkU1aGEwWTBWREJTUm1WRk1VVmFNMlJQWld0RmVGUlhjR3BsYXpsRldqQTFSR0pVUmpKWGEyUnpZbGRHV0ZadWJGQmhWVXBGV1ZWa1IyVlhTa2hXYm5CS1VsWktjMWxyWkUxU1NFWlNUVVYwYTFJeWQzZFphMlJXVG10c1NGUlVXbGxTYkZvMlYyeG9TMlZzYUVaVWJUbGFWMFZ3ZWxkc2FFOVpNWEJJVm1wS1dWTkZTalZaYWtwM1lrWnJlbFZ1Y0ZsVFJrcDNWMnRrVTJNeVZsbGFTRUpvVFcxNGFscEVTbk5qYlVaWFpVUk9hRll6VW5kWFJXaFRZMFp3U0ZWdVRtRlhSWEEyVjBWa05HTkdiSFZVYlU1YVRXNVNjMWRyWkhOTlIwbDZVMjFPYWxJelozaFhha3B6WkZkTmVHVkljR2xXTW5oNlYyeG9jMWt5UmxoTlYyaGhUV3hhTmxkRlpGTmlSMUowWWtoT1dVMHdOVEJaVm1RMFlrVjRkVkZ1Vm1Ga2VrSk1Xa1ZqZUdGSFRrUk9XRUpoVWtjNWJsUlhNVTVOTVhCeFVsaHdUMkZ0VGpCVVZWSkRZV3MxTlUxRVFrOWlWVnB5VkVaa1IyRkdiSEZUV0ZKUFpXMXplVlF3WkZOaGF6RkZXVE5vVDFKRk1UWlNSa1ozVFVkV1dWRnRlRkJoVlVwM1dXeGtSMkpzY0ZSUFdHUnBZbGRPVDFFeVpIZFhhekIzWTBoT1dGWnRhRlJaYTFwM1VsZEplVnBGTldoaE1Ga3dWa1JDVTFKdFZrWk5WVlpoVFRKU1VGcFhkRWRPYkZKWFZXMDFiR0Y2Vm5oV1JsVXhVa2RLVms1VVZsaGlSMUpJVkZWa1NtVnNUbFZYYTNCVFZsUldNbFl4V205VE1rMTRZMFpzVlZZeVVsUlZha1poWld4a1dWUnNRbXBTVmtwVFdUQm9VMkZWTVhOVGJtUllZbFJHZWxsclduZFNWMGw1V2tVMWFHRXdXVEJXUkVKVFVtMVdSazFWVm1GTk1sSlFXbGQwUjA1c1VsZFZiVFZzWVhwV2VGWkdWVEZTUjBwVlVtcEtXR0V5VW5wWmJHUkhWMFphZFdKR1FtaFdWWEJHVjFaV2ExSXlWbGhUYTJoWFltNUNTMVZzV2t0ak1XeHlXa1V4VTFORldsTlVWVll3WVRGSmVXUXpaRnBoTWxKWFZHMTBjMU5HVWxWWGJHeFRZa1p2TWxZeWVHOVRNbFp6WVVWYVZXSlViR0ZXTUZaM1pXeGtjMkZGT1ZwTldFSkpWbTF3UzFkV1RrWlRhbFphWVd0d00xbHJXbkpsYkZaMVkwWnNWRkpyY0ROV01uUnJWVEpOZVZac2JHRlRSVXB2VkZjeE5HRnNjRVZUYms1cVlsVmFXRnBWVWs5aFJsbDZWVzVrV0ZKWGFGUlpNRnAzVTBaV2RWUnRSbGhTV0VFeVZqQldhMDVIVGtkaVNGWlZZbFUxWVZSWE5WTmpNV1J5V2toT1RsSXdiRFpWTWpGUFlXeEplbG96YUZoaGEzQjZXa1prVG1WSFZrbGpSMnhYVFc1b05sWXllRzlqTVd0NVVteG9UbFl5YUdoVVYzaGhUbXhrUmxwR1RtbFNNVW93V1d0b1QxZFZNSGRPVkVKYVZtMVJNRmxyVmpSa1ZrWjFWbTFHYTJWclNrMVhhMVpxWlVkR1NGUnJVazlYUlVwb1ZXdGpOV0pzVVhkYVJuQk9UVmQ0VmxaR1VsTlpWa3BJWkVSQ1dGZElRa2RhVlZVMVVrVXhSVkZ0UmxOU00yaDVWa1ZhVTJKck1YSk5WVlpYVjBaS1QxVnJWa3RqUmxKWFZXdGFhMDFYZUZaVlZtaHJWMjFHYzJGNlFsTlNhMW96VkZWa1YxZFdSblJsUmtKb1ZsVndNMWRYZUd0U01rcHpZMFpTVUZkSFVuQlpiR1JQVkRGRmVWcElaRmhoZWtJeldUQm9UMWRHV25SaFJsSmFZVEZ3TTFWc1pFcGxWbkJHVGxkb2FFMUdhM2RXYTFKRFZURktkRlpyV2s1V1ZscG9WRlJLVTFWR2JGaGpNMlJPVm14S1dsa3dXa3RpUjBZMlVtNW9XRlpGUlhoVmEyUkxWbXMxVlZac2FHbFNNVXBKVmtaV2ExTnRWbk5VYkZaWVlUTkNWRlpzVWxkTmJGbDRWMjA1VkUxck1UUlpNRnB6VmxaWmVWVnNVbFpoYTFwb1dsZDRhMWRXVW5OUmJYQlRWbXR3VkZkVVFtOVZNa1pXVFZoT1ZHSnRVbGxaYkZKSFpXeHNjbGR1WkZOV01HdzFWMnRWTVdGSFJYZFhWRUpYVWtWS1ZGVnRNVmRTYXpGV1ZtMUdUazFzU2xGWFZtUjZaREF4VjFWc2JHcFNhM0J6V1Zod1IyVkdaRlZSVkVaVFVqQndWbFZ0Y0V0WFIwVjVWVzV3V21KSFVraFdNRnBoWkZkS1IxRnRhRmRXV0VKSFZqRmFWMkV4U1hsV2JHaFVZVEpvV0ZsdE5VTlRNVlp6VjJ0MGFrMVhlSGxYYTFWNFZURk9SbGRzVGxWV1ZsbDNXVlJHU21WWFVYcGFSbkJvVFd4S1dGWkhNVEJqTVU1SFZXeFdXR0pIZUZSWmExcDJUV3haZVdWSE9WUk5iRnA2V1ZWV1lWWlhTbFZpUjBaWFRVWmFNMXBYZUd0ak1rWkdUMVp3VGxkRlNrcFdiVEYzVXpGa1YxUnJXbFJoYkZwaFdWZDBkMDB4YkhKWGJrcHNZa1phTVZrd1duTldSa3B5WTBST1YwMXVVbkpXVkVwT1pWWmFjMkpIUmxSU1ZYQjJWa1pqZUU1SFJuTmpSVlpVWW1zMWNWbHNWbUZYUm5CV1ZXczVhRkpzYkRaV1Z6VnJWMFpLV0dGR1VscE5SbkF6VlRCYVYyUldVblJTYkdoVFYwVkZlVlpxUWxkaE1EVklWR3RrYVZOR1dsWlpiRlV4V1ZaU1dFNVdUbXBOVjFKNVYydG9UMVJzU1hkaVJGcFdUV3BHVUZsWGVFcGxiRzk2WVVab2FHRXpRalpYYTFwclZHMVdTRlpyYkdwU01uaFlWRmMxYjA1c1dYbGxSemxxVFZkME5WVnRlRzlVYkZsNVlVZG9WVll6YUdoVWJYaHJVbXh3UjFSdGJGTk5WVzkzVjFkMGIxUXhaRlpOU0dSUFZrVktZVlp0TVZKTlJteHlWbXBTYTFacldqRldiVEZIWVRKV2NsTnJNVmhoTVZweFdsVmtSMU5HVW5KVmF6bFlVbFZ3YjFaWGRHcE9WMHB6V2toU2FsSlZjSE5aV0hCSFZteGFSMVZzWkZoaVZscDZXV3RTUTFaWFJYaFRiR2hhVmtWYWVsWnJWWGhTVmtaMFVteGtVMkpHV1RGV2ExWmhZVEZOZVZKc1pHcFNiV2hYVmpCYVMxUXhWbkpYYTNScVZteEtWbFV5ZUV0aVIwWTJWbTVvVm1KVVFqUlhWbHBLWlVaS1dXSkdUbE5oTVc5NlZrWldhMVl4WkZkU2JsSnNVbXRLYjFac1ZuZE5NV1JZWlVkMFUwMXJjSHBaTUZwVFZVWmtTRlZ1UWxwaVIxSlFWa1JHUm1WV2NFbGFSbWhvWld0SmVsZFVRbTlVTVdSSFYyNVNhRkpzU21GWlZFWjNUVEZXYzFwRmNHeFdia0pIVkd4a2IyRkZNVWRoTTJSWFlURktSRlpVUmt0a1JscHlWMnMxVjFac2NHOVdSbEpMVlRGV1IySkdhR3BOTWxKUFZXMTRTMWRHV2xobFNHUlZZWHBHUmxadGVHRlhSbHBHVWxob1ZtRXlVa3hXYlhNeFZsWmFjMkZIYkZOTlZYQktWbXRhVjJFeFRuUldiazVWWWtaYVdWbFVUa05XUmxwelZXeGtUbUpHYkRSV01qQTFWa1V4Y2sxVVVscE5SbkI2Vm14YVdtVldWbk5WYkZwb1lURndiMWRzWkRSaE1XUlhWVzVPVW1KWVFsUldiWFIzVmtaa1ZWRnRPVlpOYTFwWFZGWm9UMVpIU25SVmJHeGFZa1pLU0ZwWGVITmpiR1IxV2taT1YwMUhkekZXTW5SV1RWZEdTRkpZWkZoV1JVcFlWV3RXUzFaR1ZuUk5WbVJUWVhwR1YxWnRNVWRVYXpGelUyeEdXRlp0VWpaYVJFRjRVakZXYzFwR1dtbFRSVXBRVmtaV1UxWXhXbk5hUmxaU1ZrVmFWRlZxUW5kV2JGWjBZMFYwV0ZJd1ZqVldWelYzVjIxS1NGVnJhRmROUm5Cb1drWmtTMUl4Um5SaFJtUlhWMFZLU0ZacVJtRldNa1Y0VTFoc1YySkhhRlZaVkVwdlYwWnNkRTVWVGxSTlZscDZWakowTUdGck1WaGxTR3hZWVRGV05GWlVSazlTYkdSelZHeFdWMVpzYkROWFZsSkhVMjFXV0ZWWWNHRlNia0p2VkZkNFMxZEdXa2hOVkVKcVRWVTFTRlpYZUZkWFIwcElaVVpTV21FeGNESlVWM2hhWlZkV1NFOVdVazVpUm5BMlYxWldWMWxXV2xoVGJGWnBVakJhV0ZSVldtRk5NWEJZWlVkMGFrMXJXa2RVTVZwM1ZHeGtSbE5yY0ZkaVZFWXpWWHBHYTFZeFVuSlhiRkpvWWtad2FGZFdaREJrTURCNFlraEtXR0pyY0hOWmExcGhUVlpyZDFkdVRsZFNhM0I1V1RCU1QxWXdNWFZWYmtwWFZrVndUMXBXV21Gak1rcElVbXhTVTFaWVFqSldhMXBxWlVVMVNGSnVUbXBTVmxwVldXMXpNV05XYkhOV2JVWllVbTVDVjFaWGN6VmhSa3B6WWtSYVYxWjZWbkpXTUZwTFYwZEdSMVZzY0U1U2JrRjZWbFJDWVZZeVVsZFZibEpUWWtkb1ZGWXdWa1psVmxweFVXeGthRTFXUmpWV1J6VlBZV3hLZEdGR1pGcGlXRkpNV1RKNFYyUlhUa2xVYXpsWFlsWktTRmRXVmxkVU1rWnlUVmhPVkdKSGVGbFpWRXB2VWtac1YxcEZkR3BoZWxaWldUQmFkMkpIUlhsa2VrSllWa1ZLY2xWNlJrOVNNV1IxVW14a2FWSXphRlZXUm1NeFltMVJlRmRZYUZoaVdGSnZWRmQwZDFOV1drZGhSemxwVW10c05sWlhNVzlXTURGSFkwUk9ZVkpGV25wWk1uaHJWbFphZEdWSGJGZFhSVXBoVmpGa01HSXhVWGhpUm1SWFlXeHdXRmxYY3pGWlZteHpWV3RrYWxac2NFbGFSVlUxWVRGYWMxZHFSbGRXTTJnelZqQmFTMVpzWkZsaFJtaFhZa2hDZVZac1pIcE5WMDUwVTJ0YWFGSnJOVmhWYlhoM1lVWmtjMXBFUWxSTmEydzBWbFpvYjFadFNsbFJia3BWVmxkb2RsWnRlRmRrUlRGWldrWldUbUV4YjNkWGExWlRVVEZhV0ZKWWFGUmlhMXBvVm14YWQyVnNhM2RXV0doWVVqQmFSMVF4WkhOV01WcHpZVE5rVjJFeFdtaFpWRVpyWkVaV1dWcEZPVmhTVm5CVlZtMTBZVk14YkZkWGJrWlNZa1p3YzFadE1WTmxiR1J5V2tWa2FGSlVSa1paYTFaUFZsWmFWMWRZWkZwV1JWcFFWVEJrVjFKV1VuTmhSMnhUWVRJNU5WWnFTbmRUTVVsNFdrVmFUbFp0YUc5VmFrSmhWREZzY2xkc2NHeFdiVkpXVlZjeGQxUnNXWGRqU0d4WFZqTm9URmxXVlhoVFZsWjBUMVprYVZkSFozcFdWM1JoV1ZaS1YxTnVTbXRTVkZaUFZXdFdZVk5HWkhKV2JHUnBUVmQ0VjFSV2FFZGhWa3BXVGxaa1YySllhR2hWTUZwWFYwZFdSMVJ0Y0U1V2EzQTJWbXBKZUdJeFZYaFhiazVxVW0xb1dGUlhOVU5TUmxaeFVtdGthazFWY0hwV01uaFRZVlprUmxOc1VsZGlXR2hZVjFaYVJtVkdXbk5hUm1ocFZrZDRWVlpYTVRCWlZtUkhZa2hLVjJFelVsZFphMXAzVmpGWmVXUkhSbGhTTUZwNVZURm9hMVpXV2xkalJtUmhWbXh3TTFWdGVFOWpNVTV6V2taa1YySnJTa3BXYWtaaFdWWlZlRkpZYkZWWFIyaFZXV3RrVTFaR2JISmFSazVYVFZkNFZsVXljRTlVYkVwelUycENZVlpYVVhkV2FrRjRWMGRXUjFkc1dsZE5NRXBWVm1wS2VtVkdXblJVYTJSV1lrZFNiMVJXV25kTmJGcFlaRWRHYUUxck1UUldSelZQWVZaS2MxTnJPVnBXUlRWRVZXdGFZV1JIVmtoU2JXaE9Wak5vV1ZaWGVHOWlNa1pIVTI1T1ZHRjZiRmhaVkVwU1RVWndSVkp1VG10V01EVkpWVzE0VjFVd01WWmpSWFJYVm5wRk1GcEVSbE5rUmtwWlkwWkthVlpIZUZsWFZsSkhaREZhUjFaWVpGaGlSVFZ5VldwQmVFNXNiSEpXVkVaV1RWWndTRll5ZUhOV01WbDZVV3Q0Vm1WcldsQlZha1pQWXpGYWMxUnNaRk5oTTBKWFZqRmFVMU13TVVaTlNHaGhVbTFTYUZVd1pGTldNVkpXWVVVNVQxWnNXakJhUlZKRFlVZEtWbGR1Y0ZaTmJrSk1WbTB4UjJOdFNrVlZiR1JUVWxad1ZWWnRkRlpPVm1SSVZXdGtWbUY2Vm5CWmExWjNWRVpaZVdWSGRFOVNhMncwVld4b2MxWldaRWhoUmxaYVlrZFNkbFpyV21GalZsSjBUMVU1VjJKV1NtRlhWRUpxVGxaa1IxTnNWbGRpYlhoWVdXeFNWMlZzYkZaYVJXUnFZa2RTTUZsVldtdFZNVnAxVVd4Q1dHSkdXbkpXUnpGU1pWWldjbFpzVG1sWFIyaGFWbGR3VDJFd05WZFhXR3hxVWxSc1ZWUldWbmRTTVZGNFZtMUdXbFpyY0VkVk1uaFRWakpLV1ZSWWFGcGhhMXBvVm1wR2EyTnRVa2hpUlRWVFVqTm9XRll4V205a01VMTRWV3hvVjJKR1dtOVZhMXAzVjBaYWMxcEZOV3hTYkd3MFYydGFUMVpHU1hkWGEzQldWak5OTVZsV1pFdFhSMFpKWVVaa1UxWXlhRFZXUjNoaFZERlplRmR1U21sU2JXaHZXV3RvUTFac1pGaE5TR1JQVWpGYVNGa3dXbTlpUms1SVZXNUdWVll6YUdoVVZscHlaREpHU1ZwSGFFNVNSVnBKVm1wS01GUXhaRWRYYmxKV1ltNUNZVlJYTlc5aFJsVjNXa1prVTAxVlducFdNakZ6VlRBd2QwMVVVbGRpV0ZKb1ZsUkdVbVZXVG5WVGJYaFRVbTVDV2xkWGRGZFpWMDE0VjI1T2FGSjZiRlJWYlhoM1pWWmtXV05GWkdoU1ZFWllWakp3UTFkc1dsaFZibHBYWVd0YWNsVnFSbXRqYlU1SFlVWmtiR0pHYnpKV2JHTjRaVzFSZVZac2FGZGhNVnBYV1d0V1MxZEdWbkZUYlhST1RWWndSbFZYZUd0aGF6RkZVV3BXVm1KWVVucFdiVEZMWkVaV2MxVnNjR2hOYldoRlZtcENZVmxXV25OYVNFNXFVak5vVkZsWWNGZFhWbHB5V1hwR2FFMVhVbnBYYTFaaFlXeEtjbE5zYUZkaVIxSjJXa2Q0ZDFKc1pISlBWbVJwVW10d1YxWnJaRFJVTVZsNFYydGFXRmRIZUZoVmFrNXZWa1pXVlZKck5XeFNNRFZJV1ZWVk5WZEdTWHBoUmxKWFlsaG9jbFpVUmxOak1YQkpWV3MxV0ZJeFNucFhWM1JXVFZaS1YyTkZXbFpoTTFKWVZGVlNSMUl4V1hsbFIwWlhWbXh3V0ZVeU5YTlpWa3BHWTBaU1lWSldWalJWTVdSTFVqSk9SMXBGTlZSU1ZXdzBWbTE0VTFFeVNYaFhXR3hWWWtkU2NGVnRlSGRYVm14WVpVZEdXRkpzY0hoVlZ6RkhZVEZhY2sxVVdscE5SbFV4Vm0xNFlXUkZPVlZYYkZwWFlrVndVVlpyWkRSWlZscHpXa2hPYVZKdFVrOVdha3B2VTFaYWRHUkdaRTVOYkVZMFZqSTFSMVV5U2xaWGJrSlhUVVphVEZaRldtdFdNVlp5VTJzMVYwMUdjRmxYVjNSVFdWWldjMWRyV2xoaVIzaFhXVlJHZDAweFdrZFhiazVxWWtad2VWcEZXbXRXTWtweVUyeGtWMVpGYkRSWmVrWlhaRVpLV1dGSGNGTmhNWEJ2VmxkNGEySXlUbk5YV0dSWFlXczFjMVZ0ZEdGTlZtUnlWbFJXYUZacmJEUlZNblJYVjBkRmVWVnViRlZoTWxKWVZtMXpNVk5YUmtoaVJrNVhZa2hDWVZac1pEUmlNVlowVm01T1dHRXlVbGhaYTFaM1kxWnNjbGRyZEZOTlZrcFlWMVJPYjFkSFNrZGpSbXhhVmxkb1dGWnFSa3RrUmxaeVlVWmtVMUpZUWt4WGExSkhZekExYzFkdVRsZGlSVFZVV1ZST1ExWkdXbkpXYkU1U1lsWmFTVlZ0ZUd0V1YwcEhZMGhPVm1GclNtaFdWRVpUVmxaU2NsUnRjRTVXYkhCYVYxUkNWMDFHWkVoVGEyaFdZV3RLV1ZsVVJuZFhSbHBGVVZob1UyRjZWbGhXTW5oVFlrZEdObFpZY0ZkaVIxSTJWR3hhYTFKck1WZFhiWEJUWWtad1ZWZFhkRmRrTVVwSFYyeHNhbEpVYkZkVVZWSlhVMVphV0dSSVRtaGlSWEJaV1ZWb1QxZHRTa2RqUlhoaFVrVmFjbGw2U2tkU01YQkdUbFpPYVZJelkzaFdiR04zWlVkTmVHSkdaRlJYUjFKdldsZDBTMVl4YkhOaFJVNXNZa1pLV1ZwVlpEQmhiVXBKVVd0c1ZtSlVSblpXYWtGNFVsWmFjMU5zWkZOaVNFSjVWbGN4ZW1WSFRYaFRibFpYWWxoQ1ZGWnROVU5YUm1SWVRVaG9iR0Y2UmtoV2JYaFhWVEpLVldKR1FsZGlWRVpVVldwR1YyTXlSa2xhUmxab1pXdEplbFpIZUZkVU1WcFhVMnRhVDFack5WWlphMXAzVmtaVmQxWlVWbGRpVlRWSFZHeGFhMVV3TUhsaFJXUlhZa1pLUkZaVVJsSmxWbFoxVkcxR1ZGSnJjRmxXYlhSWFpERmFjMWR1UmxSaWJrSnpXV3RvUTFOR2JGWldhemxWWVhwR1dGa3dWbk5XTWtwWlZXdDRWMVpXY0V4Wk1uTXhWakZPYzFkc1pHbFNXRUpTVm14YVUxSXhTWGhhUm1ScVVsZFNhRlZxUW1GVU1WWnpWMjVrYkZKc2NEQmFSV1JIVlRBeFdGVnVjRmRXYldoMlZsY3hSbVF5VGtoU2JVWlhZa1Z3TmxaVVNqUmhNbEpJVm10a1ZXSkhhSEJWYWs1dlRsWmtWVkZ0T1ZOTlYzaFpWVEkxVDFkSFNraGhSbWhYWWtkU1ZGa3llRk5rUjFaSFdrZDBVMkY2VmxkV2JHUTBZakpHU0ZKcVdsTldSWEJZVkZkd1JrMUdWbFZUYkU1WFRWZFNlVll5TVc5Vk1VcHlZMGhhVjFaRlNsaFhWbHBMWXpGa2NtRkhjRk5XYmtKUlZtMTRVMVl4U1hoWGJsSnFUVEpvVmxSVlVrZE5SbVIxWTBWMFYxWXdjRnBXVjNRd1ZsWmFjMVpxVWxWaVdHaHlXVEl4UjFJeFZuTlViV3hYWVROQ2RsWnRlR0ZaVjBaeVRWWmtWR0pyY0U5Vk1HUlRWakZzYzJGR1RsWk5XRUpaV1ROd1IxWXhTblZSYkdSWFZqTm9VRlpxUmtwbFJrNXhVbXhhVG1GclJqUldiWEJIWVRGS2NrNVdhR2hTTUZwVVZXeFdkMDVzV25SalJVcE9VakZHTlZaWGRHRlViRnAwWVVab1lWWXphR2hWTW5oaFkyeHdTVnBIYkdobGExcFpWbXhrTUZZeFdraFRiRnBZWWxkb1dGbFhkR0ZaVm5CRlVtNUtiRkp0VWpGV1J6RnpWakZhUjFkclpGZFdiVkV3VlZSR1VtVkdVbkphUm1ob1RWVndXRlp0TlhkU01rNXpWMnhXVTJKdFVsUlVWM1IyVFd4YVdHVkdaR2hXYkhBeFZWZHdTMVl3TVhWVmJHaGFWa1ZhVkZacVJsZFhWMHBIVlcxc2FFMHdTblpXYlRGM1VqSlJlRlJZYUdwU1ZscFRXV3hvVTFac1duUmxSMFpVVm14c05Wa3dWbXRoUmtweVkwVnNZVk5JUWt4V2JGcGhZekZrY21SR1ZsZE5NbWhSVmxkNFlWVXhaRmRqUldocFVtczFjMWxVUm5kU1ZscHlWMnhPVlUxclZqVlZiR2hyVkd4YVYyTkdhRnBpUjJoVVZqQmFkMWRIVmtaa1JrcE9WbTVDU0ZZeWRHOWhNVnBZVW1wYVVtRnJOVmhVVnpWRFZrWmFTR016YUdwaGVsWmFWVEo0WVdGRk1YUmhSVlpZVm14S1NGWnRNVmRXTWs1R1drZHNVMkpHY0hwWFZsSkRaRzFSZUZwSVNtRlNSa3B3VkZaYVMxSXhVWGhYYlVaWFVqQndlbFV5TlV0WGJHUkpVVzV3WVZJemFGUldiRnBUWTJ4U2MxWnRiRk5oTVd0M1ZqRmFWMkl4VVhoV2JrNVlZbXMxVkZsWGN6RldiRkpYVjI1a1ZGSnVRa2hXYkZKWFZUQXhWMU51Y0ZaTmFrVjNWbXRhUzJNeVRrVlRiRnBzWVhwVmVsZFdZM2hXTWsxNFkwVmtZVkl3V25OWmExWjNaREZhZEdSSGRFOVNiRnBJV1ZST2EyRkdTbkpqU0VwVlZteGFNMVV5ZUhOV2JHUnlXa1phVGxadGQzcFhWRUpxVGxaYWNrMVlSbE5YUjFKV1dXeG9iMk5zV25GVGEzQnNZbFUxUjFReFdrOVZNa3BIVm1wT1YySllVbFJXUkVwU1pWWmFjbGR0Y0U1Tk1FcFhWMWQwWVZNeVRuTldXR1JoVW1zMWNsbHJhRU5TYkZaWFlVYzVhRkpVUm5wVk1uaHZWbTFLVlZac2FGZGhhMXBvV2tWa1IxTldTbk5YYkdScFVsaENXbFpzYUhkVE1WRjVWV3RrWVZORldsTlphMmhEWTBaYWNWSnJkR3RpUm5CWVZqSXdOV0ZGTVZaalJtaFdUV3BXVUZkV1drOVNNVTV6VVd4d2FWSnNWalJXYkZKSFZEQTFjMUpzVmxkaVJYQlBWVEJWTUdWc1pGVlJiRTVTVFd0YVdWVnRlRmRoUlRCNVZXeGFWMkpZYUROWlZWcFhZMVpLYzFwR1pFNVdia0YzVmxjeE5GVXlSbGRhUlZwVVltMTRXRlJXV2t0U1JscFlZek5vVjAxWFVqRlZNakZ2VlRKRmVsRnViRmRpV0VKTVdWY3hWMVl5U2tsVGJVWlRaV3hhVUZaWE1UUlpWVEZIVjI1T2FGTkhVbGhVVlZKSFVqRnJkMVZyZEZwV2EyOHlWVzF3UzFsV1NrWlhhM2hXWVd0YU0xUnRlRk5qTVVaelZHMXNWMkV6UWpKV2JYaHJaREZOZVZWdVVsVmlhelZvVld4YWQxWXhiSFJOVkZKcVVteHdlVlp0TlV0VWJGcHpWMVJLVm1KVVJqTlphMXBoVmxaS2NsZHNXazVpYkVwdlYxWlNSMU50Vm5SU2ExcFdZa2RTVkZWc1ZuSmtNVnBIVjIxMFYwMVZjSGxVVmxwaFZrZEdObEp1VGxwaE1Wb3pXa2Q0WVZZeGEzcGhSMnhPWWtWd05sZFVRbTlWTVd4WVZtNU9WR0pHU2xoWlYzUjJaREZTVlZKc1RtcGlSbkF4VjJ0a01GWXdNVWhQU0doWVlURmFWRlZVUmxwbFJrNTFWbXhLYVdKWGFGZFhWM2h2VkdzeFIyTkdhRTVXVkd4VlZXcEdZVk5XYkhKWGJHUm9WakJ3ZVZVeWVITldNVWw2WVVoS1dtVnJjRmhXYWtaTFpGWlNkR0ZHVG14aVJuQTFWbXRhVTFNeVNYaFdhMlJXWWtkU2IxVnNaRk5YUmxKWFdYcFdUMkpHY0VsVWJGWlBWMFpKZDFkdWNGZE5WMmgyVm1wS1MxZFdSbkpsUm1oWFlsWktXVlp0TUhoV01VcDBWbXRvYUZKVVZrOVVWVloyWld4YWRHVkhSbGROVld3MFZtMTRZVlZHV2xoVmJrWldZa1p3YUZaVldsTldWazVWVm1zNWFWSnNjRFpXYkdSNlRsZEdSMWR1VGxSaE1YQmhWbXhrVGsxV1duRlNiVVpyVW14YWVGVlhlR0ZXTWxaeVYydG9XRlpGYnpCVmVrRXhZekpKZW1OSGFGTk5ibWgzVm1wQ2EySXdNVmRYV0doV1lUSlNWRlJWVWxkbGJGcDBaVWRHVlUxWFVrbGFWV2hEVm0xRmVWVlVRbHBoYTFwNlZqQmtVMUpXUm5SalJrNXBVMFZLUzFac1kzZE5WazE0V2tWa1ZGZEhVbEJXTUdSVFZqRmFkR1ZGZEZSU2JFcFlWbXhTUjFZd01YSmpSV3hhWVRKU00xWlVSa3BsYlVaSFVteGthVlpGU1RCV2JYQkhVekZaZUZSc2JHbFNiVkp3Vld4V2QxWkdXblJOVkZKYVZteEtXRlpHYUhkaGJFcFpWV3hzVjJKR1NrUlViRnBoVjBkU1IxUnNaRk5oZWxaSlYxWlNUMkV4V1hkTlZXUllZVE5vVjFSWGNFZFdSbFowWTNwV1YySkdXbnBYYTFwUFZUSktjbE5yVmxkaE1YQllWMVprUm1WSFNrZGFSbFpZVWpOb2QxZHNaREJUTVdSWFZsaGtZVk5JUW5OV2JYaDNWbXhhU0dSRk9WaGlSbkI1Vkd4YVYxWlZNVmhoUkU1WFZsWndjbFV4V2tkWFYwWkhWbXhrVjJKR1ZqUldNbmhxWlVaTmVGZHVUbXBTVmxwVFdXdGtiMkl4VWxWU2EzQnNVbTFTV1ZwVll6VldhekZ5VGxab1YySllVbWhaVlZwTFZtMU9SMVJzWkdoTlZuQk5Wa1prTkZZeFpFaFdhMnhWWWtaYVQxWnROVU5UYkZwVlUxaG9UMUpzY0VoV01uaHJWakZrU0ZWc1dscFdSVnBvVkZkNFUyTXhjRVprUlRscFVsWndOVlpVU25wTlZsVjVVMnhrVkZkSFVsaFVWbVJQVGtaa1YxZHJkRk5OVjFKNFZqSjRhMkZIVm5OWGJFSlhWbnBXTTFreU1WZGpNVnBaWVVkb1UxWkhlRmxXVnpCNFRVVXdlR0V6WkZkaVZWcFhXV3RrVTFJeFZYbGxTR1JYWWxWd1NGa3dXa05XTURGWVZXeG9WMDFHY0ZCWk1uaHJZekZHYzFwSGJGTmlhMHBVVm1wR2EwNUdWWGhUV0doWFlteEtWVll3WkRSak1WVjNZVVZPVmsxWVFsbGFSV1JIVkRKS1IyTkdhRnBXVjAweFdXdGFZV05zV25GWGJHUk9ZbXRLYjFac1VrZFVNVTVIWTBWV1ZHSkdXbTlVVmxwM1lqRlplRmRzV214U2JWSkpWVEowYjJKR1NYbGxSVGxYWWtaS1dGVXhXbXRXTVhCSldrWldUbUpGV1RCWFYzUmhWakpHUjFOc1ZsTmlSMUpYV1d0a1UxVXhVbGRYYlhScVlrZFNlVmRyV205V01rcEpVV3hrV0Zac1dsaFVWVnByWXpGa2RWUnRjRlJTVm5Cb1ZtMDFkMVl4U2tkaVNFcFhWMGRvY1ZSV1ZURmxSbFpZVFZWa1ZXSkdiRFZaVlZKWFZqRmFSbE50YUZkTmFrWlRXbFZrVDFKc1pITldiV3hYVFRKb1YxWnNZekZrTWsxNVZHdGtWbUV4V2xOWmJYTXhZekZzVlZSck9VNU5WMUo1V1ZWb2ExWnRTa2RqUm5CYVZsWmFXRll5ZUdGU2JVWTJVVzFHVjJKV1NsRlhhMVpXVFZaYVYxVnVUbFJpUm5CeldXeG9hbVZHV25OWk0yaE9VbTE0V1ZaR2FHdFViRnAwWVVaU1dsWXphRXhaVlZwVFZqRmtkVk50ZEU1V2EyOTNWa2Q0WVdFeFVuSk5WbVJxVW0xNFlWbFVSbUZWUmxwRlVWaG9WMDFyTlVsVU1WcDNZVmRLY2xOc2JGZGlXRkpYV2xWa1RtVkdXbk5XYkZacFVsVndWVlpYZUc5Uk1WVjRWMWhzYWxKVWJGaFVWVkpIVTBaYVNHVkhSbGRTTUhCSFZUSXhiMVp0U2tkalNHeFZWbFp3VkZacVJsZGpNWEJJWTBVMWFHVnNXa3BXYlhocVRWWlJlRlZ1U2s1V2JIQlpXVlJLTkdGR1ZuVmpSV1JQWWtkME5WcFZXbXRoYlVwR1RsaHdXbFpXY0doV2FrWmhZekpPUmsxV1pGTmlSWEJKVjFod1MxSXhUa2RXYkd4b1VqQmFWRmxVUW5kV1JtUlhWV3QwVmsxRVJraFdiR2h2VmpKR2NsTnRPVlpoYTBvelZtMTRXbVZWTlZaUFZtUlhUVWhDU0ZkWGRGTlRNVmw0VTFod1VtSkdTbWhXYkZwM1ZrWnJlV042VmxkTmExcElWa2Q0YTJGV1pFaFVhbFpYWVd0cmVGa3ljekZXTVZKeVlVWldhV0V6UWxCV2JUQjRWVEZhYzJKSVVtcGxhMHBQVm0xNGQyVkdXa2hOUkVacFVteHdlVlJzV25OWlZrcFhWbXBTV2xaRlJqTmFSRXBQVWpGR2MxcEdUbE5XYmtJMVZteFNSMVpyTVZkVGExcFFWbXhhVTFsWWNGZFdSbXhWVW01a1QxSnNjRlpWTVdodlZsVXhjMU5zYUZaTlYyaDZWa2Q0WVZack5WZGhSbVJwVjBaSmVsWnJVa2RXYlZGNFkwVm9VMkY2VmxoVVZWcDNVMnhhYzFkc1RsUk5WbFl6VkZaYWIyRkdUa1pYYlVaaFZqTk5lRlpGV2xabFYxWkdXa2R3VGxacmIzaFdWekUwVlRGWmVGZFliR0ZTUmtwWlZtcE9iMVpHVmxWU2JFNVhUV3MxUjFZeU1XOWlSMHBHWTBob1YxWXpVbkpXUjNONFVqRmtkVlJzV21sWFJrcFZWMWQwYTA1R1pITlhXR3hyVWxoU1dGWnFRbmRTTVZWNVkwVjBWMDFyVmpSV2JGSkhWakF4ZFZSWWFGWk5SMUpZVlRGYWEyTXhXbkpPVms1WVVsVndXRlp0ZUZOVE1sRjRWbTVTVjJKR2NGRldiRnAzVjFaYWNsWnJkRlZpUmtwWlZGWlNVMkZzU25WUmExcFdUVzVTY2xsWGVHRlhWbkJGVkd4V1RsWnNjRTFXYlhSV1pVWmtTRkpyYkZWaVJuQlBWbXBHUzJWV1duRlJiVVpUVFdzMVdGa3dWbUZpUmtwMFZXeG9WMkZyTlZOVVZscGhaRWRPUmxwR1VtbFdhMWt3VmxSR2IyUXhXblJUYTJ4U1lrZFNWbFp0ZUhkVVJscHhVbXhLYTAxWFVubFhhMXBYWVZaS1ZWWnNiRmRXZWtGNFZrUktSMWRHVG5KaFJscG9UVEZLYUZkV1VrdGlNVWw0Vld4V1UySllVbGhaYTJoRFUwWmFkRTFWWkZkU2EzQXhWVmR3UzFZeFdYcGhTRXBhVmtWd1NGVXdXbUZqYkdSMFVteFNVMDFWY0ZaV2ExcFRWREZGZUZkWWFHaE5NMEp4Vlc1d2MxWldVbGRhUkZKWFlrWndXVlJXVWtOaFJURnlWbXBTVjAxWGFISldiR1JMVjFaU1dXRkdWbGRTVm5CVlZtcENhMVF4U2xkVWJrNVhZbGhvYjFSV2FFTlRNVnB6WVVoa1ZFMVdTbmxVYkZwdlZrZEtTRlZzYkZwaVIxSjJXVEZhVjJSSFZrbGFSM0JwVW14cmVWWlhNVEJaVjBWM1RWWmFXR0pIZUZaWmEyUnZaV3hhY2xwRmRGZGlSMUo0VlZkNGIyRkhSWGhqUnpsWVZteGFhRlpxU2xOV01VNTFVMjE0VTAweFNsbFdiWGhoWkRGV1YxcEdaRmRpV0VKelZXMTBjMDVHYTNkaFJtUmFWbXR3V0Zrd2FFdFdhekZJVlc1YVdrMVdjSHBaTVZwSFkyMVNSMVJzWkU1V1dFSm9WbXBHVTFReVNYbFRhMlJVVjBkNFYxbHROVU5YUmxweVZtMUdWVkpzVmpWYVZWcFBWMFpaZDFkclpHRlNWbkJ5V1ZaYVlWTkdjRVZWYkdSWFVsZDNNRlpHVWtKa01sWkhWV3hzYVZJeWVGUldNR1J2Wkd4YVIxVnJkRTVOYkVZMFZqRm9hMVp0U2xWaVJrSlhZbGhvTTFVd1dtRlhSVEZGVW14a1RsWllRbUZYVmxaWFl6RnNWMU51VWxaaWJrSllWbXBPYjJWV2NFVlJWRlpYWWtaS01GbFZWVEZoUjBWM1ZtcFNWMDFXY0ZoWlYzTXhWakZXY2xkdGNFNU5iRXBaVm0xMFZrMVdXbGRYYmxKT1ZucHNWRmxyV2xkT1JscDBZM3BXVjFKc2NGWldiWGgzVjJ4YVYxZHJlRmhXYkhCb1ZtMHhTbVZ0VGtoU2JFNU9ZbXN4TTFZeWVGZFpWazEzVGxoT1YySnJXbFZaYkdoRFYwWmFjMWR1WkZWV2JIQldWVEkxYTFZd01YSmpSV2hXVFZkb2VsWkhlRTlUUmxaelZHeFdWMVl3TUhkWGJGcGhXVmRTV0ZScldtdFNNbmh3Vld4U1YwNUdXbGRhUkVKT1VqQmFlbFV5ZUd0aFZrcEdUbGRvVjJKVVJuWmFSM2hoVWpGa2RHUkdUbWhsYkZwaFZsUktORll4VlhkTldGSmhUVEpTV0ZWdGVFdFVSbXh4VW01T1dGSnNTbHBYYTJRMFZrWk9SbE5zVWxoV00xSllXa1JHVm1WSFNrZGhSM1JUVjBaS2VGZFhkR3RWTVU1SFYydGtWbUV3Tlc5VVZWSkhUVVpzVmxaWWFGZGlWbHA1VmpKME5GWnJNVmhWYkdoV1RVWndURmt5ZUd0a1IwNUhXa1pPV0ZKVmNGaFdiVEIzWkRKV1NGTllhRmRoTW1oVVdWZDRkMWRXYkZWVGJUbFdVbTE0ZWxkclVsTmhNVnB6VjFSS1ZtSllhSEpaVmxwaFZsWktjbHBHWkU1aWEwcFJWbXBLZW1ReVVYaFVia3BwVW0xb1dGUlVSa3RsVmxwMFRWUlNWazFFVm5wV01uaFhWa2RHTm1KR2FGWmhhM0IyVmpCYVYwNXNVblZUYXpsVFRWVlplbFpHV2xkWlZscHpWMnRhVDFadFVsZFVWV1JUWkd4V2NWSnVaRk5XYXpWNVdrVmtNRlV5U2xkVFdHUlhZV3R2TUZaVVNrZFNhekZKWVVaU2FHSkZjRmxYVjNoVFZqSk9jMVZ1VGxoaE0wSnpWVzE0UzAxR1VsZFdhbEpWWWxWYWVWWXllR3RXTWtWNFkwaEtWbVZyV2xCVk1GcExZMnhhZEZKc1RrNVNia0pSVm14a2QxSXhXblJXYms1WVlrWndWMWx0ZEhkVU1XeHpWMjFHV0Zac2NEQmFWVlpQVmpGYWMyTkliRnBOUmxwUVZtcEdTMDVzV25WalJscHBWMFV3ZUZadGNFZGhNazE0Vlc1U2FGSXphSEJWTUZaTFRURlplRlZyWkdsTmJFWTBWbGQ0WVZReFdsZFhia0pXWWtkb2RsWldXbGRqTVZaMVUyMTRhVkp1UWpaWFZsWmhaREZSZUZOdVNsaGlSbkJYVkZkd1YyTnNXa1ZTYTNCclRXczFTRlZYZUd0Vk1rcFdUa1JDV0dKSFRqUlZiVEZYVWpGV2RWUnRjRk5oTTBKWlZtMTRZV1F4U2tkWGJHUllZa2RTVkZSV1duZFRSbGw1WlVkMFdGSXdjRWRWTW5oclYyeGFSazVWT1dGV1ZuQllWbXhhUzJSV1VuTlZiV3hUVmtaYVdGWnJXbGRWYlZGNFVXeEtVVlpFUVRrPQ==