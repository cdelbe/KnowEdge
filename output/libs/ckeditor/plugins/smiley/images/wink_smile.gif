created: 20181108075032217
creator: Charles Delbé
modified: 20181108075032217
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\wink_smile.gif
tmap.id: d8d7e687-4e33-49c3-ba93-4040372766b2
type: image/gif

