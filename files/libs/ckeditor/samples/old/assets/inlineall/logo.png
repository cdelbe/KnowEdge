created: 20181108075032704
creator: Charles Delbé
modified: 20181108075032704
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\samples\old\assets\inlineall\logo.png
tmap.id: 19b6d996-e0d8-49c7-8593-baa8f017bb26
type: image/png

created: 20181108074509278
creator: Charles Delbé
modified: 20181108074509278
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\samples\old\assets\inlineall\logo.png
tmap.id: e31e1ae1-2755-4ee7-8d40-27b2ff17ee58
type: image/png

Y3JlYXRlZDogMjAxODExMDgwNzQyMTQxNzANCmNyZWF0b3I6IENoYXJsZXMgRGVsYsOpDQptb2RpZmllZDogMjAxODExMDgwNzQyMTQxNzANCm1vZGlmaWVyOiBDaGFybGVzIERlbGLDqQ0KdGl0bGU6IGM6XFVzZXJzXENoYXJsZXNcZGV2XHByb2plY3RzXHRpZGRseXdpa2lcd2lraVx3aWtpXHRpZGRsZXJzXGxpYnNcY2tlZGl0b3Jcc2FtcGxlc1xvbGRcYXNzZXRzXGlubGluZWFsbFxsb2dvLnBuZw0KdG1hcC5pZDogZThjYzk3MDUtODZlMC00ZTgzLTg0MGItZmU2MjAyYzY5Y2Q5DQp0eXBlOiBpbWFnZS9wbmcNCgpZM0psWVhSbFpEb2dNakF4T0RFeE1EZ3dOek0wTVRnd01Ua05DbU55WldGMGIzSTZJRU5vWVhKc1pYTWdSR1ZzWXNPcERRcHRiMlJwWm1sbFpEb2dNakF4T0RFeE1EZ3dOek0wTVRnd01Ua05DbTF2WkdsbWFXVnlPaUJEYUdGeWJHVnpJRVJsYkdMRHFRMEtkR2wwYkdVNklHTTZYRlZ6WlhKelhFTm9ZWEpzWlhOY1pHVjJYSEJ5YjJwbFkzUnpYSFJwWkdSc2VYZHBhMmxjZDJscmFWeDNhV3RwWEhScFpHUnNaWEp6WEd4cFluTmNZMnRsWkdsMGIzSmNjMkZ0Y0d4bGMxeHZiR1JjWVhOelpYUnpYR2x1YkdsdVpXRnNiRnhzYjJkdkxuQnVadzBLZEcxaGNDNXBaRG9nTldKa1pHUXdaVGd0TldSbU1DMDBNREUzTFdFd09Ea3RaRFl3TjJJME5Ea3lNV0psRFFwMGVYQmxPaUJwYldGblpTOXdibWNOQ2dwWk0wcHNXVmhTYkZwRWIyZE5ha0Y0VDBSRmVFMUVaM2RPZWtFeFRXcG5lVTU2VVU1RGJVNTVXbGRHTUdJelNUWkpSVTV2V1ZoS2MxcFlUV2RTUjFaeldYTlBjRVJSY0hSaU1sSndXbTFzYkZwRWIyZE5ha0Y0VDBSRmVFMUVaM2RPZWtFeFRXcG5lVTU2VVU1RGJURjJXa2RzYldGWFZubFBhVUpFWVVkR2VXSkhWbnBKUlZKc1lrZE1SSEZSTUV0a1Iyd3dZa2RWTmtsSFRUWllSbFo2V2xoS2VsaEZUbTlaV0VweldsaE9ZMXBIVmpKWVNFSjVZakp3YkZrelVucFlTRkp3V2tkU2MyVllaSEJoTW14alpESnNjbUZXZUROaFYzUndXRWhTY0ZwSFVuTmFXRXA2V0VkNGNGbHVUbU5aTW5Sc1drZHNNR0l6U21Oak1rWjBZMGQ0YkdNeGVIWmlSMUpqV1ZoT2VscFlVbnBZUjJ4MVlrZHNkVnBYUm5OaVJuaHpZakprZGt4dVFuVmFkekJMWkVjeGFHTkROWEJhUkc5bldUSlZkMDFFUVROT2FsbDBUVzFhYWs1NU1EQk5SRUV3VEZkRk1scHFSWFJOZWsxNlRsUm9iVTVVWnpOT1ZFWnRSRkZ3TUdWWVFteFBhVUp3WWxkR2JscFRPWGRpYldOT1EyZHdXazB3Y0hOWFZtaFRZa1p3UldJeVpFNWhhMFkwVkRCU1JtVkZNVVZhTTJSUFpXdEdObFJXVW01T1ZUVTJWMVUxUkdKVk5UVlhiR1JIVFVkSmVsTlVXa3BTVlRWMlYxWm9TMk14Y0ZsVVYyUlRVakZhZWxkWVRsQmpSVkpTWTBoU2FVMXNTbmRYYlRGellrWndSV0l5WkU1aGEwWTBWREJTUm1WRk1VVmFNMlJQWld0R05sUldVbTVPVlRVMlYxVTFSR0pVUmpKWGEyUnpZbGRHV0ZadWJGQmhWVXBGV1ZWa1IyVlhTa2hXYm5CS1VsWktjMWxyWkUxU1NFWlNUVVYwYTFJeWQzZFphMlJXVG10c1NGUlVXbGxTYkZvMlYyeG9TMlZzYUVaVWJUbGFWMFZ3ZWxkc2FFOVpNWEJJVm1wS1dWTkZTalZaYWtwM1lrWnJlbFZ1Y0ZsVFJrcDNWMnRrVTJNeVZsbGFTRUpvVFcxNGFscEVTbk5qYlVaWFpVUk9hRll6VW5kWFJXaFRZMFp3U0ZWdVRtRlhSWEEyVjBWa05HTkdiSFZVYlU1YVRXNVNjMWRyWkhOTlIwbDZVMjFPYWsxcldqQlpNR1EwWWtkTmVHVklXbWxTTVVwcVYxWm9UMlZzY0ZsVmJuQlpVako0TVZsclpITmtWbkJZVW01T2FWSnVhSHBaYWtwclpHdDRkVkZ1Vm1Ga2VrSk1Xa1ZqZUdGSFRrUk9XRUpoVWtjNWJsUXdaRTlpVlRsWVZWaHdUazFzVmpCVU1WSkdaVlUxVkUxRVFscFdNSEJ4VkVaU2JrMVdjRlZhTTFKUFZrVldObFJXVW5KTmF6VklWMWhvV2xaR2NHOVNSa1ozVFVkV1dWRnRlRkJoVlVwM1dXeGtSMkpzY0ZSUFdHUnBZbGRPVDFFeVpIZFhhekIzWTBoT1dGWnRhRlJaYTFwM1VsZEplVnBGTldoaE1Ga3dWa1JDVTFKdFZrWk5WVlpoVFRKU1VGbFhjM2ROVmxKWlkwWktUazFFVmxaWGFrRXhVa2RLVms1VVZsaGlSMUpJVkZWa1NtVnNUbFZYYTNCVFZsUldNbFl4V205VE1rMTRZMFpzVlZZeVVsUlZha1poWld4a1dWUnNRbXBTVmtwVFdUQm9VMkZWTVhOVGJtUllZbFJHZWxsclduZFNWMGw1V2tVMWFHRXdXVEJXUkVKVFVtMVdSazFWVm1GTk1sSlFXVmR6ZDAxV1VsbGpSa3BPVFVSV1ZsZHFRVEZTUjBwVlVtcEtXR0V5VW5wWmJHUkhWMFphZFdKR1FtaFdWWEJHVjFaV2ExSXlWbGhUYTJoWFltNUNTMVZzV2t0ak1XeHlXa1V4VTFORldsTlVWVll3WVRGSmVXUXpaRnBoTWxKWFZHMTBjMU5HVWxWWGJHeFRZa1p2TWxZeWVHOVRNbFp6WVVWYVZXSlViR0ZXTUZaM1pXeGtjMkZGT1ZwTldFSkpWbTF3UzFkV1RrWlRhbFphWVd0d00xbHJXbkpsYkZaMVkwWnNWRkpyY0ROV01uUnJWVEpOZVZac2JHRlRSVXB2VkZjeE5HRnNjRVZUYms1cVlsVmFXRnBWVWs5aFJsbDZWVzVrV0ZKWGFGUlpNRnAzVTBaV2RWUnRSbGhTV0VFeVZqQldhMDVIVGtkaVNGWlZZbFUxWVZSWE5WTmpNV1J5V2toT1RsSXdiRFpWTWpGUFlXc3hjbGRxUWxwTlIxRXdXV3RrVG1WSFZrbFhiV3hUVFZWd2NWWXhXbTlVTWxaelkwWnNWbUp1UWxwVmFrbzBUVlpzY2xwSVRtdFdia0paVlcwMVQyRldTblZoU0hCYVlXdHdjbHBIZERSa1ZrWjFWbTFHYTJWclNrMVhhMVpxWlVkR1NGUnJVazlYUlVwb1ZXdGpOV0pzVW5SalJXUm9VbFJXU1ZadE1YTlVNa3BXVm1wQ1ZWWXpRbmxhUkVFeFVrVXhSVkZzY0dsV1ZuQjNWa1ZhYTFOdFZuSk5WbFpUVjBaS2FGVnJWa3RrUm1SMFkwaEtiR0pJUWxsVk1WSlhWREZLUjJOSVNsTlNhMW96VkZWa1YxZFdSblJsUmtKb1ZsVndNMWRYZUd0U01rcHpZMFpTVUZkSFVuQlpiR1JQVkRGRmVWcElaRmhoZWtJeldUQm9UMWRHV25SaFJsSmFZVEZ3TTFWc1pFcGxWbkJHVGxkb2FFMUdhM2RXYTFKRFZURktkRlpyV2s1V1ZscG9WRlJLVTFWR2JGaGpNMlJPVW14S1dGWlhNWGRVYXpGRlVsUktWMDFXVlhoVmEyUkxWbXMxVlZac2FHbFNNVXBKVmtaV2ExTnRWbk5VYkZaWVlUTkNWRlpzVWxkTmJGbDRWMjA1VkUxck1UUlpNRnB6VmxaWmVWVnNVbFpoYTFwb1dsZDRhMWRXVW5OUmJYQlRWbXR3VkZkVVFtOVZNa1pXVFZoT1ZHSnRVbGxaYkZKSFpXeHNjbGR1WkZOV01HdzFWMnRWTVdGSFJYZFhWRUpYVWtWS1ZGVnRNVmRTYXpGV1ZtMUdUazFzU2xGWFZtUjZaREF4UjFWc1pGWmlXRUpQVkZWU1JrMXNXWGhXVkVaVFVqQndWbFZ0Y0V0WFIwVjVWVzV3V21KSFVraFdNRnBoWkZkS1IxRnRhRmRXV0VKSFZqRmFWMkV4U1hsV2JHaFVZVEpvV0ZsdE5VTlRNVlp6VjJ0MGFrMVhlSGxYYTFWNFZURk9SbGRzVGxWV1ZsbDNXVlJHU21WWFVYcGFSbkJvVFd4S1dGWkhNVEJqTVU1SFZXeFdXR0pIZUZSWmExcDJUV3haZVdWSE9WUk5iRnA2V1ZWV1lWWlhTbFZpUjBaWFRVWmFNMXBYZUd0ak1rWkdUMVp3VGxkRlNrcFdiVEYzVXpGa1YxUnJXbFJoYkZwaFdWZDBkMDB4YkhKWGJrcHNZa1phTVZrd1duTldSa3B5WTBST1YwMXVVbkpXVkVwT1pWWmFjMkpIUmxSU1ZYQjJWa1pqZUU1SFJuTmpSVlpVWW1zMWNWbHNWbUZYUm5CV1ZXczVhRkpzYkRaV1Z6VnJWMFpLV0dGR1VscE5SbkF6VlRCYVYyUldVblJTYkdoVFYwVkZlVlpxUWxkaE1WRjVWRzVPYWxKdGFGZFpiWFJMWTJ4V2RXTklUazlXYlZKSFdWVlZOV0ZHU1hkalJuQldWbnBXVUZkV1dtdFNhelZZWTBad2FHRXlPSGRYVmxKSFlqRk9SMU51Vm1wU00wSlBXV3RhYzAweFpGbGpSV1JQVWpBMVNWVXlOVk5pUms1R1UyNUNXbUpHY0doWmFrWnpZMnh3UlZWc2NFNWhNMEpLVmtSR2FrMVhSbGhXYkZaWFlXczFZVmxzVWtkalZscElaRVU1YTFac1dqRldWM2gzVjBaS1ZsZFlhRmhXYkhCeVZsZHpNV050U2taV2JXeFRUVzFvYUZadGNFTmtNazVYV2taa1ZtRXlVbkJXYkdodlZteHNWbGt6YUZwV2EydzBXV3RTUTFaWFJYaFRhM1JoVmxaVmVGWnJWWGhTVmxaMFVtMW9hRTFJUWpOV2ExWmhWVEpHZEZWWVpGQldWbHBaVm10YVMxUXhiSE5YYkZwc1ZtMVNNRmt3VlRGVWJVcEpVV3hPVlZaV1dYZFpWRVpQVTBkV1JWUnNhR2xTYTI5NVZqSndTMUl4WkVaTlZtaG9VakJhVDFscldscGxWbVJWVVcxd1RsWXdjSGxXVjNoTFlWVXhTVlZ0T1ZkaVdHZ3pWV3RhWVZKV1NuSmtSVFZPVWtWYVNGZHJWbGRpTVd4V1RWaEdhVkpWTlZkV2JYaGhVMFpXV0dWR1RtcE5Wa3A2VmpJeGIxVXhXbk5qUm1oWFRXNUNSRlZxUmtkak1VcHpWMjE0VTJKclNsUldiWGhYV1ZaRmVGWnNaRlZXUmxwVVZXMTBZVmRHYkhKV2EzUldZa1p3VjFZeWRGTldNVWw2WVVaU1ZXSllhRkJXYWtaaFkyeE9jMU5zWkZkV2JrSlZWbXBLZDFNd01VaFVXR2hVWWtkU1ZGbHJaRk5XTVd4WVpVVmtUMVp1UWtoV1YzUXdZVVV4VmxacVVscFdWbkJRVm1wR1MyTXlUa2RWYkhCT1lteEtNbFpHVWt0V01WbDVWR3RhVGxZd1drOVdiVFZEVkRGYWNWTnFVbXROVlRFMFZUSTFWMVV5U2tkalJtaGFWa1ZLTTFaVVJsZE9iRTV4VVcxb1YyRXpRalZXVkVsNFlqSktSMU5xV21sU1ZUVllWbTV3UjFZeGNFVlNhelZyVFZad01GbFZXbUZXUmtwWFkwVjRWMVpzU2t4YVJFWmFaVlpPZFZOdFJsTldia0pYVmtaV1UyTXhVa2RYYTJSV1lYcHNiMVp0ZEdGWFZteHlZVVZrYUZZd2NFcFZWelZYVjIxV2NsTnNRbUZXVjFKSVdYcEtSbVZ0UmtaT1ZtUlhVak5PTlZaclpEUmhNbFp5VFZaa2FsSnRhRzlWYTFwM1ZteFNWbHBHVGxkV2JYY3lWa2N4TUdKR1duSlhibkJYWWtaS1RGWlhjM2hUVmtaelZtMUdVMVpzY0hsV1Z6QjRVMjFXU0ZKclZsTmlXRUpZV1d0b1FtVnNXa2RXYkU1b1lsWmFTVlpIZEZkaFJrNUlWVzVDVlZaRldtaFpha1poWkVVMVZsUnRiR2xXYTI5NFZtcEpNVll5UlhoYVJXaHJVa1p3VmxaclZURlNSbEowWlVoa1dGWnNXbFpXUjNoM1lWWmFXVkZ1WkZkaVJrcE1Xa1JHVDFZeFduSmlSbWhwVWxWd2IxZFdXbE5qTVZwelZsaHNhbVZzU25GWldIQnpWMnhaZVdSSE9XaFNhMVkyVmtab2QxWlZNVVpOUkVKaFZqTm9NMXBGV210a1IxWkdUMVUxVkZJeVRqTldNV1IzVVRGS2RGVllhRlZoTVhCVldWZDRTMVJzVWxobFJYUlBWbXhhZWxaR1VsZFVNVnAxVVd0d1dHRXlVak5XTWpGR1pEQXhTV0ZIUmxOaVJuQlZWMVJHWVdFeFdYbFNhMXBoVWpOU1QxbFljRmRrTVZwWFlVaGtXbFpVUmxoWGExWnZXVlpKZVdGR1FsVldWMmh4VkZWYWExZEZOVlpQVjJ4WFlURlplbFpxU2pSVk1rWlhWMnRvYTFKR1dtaFZNR2hEVmtad1NHVkhkR3RXYkVwNlZsZDBORlJzU1hwYWVrcFhVbXh3V0ZscVJtdFNNVTVaWWtaa2FXSllhRkJYVnpFMFkyMVdjMVZZWkZkaVdFSnlXV3RhZDFJeGEzcGpSVTVWVWxSR1IxbHJVbE5aVmtwWVlVVjRWVlpXY0ZCV2FrcEhVakZLZEdWR2FGTk5iV2hVVmpGYVlXRXhUWGxXYmxKV1lrWmFWRmxVVGxOV2JHeFhZVVpPYWxac2JEUlpWV2hyVmtaYWRHUkVWbGRXTTAxNFZqQmFZVlpyTlZkUmJGWlhUVEpuZWxkV1dsWk5Wa3AwVTJ0b2FWSnRVbFJWYWs1dlZqRmFXR1JHWkU5U2JIQjZWVzE0VTFWR1duUmxSVFZWVm14d00xVjZSbFprTVZaeVYyMTRWMkpZYURaV2Fra3hZVEZrUjFOc2FGWlhTRUpvVlcxNGQxZEdWWGxsU0dSWFZtNUNSMVl5ZUd0VWJFcDFVV3hTV0dFeVVUQldWRVpMVWpGYWMyRkhiRk5XYmtKNlZsUkNZVk13TlhOV2JGWlRZbGhTVmxsclduZFNWbEY0V1ROb1ZtRjZSbmhXYlhoTFdWWmFObFpyZUZaaVJuQklWakJWTVZaV1JuUmtSVFZUWWxSck1GWXllR3BrTWxaSVZHNU9VMkpHY0hOVmJUVkRWbFphY2xwRVVsUldiRVl6Vm0weE1GWnNTbk5YYWtaV1RXNVNWRmxVU2t0U2JVVjZZa1p3VjFZd01UUlhhMXByVWpGYWRGUnJhRTlXVkZaWVZXcEtiMVJXV25STlZFSnJUVVJXV1ZaV2FIZGhSa3BZWlVaU1ZWWkZiM3BhVlZwelZsWkdjbHBHVmxkV1JsVjRWa1JHVTFFeFdraFdia3BxVW14YVYxUlhOVU5WUmxwVlUyczVhMUl4U1RKV2JYaDNWakZaZWxwNlFsZGlSbkJVV1hwR2ExWXhTbGxqUjBaVFYwVkthRlpHWkhwTlZsbDRWbXhzYWxKVWJGUlVWVkp6VTFaUmVGVnJPVmRTYkhCYVZsWlNTMVl5U2xWUlZFWmFZV3RhU0ZwR1dsTmpiVVpIVVd4a1YwMXRZM2RXYkdNeFpESk5lRkpZYkZWaVJuQnhWVzB4TkZsV1VsaGxSMFpyVm0xU1dGWnRjelZoVmxwelYyeGFWazF1VWxSV2JYaEtaVVphY1ZWc2NGZFNWbkF5Vm0xMFlWUXhXblJTYTJ4V1lYcHNjRmxyVm5kVk1XUnlWV3QwVmsxcldsaFhhMmhMWVZaS2NsZHVTbFZXYldoRVdURmFVMWRGTlZoU2JXaHBVbXhaTVZaSGVGWk9WbGw0VTJ0a2FsTkhhRmhXYkdSU1RVWmFjMWRzV214U01IQklWako0WVZVeFdYaFRiR3hZVmtWYWNsbFVTbGRqTWs1R1YyMTBVMVl5YUU1V1JsWnJWVEZhUjJKR1ZsUmhhMHBoVm0weFUxZEdiRlpXYkU1WFRWVndWMVl4YUhkWGJGcEdVMjV3V2xadFVsaFpNbmhoWkVkV1NHUkhlR2xTYlhRMFZtMTBWMWxXV1hsU2JsSlhZVEZ3VjFsdE1XOWpSbGwzV2tjNVZGSnRkRFJXYlhCVFZqSktSazVXV2xwaE1WcDJWa1JLUm1WV1ZuTlNiR1JUWld0R05GZFVRbFpOVjA1WVUydG9hVkpzY0U5V2JYUnlaREZhY2xac1pGcFdNVnBZVmxkNGIyRnNUa1pYYkd4WFlsUkdkbFZyV210V1ZrNXpVMnMxVGxaWVFqWldiWGh2WWpGa2RGTnJaRlJoTW5ob1ZXcE9iMkZHYTNoYVJrNVhUVlpLZWxsclZUVmhWbVJJV25wQ1YyRXhjSEpXYWtwTFpFWlNkVlZyTlZSU00yaFZWbTEwVjFadFZsZGlSbFpUWWxWYVVGbHJXa3RYYkd0M1ZXeGtWMVpyY0hwV01uUlhWbFV4VjFkdVdtRldWbkJRV1RGa1MxSnNUblJqUm1SWFZqTk9ORlpzWTNkTlZrbDRWRzVTVkdFeWFGVldNR2hEVlVaV2NWSnJjR3hTYkZZelZqSTFUMVJzU25OWGJGcFhVbXhLUkZsV1drOVNNV1IxVld4b1YySlhhRmxXVjNSaFdWVTFjMU5zYkZSaVJuQlVXV3hvYjFWR1drVlJiWFJPVWpGYWVsWXlkR3RaVmtwWFUyeGtWbUpZVW5wVWJYaFhWMFUxV0ZKdGJFNWhlbFkxVmxSSk1WWXlSbGhUYmtwWVltMVNWMVp1Y0VkTk1XdDRWMjEwVjAxcldrZFVWbFV4VlRGYVNGa3phRmhXYlUxNFZXcEtTbVZHVW5OV2JGWnBZbGRvVlZaWGRGZFpWMGw0WWtoS1ZWWkdXbEJaVkU1UFRURnJkMVp1WkZwV2JIQkpWbFpvYzFZeFNrWlRhMmhhWVRKU1ZGVnFSa3RrVjBwSFVXeGtUbFpzYTNoV01uUlRVMjFXUmsxWVRsaGlhM0J6VldwS2IxVXhVbFZTYm1ScFRWZDRlRlZYTVRCWFJscHlUVlJhVmxaNlZucFpWVnBLWlVaa2MxUnNaRmRTV0VKTlZrWmFZVll4U1hoalJXUlhZbGhDVkZsc1pHOWlNVnBJWkVjNWEwMVdSalJaYWs1cllWWktXR0ZHVmxkaGEwb3pWVlJHVjFZeVJraGtSM0JYVmtWYVlWWXlkR3BOVmxwSFdrVmFhbE5IVWxoVmJGcGhWakZ3VmxaVVJsTldNSEJKV1d0a2QxWXhXWHBoUjJoWVZtMU9NMVJyWkZkVFJrcHlWMnhTV0ZJeWFIbFhWbEpEV1ZkSmVHTkZaRmRXUmxwVVZGWmtVMWRHV1hsalJrNVdVbXR3V1ZsVlVrTldiRnBHWTBod1lWWnNjSEpXYkZwM1VsWlNkR05GTlZkV2JHOHhWbTF3UjJGck1WZFdibEpWVjBkb1ZsbFljRWRYVm14WVpFaGtUazFXU2pCWk1GcDNZVEF4V1ZGc2JGVk5WbkJvVm14a1MxZFdiM3BoUm1ob1RXeEdNMVpyVWtkWlZrbDRVMjVLVldKWVVsZGFWekUwV1Zaa2NsWnNUbEpOVlhBd1ZXMTRhMVV5Um5KalJUbFhZbTVDU0ZSc1dtRldNV1J5VTIxd2FWSnVRbGhXUjNoV1RWWmFSazFJYUdsU1JUVllWV3RXY2sxV1dYZFhiazVyVW14YVdsVXlNWE5YUmtwWlVWUkdWMUpzY0doV2FrcFRWakZrY21KR1VtbFdSM2hSVmxSQ1YxTXlUbGRhUm1oT1VrVktjbFJXV21GVGJGcDBZMFYwVjAxc1dqQlpWV2hUVm0xS1ZWSnRhRlpoTVhCVFdrUkdUMVpXVm5OYVJsSlRUV3hGZVZZeFdtRldNVnAwVlc1U1UySnNTbEJXYWs1RFZHeFNXRTFVVGs1V2JGcFdWa2N4UjFReFdYZFhiSEJYVFdwV2FGZFdXa3RXVjBWNldrWmFhVkl4U2xsWGJGWnJWREpPYzFkdVVteFNNMEpaVld4V2QxSnNXbk5XYlVab1RWWnNOVlp0ZEZkWFIwcDBWVzA1Vm1KWVRYaFVWVnBhWlZkT1JscEdWbWxTZW1zeFZtMHdlR014V2taTlNHeHNVMFp3V1ZsWGN6RmtWbkJYVjJ4T1QySkhPVFpXTW5oWFZURkplRk5xUmxkaVdGSm9WVmR6ZUdSR1NuTmlSbFpwVWxSV1VGZHNXbTlWTWxGNFkwVmFXbVZzV25GVmFrWkxVakZhZEdWRlRtbFNiVkpLVlZkNFQxZHNXa1pUYm5CWFVrVkdNMXBYTVVkVFJUVlhZMFprYVZkSGFGUldhMXBoVmpGUmVGVnNaR2xUUmtwUlZUQmtiMkZHVWxoTlJGWlBVbXh3ZUZVeFVsZFdNVXAwWlVac1dsWldXbFJXYTFwTFZqRmtjVlpzWkU1aWEwbzJWbGQ0YTFReFduTmFTRkpzVW0xU1QxWnRlSGRrTVZsNVpFWmthRTFyV2toV1J6VlRWMGRLUm1OSE9WWmlXRkpNVlRGYWNtUXhXbk5hUjJ4cFVsaENWbGRyVm05ak1WVjNUVWhrV0dFeWVHRlVWekV6WkRGU1ZsZHVUbGROYTNCSVZtMTRWMkpIU2tobFJGWlhVa1ZhY1ZSc1ZURldNVlp4VjIxb1ZGSldjRlpXVjNoclZXc3hWMXBHWkZaaVdGSndXV3hXZDFOc1draGxSbVJvWVhwR1NsWlhjR0ZXTVVwelYyNWFWazFIVWxoV01WcGhaRlprYzFWc1pGZFdSbG8xVm0xd1IxWXlTWGhYYmxKVVlrZG9XVll3WkRSV01WVjNWMjVrYTFac1dsbGFWVlUxVlRKRmVsUnFWbHBOUm5CRVZsUkdWbVZzVm5WWGJHUlRVbFZ3V0ZkVVNYaFVNRFZXVDFaa1dHSllRbkJWYlhSM1pVWmtjbFZyZEZSTlJFWjVWRlpTWVZsV1NYbGhTRVpXWVd0YVRGa3dXbmRUUjA1SFZHczVVMkpVYXpKV2FrWlRVVEZXZEZOdVRsZGhhM0JZVm01d1YxZEdiRlpYYkU1WFlrWmFWbFZ0ZUd0Vk1VcFhZMFJHV0Zac1dsaGFSRVpMVWpGYWNsZHNUbGhTTTJoWVZsZDRiMVJ0VmxkaVJteHFVak5TV0ZSWGVFZE9SbXhXWVVWT1YxWnJWalpXVm1oclYwZEZlRk51U2xwaVdHaG9WVEZrUjFKV1JuUmtSbWhUWlcxbk1WWXllR0ZXTWtWM1RWVm9WbGRIYUZaWlZFcHZWRlpTV0dWSVpHdGlSbkJLV1RCa1IxUnNTWGhUYkdoWFZqTm9kbFpyV210U01VNXpWV3hhVGxJeWFFaFhWRW8wVkRGT1dGTnJWbGhpUlhCUFZGVmFkMkZHV1hoVmEwNU9VbXhhZVZSc2FGTmhNVTVIWTBaa1ZtSkdTbGhWTUZwaFkyeGFjMVJzYUdobGJGbDRWMVpXVjJNeFdrZGFSVnBwWld0S1YxbFVTbTlWUmxKMFkzcEdWRkl4V2tsWmExVTFWV3N3ZUZOc1NsZGlSbHBZVm1wR1YxTkdVbk5YYXpsWFZtdHdXRlpYTVRSWlYxSkhZa1prV0dKVlduTlpiRlpoWlVaV2RHUkhPVlpTYTJ3MVZERlNVMVpzV25SVVdHaFhZbFJHVUZwRldsZGtSMDVJVW0xNGFFMVlRazlXTW5SclRrWkplVlpzWkZoaE1taFhXVzEwUzJOV2JISldhMlJQVm14YWVWWlhlRTlXUjBwSFYyeGFXbFpYVFRGWmExcGFaVWRPUm1SR2NFNVNhM0JKVjJ4a2VrMUhWa2hUYTFwWVlsaENUMVZyV2xaa01XUnlWbXhPYVUxWFVqQlZNbmh6VmtkR2MxZHNWbGRoTVZvelZGVmFVMk15Umtaa1IyeG9aV3hhV1ZaV1pIcE9WbHBIVTI1S2FFMHllR2hXYkZwTFpXeGFWVk5zWkZOV01GcElWbTE0VjFZd01VZGpSbVJYVmpOQ1JGbDZTa3RTTVdSeVlVZG9VMkV4Y0ZWWFZsSlBWVEZLUjFadVNtaFNiVkpZVlcwd05VNVdiSEZVYlhSWVVqQndNRlpYTVc5V1YwcEhVMnRTVlZac2NGQlZiVEZMVW14d1IxTnRhR2xTYlRoNVZqRlNTMDVIVFhoVmJHUlRZa1pLVVZadGRIZFdWbXh6V2tSQ1RtSkhlSGhWVnpGM1ZHc3hSV0pHWkZWV2JIQllWa1JCZUdNeFpIVlhiRnBvWVRCd1RGZHJaRFJqTVZweVQxWnNWV0Y2VmxSVmJUQTBaVlpaZUZWclpGTmhla1pKVlRKd1YxVkdXbkpqUjJoV1lsUkdjVlJXV25OalZrNXpWR3hXYVZKVVZYaFdWbVF3VkRGYVYxTnFXbFpoYkVwb1ZXdFdjbVF4Y0VobFNFcHJUV3R3UjFwRlpEQldNREZGVVdwU1YxSnRVWGRXYlhOM1pVWktjMkpHYUZkU1ZYQlJWMVpvZDJNd05WZGlSbHBZWVhwc1QxUlhlRXROUm14eVlVYzVhVkpzY0hsWk1GcHpWbTFLZFZGc1FsWk5ibWd6VlRGa1IxSnJPVmRoUjJ4b1pXeEpNbFp0ZUZkaGF6VlhWMnhhVDFOSVFuRlZiRnBoVlVaYWRHVklUazlXYmtKWFYxUk9iMVV4U25OalJtUmhWbGRSTUZkV1dscGxSMDVHVFZaa1YySklRbEZXV0hCTFVqRktWMVpzYkdsU00wSlVWV3hTVjFSc1pISlZhemxYVFZaYWVsWkhlR0ZaVmtweVUyeENWVlpYVW5aVmExcFhUbXhLZEU5Vk9WZGlSVmt3Vm0weE1HTXhVa1pOVld4V1lrZFNWMVJYTlU1TlZsWjBZM3BXVTAxV2NGWldWM014VlRKS1dXRkhSbGhoTVVwSVdXcEtVMk15VGtaV2JHaG9UVWhDZWxadE5YZFNNV1J6Vm14V1ZHSnJjRTlWYlRGVFRWWnJkMVp0ZEZWU1ZFWkhWakZvZDFZeFNrWk9WMmhXWWtad1VGVnJaRk5TTVVwMFkwWm9WRkpWY0haV2Frb3dWVEZOZUZwR1dsQldiRnB2Vlc1d1YxWnNXbkpYYTNCT1lraENXVmt3WXpGaVJscFZVV3BTVjFadGFFeFdWM2hyVW14T1ZWTnNXbWxYUmtwUVYxUktORlF4WkZoVWExcFhZa1UxY0ZadE1UUk9WbGw1WTBVNVZrMXNXa2hWYlhCaFlVWktObEp0YUZkaWJrSllWR3RhVjJOV1NuUmpSVFZUWWtad1IxWldZekZUTVdSSFYyeG9hMlZyU21GWmEyUk9UVVp3UlZKdVRsZFdhM0F3VkRGa01GUnRSbkpYYTNCWVlrZE9ORmw2Um10ak1WcHlWMnM1VjFZeFNsbFdWM2hoVXpGc1YyRXphRlZoYTBweldXdG9RMU5zYkhKWGJYUlhWbXR3VjFScmFHOVdhekZZVlZoa1lWSlhVa2haTW5NMVUxWmtjMWR0YkZkTmJXaE9WbXhqZUUxR1NuSk5TR2hZWWtad1ZsbFVTalJVTVZKVlVtdGtUMkpHY0hwV2JYaFBZVEZLVldKRmJGcE5SMmhRVm14YVZtVnNWbk5qUm5CWVUwVktXVmRYY0Vkak1XUlhXa2hTYVZJemFGaGFWM2hoVlZaYWNsZHNXazlXTVVvd1ZsZHdZVlpHWkVobFJtaGFWak5vTTFaV1duZFdiRnAxWTBVMVUxZEhVVEZYYkZaWFZUSkdjMWRyWkZSaWEzQlpWbXBPYjFaR1VuUk5WVGxVVW14S2VWVXllR0ZoUjFaeVYyeEtXRll6YUdoWlZFWlBWakpGZW1KR1FsZE5NRXA0VmxjMWQyTXhTbk5pUm1oc1UwZFNXVlp0ZUdGV01XUnlWbXQwYUUxcmNIbFphMUpYVmxaWmVsUllaR0ZXYkZZMFdrVmtSMUpXUm5OVGJHUlRZbXRLYUZZeWVHRldNa2w1VTFoc1ZHRXllRk5aVkVwdlZsWmFjMkZHVGs5aVIzUXpWMnRrTUdFeFNYZFhha1pYVFc1T05GbHJaRWRqYXpWWVVteGFUbUpzU2xsV1ZtUjZUbFprV0ZOcldrNVdiV2hZVkZaV1YwNVdXbk5XYkU1b1lYcEdNRlZ0ZEdGV2JVWnpWMjVHV2xZelVqTmFSbHB6WTJ4a2NtUkdWbE5XUlZwS1ZtcEtORlF4Vm5KTlNHUnBUVEo0V0ZWc1pGTlZSbHBXVjJ4T1ZGSnVRa2RaTUdRMFZqRktWMk5GTVZkaGExcFlXWHBHVDFack1WZFhiRkpvWld4YVdGZFdaRFJrTWxKWFlrWnNhR1ZzV25KVmJGSkhaVlprZFdOR1RtaE5SRVpaV1ZWV01GWlZNVmRYYTNSVlZtMVNUMXBYZUU5amJVNUhWbXhPVjJFelFrNVdhMUpIV1ZaRmVWTllhR2xUUlhCWldXMTBkMkZHVm5WalJtUnFUVlpzTkZaWE1EVmhNVWwzVjI1c1lWSldjRlJXVlZwTFkyMUdObEZzWkU1V2JrSjVWMVJHWVZRd05WWlBWbWhUWWtWS1ZWVnRkRmROTVdSelYyMTBWazFWTlVsV1JtaHpWbTFGZUZkc2FGZGlSMUpVV2xaYWEyUkZOVlpVYkU1VFZrWkplbFp0TVhwT1ZscHlUVlZrVTFaRldtRlpiRkpIVWpGd1dHVkZkRmhXTUZwSldrVmtSMkpIU2tsUmEyUlhWak5vYUZsdGMzaFNNV1IxVld4T2FWWXphSFpYVmxKQ1RWWkplRlpZYkd0VFJUVlFWV3BDZDFOV1ZYaFZhM1JWWWtkU1NGVXlOVXRXYkZwR1kwVm9WMUl6YUhKV2FrWnpUbXhTZEdSSGJGZFdSVmt4VmpGU1MwMUZNVWhUYkdoWFlrWmFWVmxVU2pSWlZsSlZVbTVLVGxKdVFrbGFWVlUxVm14S2MxTnFRbHBXVjFJelZsZDRZV014V25GVGJHUlhZbGRvVFZaclZsWmxSbHBYVTI1U1UySkZjRTlaYkdodlYxWmFSVkp0T1dwTmJFcDVWR3RvZDJGc1RrbFJiRnBhVjBoQ2VsVnJXbGRqYkhCR1drZHNVMDFXYjNkWFZFSlhWVEZhZEZadVVtRk5NbEpXV1ZkMGQwMHhVbFpYYTJScVVqRktSMVl5TVRCV01rVjNZMFp3V0Zac2NHaFZha3BTWlZaV2RWVnNRbFJTTW1oMlZtMHhNR1F5VW5OWGJGcFhWa1ZhV1ZadGVGZE5NVlowVFZSQ1ZWWlVSakJaVlZaVFZqSktSMWR1Y0ZkaE1YQllXa1ZrUjFKdFVrZGhSazVYWWtaWk1sWXhXbGRXTWxGNVUydGtXR0pHU2xGV2JURnZWa1pXVlZSc1RsVlNiSEJHVlZjeE1GVXhXbk5YYTNCWFZqTm9XRmxWWkVaa01rNUpZVVp3VGxac1dUQldiRlpXVFZkT2NrNVdaR3BTYXpWWVZGVmFXazFzV25GVFZFWlRUVlZhZWxVeWRHdFdSMFp6VTI1R1ZWWkZTak5VVjNoWFkyeGFjbVJHYUZkTlNFSkhWakowWVdFeVJsZFhXR3hzVTBaYWFGVnFUa05qVmxKVlVWaG9XRkpyY0ZwWlZWcGhWakZrUmsxVVdsZFdNMmhZV1ZSS1VtVldXblZSYlhCT1RUQktkMWRYZEZka01EVlhWMjVPWVZOSVFuSlpiRnBoVmpGYVdHUkVVbWhXYkhCWlYxUk9hMVl5UlhsaFJrNWhWbnBHVUZwR1dsTmphemxZWkVVMWFWSXpVWHBXYlhoVFZESkZkMDVWWkZOaVJuQldXVmh3VjFWR1ZuVmpSVnByVFZaV00xWlhNRFZXYkVwVlZtdGFWazFxVmt4V1JFcExVbXMxUlZGdFJsTldNVXBKVm14V1lWVXhUbGRhUm14aFVqQmFUMVp0ZUhabFJtUllUVVJHV2xadFVsaFdNalZMVlVaa1JsZHNRbHBYU0VKWVZGZDRZVkpzV25OVWJGSlhZa2hDV2xadE1IaGpNa1pJVW01S1RsZEhlRmhVVmxwaFZFWndSbGRyV214V2F6VjZXVEJhVTFkR1NYbGhSVlpYVW14YWRsbFVRVEZTTVZKeVYyMUdVMUpzY0hsV2JYQkxWVEZSZUZac2FHbFNSVXBQV1d0YVMxSXhiSEpoUlRsb1ZtMVNSMWt3YUc5V1ZscFhWbFJHV21WcmNGQmFSVnBoWTIxT1JrNVhhR2xTYmtKU1ZsUk9kMU13TVVkVGJrcHFUVE5DVlZsdGVHRmhSbXhWVW01T1QxWnNjRnBaYTFKRFYyeGFWVkpyYkZaaVIyaDZWakJrUzFkSFJrWmpSbHBvWVhwV01sWnNZM2hTTWs1R1QxWmFhbEp1UWxoVmJGSlhWbXhhV0dORlpGZE5WbG93VmtkMFlWWkhTa2hWYlRsV1lXdEtNMWxWV25kV2JGcFZWbTFzVTAxVmNEVlhWbWgzVlRGV2RGTnNaRlJpVjJoaFZteGtVMk5zVW5KWGJYUlhUVmRTZUZaWGN6RldSa3B6WTBSV1YxSXpRa3hXUnpGVFpFWk9jVmRzWkdsU1ZGWmFWbTE0YjFVeFNrZFZiR2hQVm0xU2NGWnRNVk5UUm14eVZteGtWbUpHY0hsWlZFNTNXVlpLTmxacVRsWmlXRTE0Vm1wR1lXTnJNVmRUYld4cFUwVkdORlp0TVRCaU1WbDRWbXhvVkdFeVVsUldhMVozVjBac2MxcEdUbFZpUmxreVZUSXdOVlp0U2taTlZGSmFZVEpvTTFsVVJscGxWMUpGVld4YVYyVnJXbFZYVnpCNFZqRkplRlJ1VGxKaVdGSlVWV3hXZG1WR1duRlJiVVpvVFZWd2VsbHJhRmRWTWtaelUyeG9WbUpVUVRGYVZscFRWMFV4UlZKc1VrNVNSbG8wVmxaak1WVXhaSFJUYTFwVFZrVmFWMXBYZEhka2JGSlZVbXQwV0Zac1dqRlhhMXByVmpKRmVsRlliRmRTVmtwUVZWUkdVMUl4Y0VaWGJXaFRWMFpLZWxkV1VrSk5SMVpYVjJ4b1RsWlhVbFJXYlhoYVRXeFplV1ZIZEZaU2JIQldWbTE0ZDFaWFNsVldiV2hYVm14d00xWXdaRk5TTWtwSFdrVTFWMkpyU2xCV2JURTBWakpOZVZKc2FGZGlhM0JaV1ZkMFlWWnNWbkZTYm1SWVZteGFlVmRyVWtOV1ZsbDNUbGhvVm1KVVZsQlphMXBLWlZkR1NWcEdaRmRTVlhCSlYxUkplRkl5VFhoaVJGcFhZWHBzY0ZWdGRHRk9WbVJYVld0T2FVMVZOWHBWYlhodlZVWmFXVkZzYkZkWFNFSjZWV3BHZDFOSFVraGtSVFZYVFVoQ05WZFVUbmRVTWtWNFYydGFUMU5IZUdoVmJuQkhWMFpXY1ZKc1RrOWlTRUpJV1ZWYVMyRkZNWEpOVkZKWFVrVkthRmRXV21GVFJsWnlZa1prYUdKRmNFNVdSbFpoV1ZaU2MxcElUbFZoYTBwWFZGWmFkMVl4VVhoWGEzUlhVbXh3V2xWWGNGTlhSbHBHWWpOa1YwMXVhRmhaZWtaUFpGWktjMk5HWkZOV1JscFlWakZTU2sxV1VYbFNiazVYVjBoQ1YxbFljRmRVTVZWM1ZtNWthMkpHU2xkWGEyUXdWbFV4Vm1KRVVsWmlSa3BJVmxSR1MxWnNaSEpsUm5CWFVsVndTVmRXV21GVE1rMTRZMFZhVjJKWVVsaFphMVoyVFZaYVdHVkZPVTVTTUhBd1ZrZDBWMVZ0U25KalIyaFZWa1UxUkZSVVJsZFhWMDVHWkVVMVUySllhRmhYVmxaaFpERmFSazFZVG1wU2JIQldWbTE0UzFkR1ZqWlRhMlJQVmpBME1sVnRlRk5oUjBwWllVWm9XRlpzY0ZSV1ZFRXhWbXN4V1ZOc2FHaE5iV2g2Vm14b2QySnJNVWRWYmxKUFZtdHdVRlp0Y3pGVFJsWllaRWRHYUZaVVJuaFZiRkpIVmxVeFYxZHNRbUZTYkhCeVdURmtSMUl4Y0VkYVJUVk9Va1phTWxadGVGTlNNVTE1VTFob2FsTkZOVzlVVkVaM1kxWldjMVp1WkZkV2JGWXpWMWh3UjFSdFNrWmpTR3hhWVRGd00xWnFSa3RXYlVvMlVXeGFhVmRIYUVsV1IzaGhZekZhVjFWdVNtRlNhelZZVmpCYVMxWXhXbGRYYlhSUFVteHdXRlV5ZEdGaE1VcEhWMnM1VlZaRlJYaFZNbmhYWXpGYVZWSnNVazVXVkVWNlZteGtNR0V4VW5SVGJHeFdZbXh3VjFSVldtRmhSbFkyVTJ0MGExSnVRa1pWTW5NeFlWWktjbGRZYkZkV00xSlVXVEp6ZUZZeFVuVlRhelZYVW10d1ZsZFdVa3RWTVU1elZWaGtXR0V6UW5OV2JGSkhaVlp3VmxWclpGZFNNRnA1VlRKNFExWXhXbk5qUm1oWFlURldNMXBWV2tka1ZtUnpVMjFzVjAxRVJUSldNbmhxWlVaVmVGTnJaRmRpYTNCelZUQmFkMk14Vm5Sa1JYUlRUVlphVmxaSE1UQlhSa3AxVVd4a1ZrMXFWak5XUjNoaFYxWkdjbUpHVmxkaVJsa3dWMVJDYTFJeFpFaFRhbHBVWWtaYVQxUldhRUpsYkZsNVRVaGtUMVpzU2toWk1GWnpXVlpLVms1WVRsWmlia0pZVkZSR1lWTlhTa1ZSYlhSWFlraENXVlpYTVRCVU1XUjBVbTVLVjFkSFVtaFZibkJIWTJ4YVJsZHJPVmRpUm5Bd1drVmFZV0ZXV25OalJYUlhZbGhDVUZsNlJrcGxWbHB5WVVaV2FFMUlRbmhXYWtKV1RVZFdWMkpJVW10U1dGSlBWbTB4VTFkV2JGbGpSazVWVFZWdk1sVnRlSGRXTURGSVlVaHNWV0pHY0VkYVYzaHJaRWRHUjFkdGVHbFdNbWQ1Vm0xd1IxVXlUblJXYkZwUFZrWndVMWx0ZUdGalJsWnhVbTVrYTFKck5ESlZNblF3WVRGS1ZWSnViRmRXYldoTVdWWmtWMk14VG5KT1ZsWm9ZVEp6ZUZac1VrZFdNazUwVld0V1UySkZTbGhWYlhoM1ZERmFjMVp0ZEZkTmF6VklWV3hvZDFsV1NqWmlSbFpYWVRKUmVsUlZXbE5qYkdSMVdrWlNWMVpGV2pWWGJGWnZXVlphUjFwRldsUmlTRUpXVm10V1lWZEdjRVphUms1VVVteEtWbFpYZUZkaFIwcEpVV3RXV0ZkSVFrTmFWVlY0VTBaU2RWSnNUbWhoTTBKNFZsZDRWazFXVGtkVmExWlVZbGhTYzFac1VuTlNWbkJHWVVkR1ZsSnNjRWRVYkZaM1Yyc3hkVkZyVWxaV00yaFhXa1JCTlZac1ZuTmhSazVvVFZoQ1QxWXhXbXBsUm14WVZHdG9WV0V5VW5CYVYzUkxWakZTVlZKdVpGcFdiRmt5VmtkMGExVXdNVlpYYm5CWFVucEJlRlpWV2xwbFYwWkdWV3hhVjJKWGFGUldSbHByVWpGa1IySkVXbGRpVlZwUFdXdFdjMDVzWkhKV2JFNVRUVlUxVjFSc1ZtRlZSbHBHVTI1R1ZtSkdjRE5WVkVaWFZsWkdWVlZ0ZEdobGExbDNWMWQwYWsxV1duTlRhMXBZWVROU1dWbFVSbmRoUm5CWVRWVmFiRlpzU25wWlZXUnZZa2RLV1ZScVdsZGlSbkJ5VmtSS1NtVkdTbGxpUm1ScFVsVndWbFpHVWtKTlYxRjRWMWhzYkZORk5YQlpXSEJYVmpGYVNHVkdUbFpTYTNCNVZqSndTMVpIVm5KWGFrcFZZVEpTVkZWc1duZFRSMFpJWTBVMVRsWnNWalJXYTFKSFlUSkZkMDFWWkZaWFNFSldXVlJPVTFSV2NGaE5WazVTVFZaYWVWZHJXazloVlRGWFkwWnNZVkpYVFhoV2JYTjNaVmRHU1Zkc2NHeGhlbFo1VmxkNFlWSnRVWGxTYTJSVFlrVktWMVJVUmt0VVJscFlUVmhrVmsxRVJsZFViRlpoWVVaT1IyTkhhRmRpVkVaUFZGWmFVMlJIVmtsYVIzQnBVbTVDTkZac1l6RldNa1Y0VjJwYVYySkhhRmhWYm5CSFpXeHdSVkpzY0d4aVZWcElWVmN4YzFSck1VZGpSbXhZWVRKU2VWUnNXbFpsUmxaelYyeE9hR0V4Y0ZoV1JsSkhaREZaZUZkdVNsWmlXRkpWVm0wd05VMHhaSEpWYTJSV1lrWndlVll4YUhOWGJVWnlWMjFvV2xaV2NHaFZiWGgzVWxaR2RHRkhiR2xXTW1ONVZqRmplR1F5U1hoVldHeFVWMGhDVTFscldrdFdiSEJZWlVaa1QxWnNXbFpXUjNRd1lWZEtWbGRyV2xaV2VsWjZWMVprUzFORk9VbGhSbWhwVW01Q01WZHNXbXRTTVdSWFlUTndZVkl6VWxWVmFrcHZUbFpWZW1ORmRHcGlWbHBZVld4b2EySkdTbk5UYXpWVlZrVmFlbFJyV210V01WcDBVbTF3VjJKclNqUldiR014VlRGYVNGSnVUbGhoZWtaWFZGWmFZVlZHVlhkV1ZGWllWakJ3U1ZwRlpIZGhSMHBXVFZSYVYwMVdTa3haTW5ONFVqRmFjMkZIUmxSVFJVcFpWbGR3VDFVeFpGZFdiazVoVW0xU1YxUlZhR3RPUm14eVlVVTVhRTFFUWpSV01uUTBWakF4V0dGRVRtRldiVkpZVm14YVMyTldVbk5hUjJoT1ZtNUNTbFpyV21wTlZsbDNUbFZrV0ZkSFVsRldiR1J2WWpGU1YxcEVVbFpOVjFKNFZWWlNWMkZIUmpaUmFscFhWbnBXYUZsWE1VdGpiRnBaWWtab2FFMVlRbFZXVkVKaFV6RmFWMk5GVmxkaVdFSnpXVlJDWVU1V1duTlhiWEJyVFd4YVYxUldWbTlXVjBaeVYyeFNWMDFIVFRGVWExcFBUbXhTZEdORk5WZGlTRUkxVmxSSk1XTXhVbk5YYmxKcVRUSlNXRlpzV21GVFJsSldXa1ZrVTAxVk5YbFVNVnBQVmpGS2RHUjZSbGhpUm5CeVZtcEdVMVl4WkhOWGJYQlRWa1ZhZUZaWGVGTldNVXB6V2toT2FGSXpVbFJaV0hCSFpXeHNWbUZHVGxkTlZUVklWakp3UzFkdFNsVldiRkpXWWxSR1dGVnFSa3RqVmtwelZHMW9UazFWY0doV2ExSkhZakpOZUZadVRsaGlSMUpWV1cweE5GUnNVbFphU0hCc1VtMTBNMWRyV25kaVJsbDNZMFZvV2sxR1dYZFdNRnBQVW1zMVdXTkhSbGRpU0VJeFZrWlNSMU14U25OYVNFcG9Vak5vV1ZWdE1UUk9WbHB5Vm0xMGEwMVhVbGhaYWs1elZtMUtXR1ZHYkZwV00xSXpWRlJHVjA1c1JuVmFSbHBwVmxoQ1dsZFVRbE5UTVZwWFZHdG9hMUpHY0ZaV01HaERaVlpTVmxkc1NteFdWRVpaV1RCVk1WVXdNVlppTTJ4WVZqTlNkbGRXWkV0V01WcFpZa1pXYUdFd2NGRldSbEpIVW1zeFIySkdXbGhpVkd4eVZtMTBkMU5HVmxoak0yaG9UV3R3U0ZZeU5WZFdWa3BHVTJ4Q1ZsWkZjRXhXYlRGWFVteGtjMkZHVGxkTk1tUTJWbTF3UjJFeFVYZE9WV2hXWVRGYVdWbHJWVEZWTVZKWFYydDBWMUp0VW5sV2JUVlBWbXhaZUZKcVdsWldla1o2VmtkemVHUkhWa1poUjBaVFlraENWVlpyWkRSa01sSlhWMjVXV0dGNlZuQlZiRnBhVFZaYVIxZHNUbHBXYkVZMFdXdG9WMVZ0UlhkT1ZscFZWa1Z3VkZwRVJsZFdWa1pWVW1zMVUySklRa2hXTW5SaFVURlNjMU5ZYkZCV1JscFlWbXhhWVZkR2NGWmFSVFZzVWpCYVIxcFZaREJVYXpGelUydDRWMUo2UlRCWFZscE9aVVp3U1Zac1VtbFdNbWhSVmtaa2QySnRVWGhYYkZwWFlrZFNWMVZxUmtkT1ZuQkdWbGhvYVZKcmNGcFpWVnBIVmtkV2NsTnNRbFpoTVhCTVZXeGFkMU5IVGtaT1ZrNVRZa2hCTWxacVJtRmhhelZXVFZWa1ZtRXhjRkJXYm5CWFkxWlZkMkZGVGxWaVJrcDRWVmN4TUZac1dYZE9WbHBXVFc1Uk1GbFZXbUZYVmxaWllrWmtVMDB5YUZWV2JURjZaVVprV0ZKclZsaGhlbXhZV1d4a2IySXhaSE5XYlVacFlYcEdTRlp0ZUhOV2JVcDBaVWhPVjJFeFZYaFVWM2hyWTJ4YWRWUnNaRTVXVkZZMFZtMHhORkl5U2tkWGExcFBWMFp3VmxadE1WTlhSbkJYVjJ0MFZGSXdOVWhaYTFVMVZrWktjMk5HUWxkV1JUVXpWbTB4VjJSR1NuRlhiRnBwWVRCd2RsWlhjRWRaVmtsNFlraEtWMkpGTlZOWmExcFhUbXhhVjJGRmRGVk5WbXd6Vm0xd1lWZHNXblJoUm1oV1lrWndVRmw2Umt0a1IwcEhZVVpPV0ZJeWFGTldiVEV3VmpBd2VWUnVUbXBUUlRWb1ZXcE9iMWxXYkhSa1JXUlBVbTFTZWxadGREQlZNVXB6VjJ0YVYxSXpVbkpXYlhONFUxZEdTRkpzV2xkTk1tZ3lWMnRrTkdReVVsZGpSV2hyVWxSc1QxVXdXa3RYVmxwWFZXdDBWV0pXUmpSV2JYaHJWVEpLU1ZGc1FsVldSVnBNVkZSR2QxTkZOVlphUm1SVFlsaG9OVlpzWkRCVU1WbDRVMWh3YUZKWGFHaFdiRnAzVFRGU2NsZHRkRmhTTVVwSFdUQlZOVlJzU2toWk0yaFhWa1Z3TTFsVVJrdFNhemxYVjJ4V2FWSnVRbGxYVm1ONFlqRldWMWR1UmxSaVIxSlpWVzEwVjA1c1dsaE5SRVpYVWpCV05GVXllRXRaVmxvMlVtdG9WMVp0VWtoV2ExVTFVMWRPU0dGRk5WZFhSVXBLVmpGU1NtVkhTWGhXYkdSVFlteEtjMVZzYUZOalZteDBaVVZhYkdKSFVsWlZNblJoVkcxR05sWnJXbGRTTTFKTVdWUktSbVF5VGtkalJuQm9UVzFvVFZkc1pEUlNiVlpZVTJ0a1lWSnRVazlWYWs1U1pWWmFjMWRzVG1waVZscDZWbTAxUjJGV1NsZGpSa0phWWtkU1ZGa3llRk5qTVd3MlZtMW9UbFpZUWtsV01uUnZZVEZhZEZKdVVteFRSM2haV1ZSR1MxWkdXa2hsUlhSVFlraENTbFZ0ZUU5aFIxWnlWMWhrVjJGclNsUlhWbVJQWkVaV1dXTkdUbWxTVlhCU1ZsY3hNR05yTVVkWFdHeHFVbFJXYzFWdGVIZFdiRnBJWlVkR2FHSlZjRWxhUkU1elYwZEZlVlZyZUZwTlZsWTBWakZrUzFOSFNraGxSbVJYWWtoQ1VWWnJXbTlrTVVsNFZtdGtWMkpHV2xoWmJYUkxWakZXZEUxVVVsaFdiSEJaV2xWVk1WUnRTbFpPV0hCWFlsaFNhRlpVUVhoWFJsSnhWV3hXYUUxdGFEVlhiRlpoVkRGT1NGWnJWbGhpV0ZKdlZGVmFXbVZXWkZoa1IwWlNUV3hhV0ZscmFFOVdNa1Y1Vld4R1ZsZElRbnBWVkVaWFl6RldkVlJzYUZkaE0wSklWbFJKZUZJeFZuSk5TR2hYVjBkU1lWUlhjRmRsVm10NVpVaGFiR0pHY0ZwWk1GcGhWVEZhU0dWR2JGZGhNWEJvVm1wQmQyVkdWbkphUjJ4VVVqRktkMVpYZUZka01sWkhWVzVHVkdKVlduRldiWE14VTJ4WmVXVkhSbWhXYkhCV1dXdG9iMVl4V25SVmJHaGhVak5vVUZWcVJuZFRSMDVIVldzMVYySkdWalJXYTJRd1lXczFWazVWYUZOaWF6VlRXV3hTVjJGR1dYZGFSazVxVFZoQ1dWa3dXbUZoTWtwV1YyeGtWMUo2UlhkV1JsVjRWbXMxVmxWc1drNVNNbWcyVjFaYVlWWXdOWE5YYkZaV1lsaG9WVlV3Vmt0VlJscHlWV3RPV0dGNlJrbFdWM1JoWVd4T1IyTklUbGRoTVZWNFZGWmFWMDVzVW5Sa1JtaFRUVlZaTVZacVJsTlRNVkpHVFVob1ZHRnJOV0ZXYTFVeFVURlNWVkZVUmxkTmExcEhWbGN4TkdGWFNrbFJXR3hYWWxoQ1RGVnFSbGRUUmxaeFYyeGFhVkpzY0hwV1Z6RXdVekZPVjFkdVNtaFNXRkp2V1d0b1ExZHNXa2hOV0U1WVlYcEdSMVl4YUhkV01rVjRVMnhTVjFKc2NGaFZNRlUxVm0xU1NHUkdUbE5OTW1oUVZteGtORmxXVW5KTlZXaFRZa1phVmxscmFFTlZWbFoxWTBoT1RsSnRVbmxYYTJNMVZUQXhSVlpyWkZkaVdHaEVWa1JHVDFKck5WWldiRnBwVWpKb1dWWnFRbXRUTVU1WFYyeHNhVkp1UWs5VmJUVkRVa1phZEdORk9XbGlWa293Vm0wMVYyRkdUa1pqU0VKV1lrWmFWMVJXV25OT2JFcDFWR3hrYVZaV2NFaFdSbFp2WVRGUmQwMVlSbGRoTVhCWFdXdGtVMU5HVm5SamVsWllVakF4TmxVeWN6RlZNVmw0VTJwV1YxSkZTblpXVjNONFVtc3hTV0pHV21sV01taFFWbTB4TUZadFZsZFdia3BoVTBkU2NsWnFSbUZOUmxsNFlVYzVWbUpWV25sVWJGWmhWakF4U0dGRmVGcGhNVlYzV2tSQk1WZEhVa2hqUm1SVFYwVktXVlpyV21wa01sRjVWRzVLVGxOSVFsaFpiRkpIWTFaV2MxWnVaRlpTYkhCSldrVm9hMVpHU25Sa1JGWlhUVlpLVUZac1drdFhWbFp4VW14a2FFMVdjRkJYVkVvMFYyMVdWMWR1VGxSaVJrcFBWbTE0WVU1V1duRlNiWFJXVFZaS1NWWnRkRzlYUjBwWlZXczVXbUpIVWxSV01WcFRWakZXZEZKc1ZrNVdNVXBaVmxjeGQxRXlSWGxUYmtwUFZrWndWMWxVUmxabFJtdzJVVmhvVjJGNlZscFZWM2h2VmpGYWMyTkZkRmRXTTFKMlZsUktSbVZHVG5WV2JGSlhVbXh3VVZaR1ZsZGtNazVIV2taV1ZHSlZXbkpaYTFwM1YxWnNjbGR0UmxwV1ZFWXdWMnBPYzFaV1dqWldhMUpYVm14d01scEVSa3RqVmxKelYyeGtVMDFWYnpGV01XTjRUa1pGZUZOdVRsVlhSM2hSVm0xNGQySXhiSE5WYms1clZtMVNXVmt3VmpCaFYwcEhZa1JPV21FeVRYaFpWVnBLWkRBMVdWRnNaR2xpYTBveVZsUkdWbVZIVFhoVWJGWlRZbGRvV0ZSVlduTk5NVnBZVGxoS1QxWnNjRWhWYlhoVFlXMVdjazVWTVZWV00wSlVXbFphVm1WR1dsVldhemxUVFZad1lWWlVSbE5UTVZaSFYycGFhVkpZVW1GV2ExWnlaVVpzV0UxVmRGaFdiRXA2Vm0xNGEySkhSWGRXYWs1WFVucEZNRmw2UVRGU01WcFpZVVphYUdKR2NIaFdSbFpUVmpGS2MySklUbGRoYkVwUFZteFNjMVl4V1hsa1NFNXBVbXhzTmxkdWNFdFdWbHAwVld0MFdrMXVhRlJaZWtaclpGWmFjMk5GTlZOTk1taE5WakZTU21WRk1IbFdhMXBPVjBWd1VWVnJWbUZWVmxaeldrWk9WV0pHY0VkV1Z6RXdZVVphY2sxVVRscGhNWEJJVmpCYVlWZFdWblZWYkZaWFZtNUNObGRyWTNoV01XUlhWbXhXVm1KR2NIQlZiVEExVGtaYWMxWnNUbWxOVlhCSVZsWm9jMkpHU25KalJsWldZV3MxUkZrd1dsTmpWazVWVW14YVYyRXpRalJXTW5SWFZqRldSMWRzVm1sU2JYaFpXV3RhZDFZeFVsVlNhemxyVm01Q1NGWlhjekZoUlRCNVlVVm9XRlpzV2xoV1JFWmhWakZ3UjFwSGNGUlNWWEJSVmxSQ1lWTXdOWE5hU0VaVllrVTFjVlZzVW5OWFJsbDRZVWhPVmsxVk5VbFVNR2h6Vm14YWRGVnNRbHBoYTFweVZXcEtSMUpXVG5Sa1IyeFhVbFp3VGxZeWRHRlZNa2wzVFZaa1ZHRXhXbkJWYkdoRFZVWlpkMXBHU2s1aVIzaFpWRlpvYTFaR1NuTlRibkJYVFc1b00xbFVTa3RYUjFJMlVXMUdVMkpGY0c5V1ZFWmhXVmRPVjFWdVRsUmhNMmhQVkZjMWIxVXhXbGxqUlhSWFRVUkdXRlp0Y0dGaFJrcFpWV3hzVjJFeVVsTmFWVnB6VmpGYWNscEdXbWhsYkVreFZsUktOR0l4V2xkVGFscFNWMGRTVmxSV1pGTlVSbFp4VW01T1QxWXhTa2RXYlhoWFlVZEZlbEZ0T1ZkaGEzQjVWR3hhUjJNeFNuVlZiRkpvVFRGS1VGZFdaSHBOVms1SFYxaG9hRkpVYkhCWmJGWjNVMVpaZVdORlpGVk5hM0JaV1ZWb1UxbFdTWGxqZWtaV1lsaG9TMXBYTVVkU1ZrWjBaVVprVjAweWFFOVdhMUpIWWpGUmVGVllhRk5YUjJob1ZXeG9VMk5XYkhOVmJFNVBVbXh3VjFadGNGTmlSbHAwWkVSV1dtRXhTbGhXYlhONFVsWktjbUpHWkU1V2EzQkpWbXhXVm1WSFRuTmpSV2hUWWxoU1ZGVnRNVE5OUmxweVZtMTBWMDFyTlhsVU1WcFhZVVpLTmxKc1pGcFdSVFZ4V2xkNGExWldUblZUYlhoVFlrWndOVlpyWkhkV01WcEhVMWhzVlZkSFVtaFZiWGhMWld4c1ZsZHVaRk5oZWtaWFZrZHpOVlV5U2xkVGEzUlhWbXhLUkZScldsTmpNV1IxVm0xb1UxSlVWbmhXUmxaaFpERmtWMWRzV21oU1dGSnZWbXhTVjAxV1dYbE9XR1JZVW0xU1IxVXhhSGRXVlRGWVZWaGtZVkl6YUdoV01GcExWMWRPUjJGR1VsTlhSVVkxVmpGU1NtVkhVWGROU0doaFVtMTRWbGx0ZEdGV2JGcDBaRVYwVmxKc2NFaFpWV2hoWVRBeFdWRnNiRmhoTW1oSVZtcEdhMUpyTlZsUmJGWlhUVEZLZVZac1ZsWk9Wa2w0Vkc1S1ZtSkZOVmhaVkVaYVRWWmFjbGt6WkU5U01Wb3dWa1pvZDJGc1NsaFZiRlpYWVdzMVZGVjZSbUZqVms1eVpFWk9WMDFWY0RWWGJGWlhWREZWZUZOcldsUmlSMUpoVm1wT1EyUnNWWGxsUjBaUFlsVlpNbFZYTVc5aFZscFpVV3BXVjFKc2NISldSekZYVm1zeFYySkdaRmhUUlVwYVYxZDRhMkl5VGxkWGJHUmhVa1ZLVkZsc1ZsZE9SbXh5Vm0xR2FGWlVSa3BWVjNRd1ZsWktSbGRzUWxaV1JVWXpXbFpWTVZkSFJraGhSazVUVmxacmVWWnRNWGRSYXpWWVZHNUtUbFpXY0ZaWlZFNURZMFphY1ZSclRsUlNiSEJJV1ZWb1QxWXhTWGhUYkdSWFVqTm9SRmxyWkVabFJrNXlaRVpvVjJKV1NubFhhMXBoVmpBMWMxcElTbEJXYldoWVZtMHhNRTVXV2tWUmJHUk9UVVJXV1ZadGVHdGhWa2w2VVd4U1ZtRXhXak5XUkVaVFZsWkdjMWR0Y0dsU2VtdDZWMWh3VDJFeFdsZFRibEpzVW10YVdGUlhOVzlVUmxZMlVWUkdhMVpzV2xaVlZ6RkhWVEZhY21OSWNGaFdNMUpVVmtSS1QxSXhXbkpoUmxacFZrVmFlRlpYY0VOamJWWnpXa2hPWVZORk5VOVZiRkpYVjBaWmVXUkZkRmRpUld3eldXdFNZVlpXV2taWGExSmFWbFp3UzFwRVNrOVNiRkp6Vkd4T1YwMXNTVEZXTW5ocVpVWk9jazVWV2s5V1YxSlpXVlJPUTFVeFduRlVhMDVZWWtkU1dWUnNaRWRXTWtwSVpFUlNWMUl6UWxSWlZFcExZekZPY1ZSc1pHbFNhM0EyVm14V2ExSXlUbGRhU0U1U1lrZFNWVlZxVGs1a01XUnlWbXhPVjAxV2NEQlZiWFJyVmtkS1NHVklRbHBXZWtaVVZUSjRWbVZIUmtkalJUVlRUVlZ3U1ZkVVFtOVJNVkpHVFZWb2FGSllRbGhaYlRWRFZrWndSVkZVUmxoU01GcElWVzE0VDFSc1dsaFBTR3hZVm14d1dGcEVSbE5TTVdSMVVtMW9iR0pHY0c5V1JscFhXVlpLUjFkclpGZGlWR3hYVlcxNFlVMUdWWGxrUlRscFVqQndTVnBWV2tOV2JVVjRVMnQ0VjFJelRYaGFSV1JPWld4T2MxRnNaR3hpV0dOM1ZqSjBVMUV4VlhoWFdHaFRZbXR3Y1ZWdE1UUmhSbEpXVm0xR2FtSklRa1pWTW5NMVZqRlpkMk5JYUZwV1ZuQllWa1JHUzFKc1RuTlViR1JPVW01Q1dWWnJXbXRWTVVwWFYyeFdWMkpWV25OWmEyUXpUV3hrVlZKdE9WSmlWbHA2Vmtab2MxWXlTbFZpUm1oYVlURmFZVnBFUm5OWFJURlZVV3hXYUdWc1dqWlhWM0JQWVRKR2RGWnVTazlXVkd4WVZGWlZNR1F4YTNkWGEyUnFZbFphU1ZsclpIZFZNVXBaVVZob1dHRXhXbWhaVkVwUFkyc3hWMWRzVGxkU2JIQlVWa1pTUjFkdFZsZGFTRTVZWVhwc1ZsVnFRVEZUYkZaWVpFZEdhRTFWY0VkV01qRnZWakZLVjFkdVNsWmxhMXBoV2xWYWQxTkhWa1pQVm1SWFRXMU9ORlpzVWtOaU1VVjVWRmhzVkdFeVVtOVZiR2hUVlVaYWRHVkZXbXhXYXpFMldUQmFUMVpHV25Sa1JGWlhVak5vZWxacVNrWmxSazV4VjJ4a2FHRXdjRmxYVm1RMFZtMVdXRlJyYkZOaGVsWlpWV3hXZDAxR1pGbGpSV1JUVFZaS1dGVnRjR0ZXVjBwV1YyeHNXbUpZYUdoVmJGcFRWakZhVlZGdGRFNVdNVXBMVmxaamVFNUdWWGhUYmtwWVlrWmFXRmxVUm1GbFZsSldWbFJHVTFac1NscFpWV1IzVkd4WmQwNUVRbGRpV0VKRVYxWmFWMUpyT1ZaYVJrNXBZa1Z3YUZadGVHRmtNbEpYWWtoR1VtSkdjSE5aYkZVeFUyeFdXRTFFUm1oU2JHd3pWbTF3VDFsV1NrWlhiR2hhVmxkU1MxcFZXbUZXVmtwellVWk9VMkpyU2xWV2FrbDRaREZaZUZwRldrNVdiWGh3VlRCa05GUXhiSEphUms1WVlrZFNWbFZ0TURWaFYwcFdUVlJXV21KdVFsQldiWGhhWlVaT1dXTkdaRk5XYkhCUlZsaHdTMUl4U2toVmExcFlZa1Z3YjFSVVJrdFNiR1JYVld0T1QxSnJjREJXUjNoelZteGtTRlZzYkZkTlJuQk1WMVphV21WR1pISmFSMnhPVmxoQ1lWWnNaRFJUTVZGM1RVaHdVbUZzY0ZkWlZFWmhVakZTVlZKc2NHeFdiRnA1VlRJeGQxUnJNSGRUYkVKWFVsZG9NMVZVU2xOamF6bFhWVzF3YkdGNlZsVlhWM2hyVkRBeGMxUnFXbFZoTTFKVlZXeFNSMWRXV1hsT1ZVNW9UV3hhZVZVeWVHdFdhekZYWTBaU1dsWnRVbGhWYkZwVFZsWktkR05GTlU1U1dFSTFWbXRrZDFReFJYaGFTRTVVWWtaYVZWbHRNVk5qTVZweVYyeGtUMUpzYkRWWk1HUXdZVVpaZUZKcVRscE5SbkJNVmpCa1MxZEhSa2RXYkZwb1RWVndTRmRzV210Vk1EVnpWMnhzVkdKR2NGaFZiRnB5WkRGYVYxVnJjRTVTTVZwSVdUQlNZVmRIUm5OWGJrSlhZV3R2TUZscVJsZFdWa1owVDFab1UwMVdjR0ZXYTJNeFV6SkdTRkpZYkdoU1ZFWldWbXRXY21WR2NFZGFSVGxZVWxSc1YxbHJXbE5oUjBwSFkwVndXR0V4V25aWmVrWnJaRVphZFZWdGNGTldSbHBZVmtaU1ExTnJNVWRhU0Vwb1VtMVNjRlp0TVZOWFZscElZek5vVjFKdFVraFdNbkJYVmpKS1IxTnVXbGROYm1oeVZXcEdVMVpXVW5OV2JXeFRZa2hDVFZaclVrZGhNVkY0VTFoc1ZXRnNjRlZXYTFwaFZteHNWMkZHVGxoV2JYUTFWRlphWVdGdFNsWmpSV1JYVFc1b1dGWnRNVXRXYlVWNllrWmthRTFZUVhwWFZsSkhVakZhYzFWdVJsSmlWM2hQV1cweGIxVnNXbGRhU0hCUFZtdHdTRlp0TlV0V2JVcDFVVzVDV21KWVVreFVhMXByWTFaR2RWUnRkRmROVm5CaFZtdGpNVkV5Um5SU1dHUlBWbGhvWVZsc2FFTmpiRlYzVjI1T2FsWnVRVEpWTWpGM1ZqQXhWbGRZY0ZkU00yaHlWa1JLVTFOR1VuTlhhemxYVmxoQ1ZWWnROWGRSTURGelkwWmFWbUV6VW5GV2JYaExaVlpzY2xaVVJtaFdNVnA1Vkd4YVYxWXhTbGhoUmtKYVpXdGFjbFZ0ZUd0ak1VNTBZa2Q0YVZkSFVUQldha2wzWlVaU2RGUnVVbFZoTW1oVVdWZDBTMkl4Vm5SbFIwWlZVbTE0ZUZVeU1YZGlSa3AwWlVaYVZrMXFWbFJXYlhoaFpFWldjMXBHYUZkbGExbzFWMnhXWVdRd05YUlRhMnhVWWtkU2NGWnNVbFpsYkdSWVpVWmthRTFWYkRSWGExWnZWbGRLYzFOdE9WVldWMUkyVkZaYVdtVkdXbFZTYXpWVFRVUldTRlpYTURGV01XUkhWMWhzYkZKdVFsWlZhMVpoVWtaVmVXVkZkR3RTYlZKNVZsZDRWMkZIUmpaUmFscFhZV3RLYUZwSGN6RldNVnB6WVVaT2FXRjZWbTlYVnpFd1V6RktSMVZzV2xoaVdGSlFWV3BHUzAxV1draGxSWFJXVW10dk1sWnRjekZYUjBwSFUyNUtXbFpGY0V4V2JGcExaRWRPUjFOc2FGTlhSVXBXVm0wd2QyVkdTWGRPVldSaFUwWktjVlJVU205alZscHlWbXhrVDFac2NGWlZiWFJyWVVaSmQwMVVWbGhoTVhCNlZsUkJlRkl5VGtWWGJGWlRVbFZyZDFkV1pEUmpNazE0WTBWa1ZXSllRbkJWYlRFMFRsWmFXR1ZHWkd0TmF6RTBXV3RvVjFZeVJuTlRiRlphVmtWd1ZGVnNXbXRqTWtaSVpFWktUbUpHY0VoWFdIQlBZakZTVmsxV1dsUmhNRFZXVm01d1IxTkdXa1ZTYXpsWFlYcHNXVnBWWkVkaVIwcFlWVmh3VjJKVVJqWmFWVnBTWlZaS2RWVnNRbFJTTW1oNFZrWmpNV0l4VWxkaVJsWlZZbTFTVkZSV1dtRlNNVmw1VFZoT2FGSnJOVWhXTWpWUFZqRktWMVpxVWxkTlZsVjRWV3BHWVZaV1VuTlVhelZYVjBWS1ZGWnRkRmRpTVU1eVRWaFNVMkV5YUZSWlYzaExWbXhXZEU1VlRsZE5WbkJJVmpJeFIxUXhXbFZpUm1SYVlURmFWRlpFU2t0a1JsWnhWRzFHVTFKVmJETldiWGhyVmpKTmVHTkZXbXBTYldoVVZqQmFTMUpHWkZoalJVNU9VbFJHVjFwRVRtOVdWMFY0VTJ4V1ZWWldWWGhXYkZwaFZteHdTVmR0ZUZOTlZYQTBWbXRrTkZVeFZYaFRiR2hzVWxob1lWbHJaRk5TTVhCV1YyMTBWMVpzV25sV1IzTTFWMFpLVlZaVVJsZGhhMXBZVkd0YVJtVldUblZWYXpsVFVsUldWbFpYZUdGWlZUVkhWMnhhV0dKWVVsUldiWGhoVWpGcmQxWnRkR2hOYTFZMFdUQmtiMWxXU25SVmJFSlZZa1p3V0ZWc1drdGpiRkp6Vm14a1RtSlhVVEJXYWtvd1dWZE5lVlJzV210Tk1sSndWV3hXZDJJeFVsWlZiRnByVFZkNGVWWkdVbGRVYkZweVkwVndXbUV4V2xCV01uTjRWbXhrYzFac1dtbGlhMHB2VmtaV2ExTXhaRWhVYTFwVVlsaG9XRlJWYUVOT1JscEhXa1JTVTAxRVJsbFZNalZQVjJzd2VHTkdWbFpoTVZwSFZGWmFjMlJGTVZaYVJsSlhWa1pWZVZac1pEQk5SbVJJVTI1S2FsTkdTbGxaYkZKQ1RWWldkRTFWT1d0U2EzQjVWRlphUTFZeFdsaGtSRTVYVW14YVZGVlhNVk5rUmtwelYyeG9hV0pZYUZSWGJHUTBaREZXVjJKSVVteFNNMUp5Vm0wd05VNXNXa2hrU0dSb1RWWnNOVnBFVG5OWlZrbzJVVlJHVjJGcldsUldiVEZYVW14V2MxVnNUbWxTYmtJeVZtMTRZV0l4VG5SV2EyUlRWMGhDVkZsdGVIZFhSbFYzV2tVNWJGWnNTbmxaVlZaUFZHc3hWbGR1Y0ZaTmJtaDZXVmN4VjJNeVNrVlViRlpvWVRGd2IxZHJVa2RrTWsxNFYyeHNZVkl6VW5OWmEyaERUV3haZUZkc1RsVk5iRnBJVmxkNGMxWkhSbk5qU0VaV1lsaG9hRll4V2xkak1WcFpZVWR3VjJKclNraFdNblJ2WVRGYWMxTnNaR3BUUjJoWVZXMTRZVll4VWxWU2JrcHNZa2RTZWxaWGVFOVZNREZXWWtSU1YySkhVWGRaVjNNeFVtczFTV05HWkdoaE1IQm9Wa1pTUjJReFdYaFZibEpxVWxoU1ZsUldaREJPVmxaMFRWYzVhRTFyY0VsWlZXaFBWbFV4VjFkdWNGZFdWbkJRVmpCYVQyUlhSa1pPVm1oVFRWVnZkMVl5ZUZkV01WRjVWRmhrVDFadFVsbFdhMVV4VmtaWmQxWnVaR3BXYkhCWFZsZDBNRlV3TVZaWGFrSmFUVVphVkZkV1drOVNNV1J6V2tad2FWZEdTbFJXUjNoclZURlplRlpzVmxOaVJVcFlXV3RhZDFVeFdsbGpSWEJPVm1zMVNWWldhSGRXTWtwSlVXeFdWMkpIYUU5VVZscHlaVmRXUm1SSGJGZFdSbGw0VmxjeE1FNUdWa2RYYTJoV1lrVTFXVmxVUm5kVVJsSllaVWRHVTFJeFNrZFpNRnAzVmpGSmVXRkdjRmRTTTJoeVZXcEtTMUl4V25GV2JYUlVVbTVDZDFaWE1UQmpNREI0Vlc1U1RsWjZiRmhaYTJRMFYxWndWbGt6YUdoTlZuQllXVEJvUjFZeFNsZFhhemxWVm14d1ZGVXhXbUZrVjBwSVpFZHNVMVpZUWtsV2EyUXdWVEpGZUZkdVRsaFhTRUpaV1Zkek1XTldWbkZUYlhSc1ZteGFlbGRyV2s5aFZrbDRVMjV3VmsxdVVuWldNbmhoWkVkR1JsWnNWbWxYUjJoRVYydFNTMU14VGtkVGJsSm9VbXhhYjFZd1drdFZSbVJ5VjIwNVVrMVZOVmhXUjNSclZsZEtjbE5zV2xwV00xSm9Xa1phWVZkRk5WaE9WVGxUWVRGcmVGZHJWbUZXTVZwR1RVaHNiRk5HY0ZsWlYzUmhaRlp3V0dWR2NHeGlWWEJIVkRGa2QySkhTa2xSYm1SWFRXcENORmxxUmt0U01WWnpZa1pPYUdGNlZsQldSbU14VVRGS2MyRXpaRnBsYkZwWVZXcEdTMVpzWkhKVmEyUm9VbXR3V2xWWGRFOVhSMHBJVld0NFYxSldWWGhaZWtaUFYxWk9kR0pHWkdsU1dFRjNWakZTUjFsV1RYaFViR1JZVjBoQ2NGVnJWVEZqYkZwWlkwaE9WRkp0ZUhwV2JGSkhWVEZKZDA1VmJGcE5NMEpVVjFaa1IxWlhTa2xSYkZwT1ZtdHdiMVpyV210V01WcDBWbXRhYkZKck5YQldiRnB5WlVaYVNHTkZaRlZoZWtaSVZUSTFSMkZHVGtkVGJHaGFWbnBGTUZWdGVGZFdNVnAxV2tkMFUySkdjRWxXYTFwVFZURmtkRk51U21wU1JYQm9WbTE0ZDAweGEzbGpNMmhYWVhwR1dGWXllR3RWTURGWFYxaHNWMVl6UWxCWlZFcEdaVVpLZFZKc1pHaGhNMEo0VjFkNFlXUnRWbk5YYTFwb1VsUnNXRmxyVm1GTlJsSnlWV3hPYVZKc1ZqWldWM2hoVjJ4YWMyTkljRlpOVm5CVVdrWmtSMU5YVGtkV2F6Vm9Za1pzTlZZeFdsZFVNREZJVm10a1YyRXhjR2hWTUZwM1lVWlNXR1JIUm10aVJuQkhWMWh3VjFVeVNrZFRibkJXWWxob1RGWkhlR0ZXTWs1R1YyeGthVkpzV1RCV1YzQkhZVEZaZVZOcmFHaFNNbWh3Vm1wS2JtVnNXbGRhU0hCT1ZteFdORlpIZUd0WFIwcEhWMjA1V21FeGNETldSbHBoVmpGd1IxUnNWbE5XUlZsM1YydFdZV0V4V25OWFdHeFFVMGQ0V0Zac1dtRmhSbXh4VW0xR2FtSkdjSHBWYlRGM1ZXc3dlRkpxV2xaTk0wSkxXa1JCZUZkR1duTlhiWGhVVW14d1ZsWlhNVFJaVmtWNFZXdFdVbUV5VWs5VVZtaERWMVpWZVdOR1pHbFNiRlkyVmxab2QxWkhWbkpPVkU1V1lsaG9TRlp0ZUZkV1ZrNXpZMFprYUUxWVFYbFdiVEV3VmpKSmVGSnVUbFJpUjJoeFZXeFdkMk5zYkhKV2JtUmFWbXhLV0ZadE1UQmhiRnB6WTBab1dHRXhWVEZXYlRGSFkyeGFjVlpzV21oaE1uY3dWMVJLTkZJeVRuTlZibEpwVWpOU1ZGbFVUa05PVmxwSFYyeGFUMVp0VWtsVk1XaHJZVEZLZEZWc1pGVldiRm96VmtaYWNtUXlSa1pVYkU1VFZrZDRWMVp0TVhkUk1WcFhWMWhzVUZOSGFHaFZiRnBoWlZad1dHTjZSbE5oZW14R1ZsZHpNVlJyTUhkVGFsSlhZbGhvV0ZsVVJrOVhSbEp6WVVaa2FFMVZjRlpXVnpWM1l6RmFSMkpHYUd0U1JVcFVWVzAxUTJWc2JISlZiRTVvVW14d1dGa3dXbmRYUjBaeVUycGFXazF1YUZoVk1WcDNVMGRXUjJOSGJHbFhSMDR6VmpKMFlXSXlSWGhTV0dST1ZteHdjVlZyVlRGaU1WWnhWRzA1VTAxV2JETldNalZyVjBaS2NtTkdiRmRpV0doTVZsVmFTMWRHVm5OWGJGcE9WbXhzTmxaR1pEUmpiVlpIVTI1V1YySlhlRTlaYlRGdlZHeGFjVk5xUWs1U01IQXdWa2MxVTJFeFNYZFhiRnBhWVRGYWVsUnJXbE5YUjFKSFZHMTBVMDFHV1hwV2Fra3hWVEZTZEZadVNsUmlia0poVkZjMVUxVkdXWGRhUlhCc1VtNUNSMXBWWkhkV1JrcFdZbnBDVjFaNlFqTlVWV1JYVTBaV2NsZHRjRlJTTVVwM1YxWlNSMWxWTUhoWGJGcG9VbTFTV0Zac1VsZFNiRmw1VFZoT1YySldXakJaZWs1M1YyeGFjMWRzUWxkV2VrWklXVEJrVTFKdFVrZFRiR1JwVmpGR05sWXhhSGRVTVd4WFlrWmtWR0V5YUhKVk1GWjNWVEZhVlZSc1RteGlSbG93V1RCV1lWUXhXbGxhZWtaVlRWZG9WRlpxU2t0a1IwNDJVbXhrVjJKSVFsUlhiRnBoVWpGYWMxTnVUbWhTTW5od1ZXMDFRbVZHV2xWVFZFWlNUVlV4TkZscmFGTmhWazVIVjJ4b1YyRnJOVlJhUkVaelpFZFdSMXBHYUZOaE1Wa3lWbXBKTVdFeFpFZFhiR1JVWWtWd1dGUlhOVk5XUmxweVYydDBWRlp0VWpGV2JYTTFWakZhUjFkc1JsZFNiSEJZVlhwR1YxZEdVbkpoUm5Cc1lURndUbFpHWkhkU01rNVhZMFprVm1Kck5WZFVWVkp6VmpGYWRHTXphRmhpVlhCWFdUQm9iMVl4U25SaFJtaFhZa2RTVEZsNlNrdFNNa3BIVkcxb2FWWnJjRXBXYTFwclRrWkdkRlZZYkZWaE1WcFhXVlJLYjJOc2NGaGxSWFJWVFZkNGVGWkhOVTlXUlRGeVlucEtXbFpXY0VSWlYzaEtaVVphY1ZSc2NHaGhlbFpaVm14YWExUXhTWGxUYTFwV1lsaG9XRlpxVG05aFJtUllaRVprVjAxRVZsbFZNalZIVm0xS1dHRklSbFppUjJoRVZXeGFjMWRGTlZoa1IzUlhWa1ZhU0ZZeWRGWk5WMFpYVjI1V1VsWkZTbWhXYWs1VFZrWlNWMWRzWkZOaVZYQktXVlZhVTJGWFNsZFRibXhZVm5wRk1Ga3lNVmRYUmxwelYyczFWMVpHV2xGV1YzQkRXVlpKZUZaWWFGaGlTRUpQV1d0V1lXVnNXWGxPVlhSWVVtdHdTRlV5Y3pWV1ZURlhWMnRvVjFKNlJsQlZha3BMVW0xU1NGSnNUbWhOVm04eFZtMTBhbVZGTlVoVWJrNW9UVEo0YjFVd1ZrdFhSbFp6VmxSR1UwMVhkRFJXYlRWaFZHeGFkRlZyWkZaTmFrWklWMVpWZUdSSFJrbGhSbHBvWVhwV01sWnJZM2hXTVVwelZtNUtZVkpzY0c5VVZFcHZVMnhhYzFkdGRGWmhla1pKVld4b2MyRnNTbkpPV0U1V1RVWlZlRlpIZUhKbFJsSlZWbXhLYUdWc1dtRldiVEY2WlVaUmVWSnFXbGRpYXpWaFZtMXpkMDFXV25KV1ZGWlRZbFphU2xaSE1VZFdNREZKVVdwS1YwMVdTa3hXTW5ONFVqRlNjMWRzVG1oTlNFSlVWbTE0VjFsV1JYaFhiRlpUWWtkU1dGUldXa2RPUmxWNVpFUlNWVTFXY0ZkVWJHUkhWbXN4VjFkdWJGVk5WVlUxVlVaRk9WQlJQVDA9