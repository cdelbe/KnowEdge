created: 20181108074514858
creator: Charles Delbé
modified: 20181108074514858
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\skins\moono-lisa\images\spinner.gif
tmap.id: 321a82b5-9220-4113-8f4b-8b3f3d00aeb1
type: image/gif

