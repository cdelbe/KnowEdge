created: 20181108075031969
creator: Charles Delbé
modified: 20181108075031969
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\omg_smile.gif
tmap.id: 6be2a7ba-0407-4e66-a2d9-f5cfe3458c08
type: image/gif

