created: 20181108075032240
creator: Charles Delbé
modified: 20181108075032240
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\whatchutalkingabout_smile.gif
tmap.id: a846a5a8-e8c6-4e0e-9c5d-7126230ee091
type: image/gif

Y3JlYXRlZDogMjAxODExMDgwNzQ1MDg3NTkNCmNyZWF0b3I6IENoYXJsZXMgRGVsYsOpDQptb2RpZmllZDogMjAxODExMDgwNzQ1MDg3NTkNCm1vZGlmaWVyOiBDaGFybGVzIERlbGLDqQ0KdGl0bGU6IGM6XFVzZXJzXENoYXJsZXNcZGV2XHByb2plY3RzXHRpZGRseXdpa2lcd2lraVx3aWtpXHRpZGRsZXJzXGxpYnNcY2tlZGl0b3JccGx1Z2luc1xzbWlsZXlcaW1hZ2VzXHdoYXRjaHV0YWxraW5nYWJvdXRfc21pbGUuZ2lmDQp0bWFwLmlkOiBhNmI2MDA4Mi1lZWNiLTQ1YzYtOTVkYS0xYTEzM2Q4NmJhM2YNCnR5cGU6IGltYWdlL2dpZg0KClkzSmxZWFJsWkRvZ01qQXhPREV4TURnd056UXlNVE0yTnpBTkNtTnlaV0YwYjNJNklFTm9ZWEpzWlhNZ1JHVnNZc09wRFFwdGIyUnBabWxsWkRvZ01qQXhPREV4TURnd056UXlNVE0yTnpBTkNtMXZaR2xtYVdWeU9pQkRhR0Z5YkdWeklFUmxiR0xEcVEwS2RHbDBiR1U2SUdNNlhGVnpaWEp6WEVOb1lYSnNaWE5jWkdWMlhIQnliMnBsWTNSelhIUnBaR1JzZVhkcGEybGNkMmxyYVZ4M2FXdHBYSFJwWkdSc1pYSnpYR3hwWW5OY1kydGxaR2wwYjNKY2NHeDFaMmx1YzF4emJXbHNaWGxjYVcxaFoyVnpYSGRvWVhSamFIVjBZV3hyYVc1bllXSnZkWFJmYzIxcGJHVXVaMmxtRFFwMGJXRndMbWxrT2lBeFpUTm1ZamMxWmkweU9UWTBMVFE0T0RBdFlXTTFZUzFoTURZNU9UazBabVkwTUdJTkNuUjVjR1U2SUdsdFlXZGxMMmRwWmcwS0Nsa3pTbXhaV0ZKc1drUnZaMDFxUVhoUFJFVjRUVVJuZDA1NlRUQk5WR015VFVSWlRrTnRUbmxhVjBZd1lqTkpOa2xGVG05WldFcHpXbGhOWjFKSFZuTlpjMDl3UkZGd2RHSXlVbkJhYld4c1drUnZaMDFxUVhoUFJFVjRUVVJuZDA1NlRUQk5WR015VFVSWlRrTnRNWFphUjJ4dFlWZFdlVTlwUWtSaFIwWjVZa2RXZWtsRlVteGlSMHhFY1ZFd1MyUkhiREJpUjFVMlNVZE5ObGhHVm5wYVdFcDZXRVZPYjFsWVNuTmFXRTVqV2tkV01saElRbmxpTW5Cc1dUTlNlbGhJVW5CYVIxSnpaVmhrY0dFeWJHTmtNbXh5WVZaNE0yRlhkSEJZU0ZKd1drZFNjMXBZU25wWVIzaHdXVzVPWTFreWRHeGFSMnd3WWpOS1kyTkhlREZhTW14MVl6RjRlbUpYYkhOYVdHeGpZVmN4YUZveVZucFlTR1J2V1ZoU2FtRklWakJaVjNoeVlWYzFibGxYU25aa1dGSm1Zekl4Y0dKSFZYVmFNbXh0UkZGd01HSlhSbmRNYld4clQybENhRTVIU214TmFrcHBXbE13ZWsweVJteE1WRkpvV2xSVmRGbHFaelJaZVRGcVRXcFJNazVxWnpCT2FsSnJUbGRWVGtOdVVqVmpSMVUyU1Vkc2RGbFhaR3hNTW1Sd1dtY3dTME5zYTNwVGJYaGFWMFpLYzFkclVuWmFNREZ4VVZob1VGSkZWalJVVlZKdVpEQTFObEZVUms1aGJVMTZWR3RTVGxSclRuUlVibXhoVmpCWmQxbHFUa3BPYTJ4R1ZHMDVXbGRGY0hwWGJHaE9XakZLU0ZadVRscGpNRGwzVWtaR2QyUkhTWGxWYmtKaFlsZDRjMWRyVW5aYU1ERnhVVmhvVUZKRlZqUlVWVkp1WkRBMU5sRlVSazVoYlUxNlZHdFNUbFJyVG5STldGcGhVako0ZEZsV1pGZGxWVGx3VVd0U2FGSXdXalZaYTJSWFpXdHNSbFZ0ZUdsU01IaEZZMVpGZDFNeVVraGlSRUpwVWpGVk1sTlZaRTVPYkdoSFZtNXdZVmRGY0RaWFJWWlBZakZzV1ZOdVRtRlhSVFZxVjJ0a1YwMXNhRWxSYm14cFRXNUNjMWRVVGxObGJHaEpWVzVDWVZJeFNucGFWbWhyWTBkRmVXSkhUbXROYlhoNVdWWmFORTB5Umxoa1NFSlpVMFpLZDFkclpGTmpNWEJaVTI1d1dWSXphSGRYVnpWUFdURnJlV1JIZUdGU01uZDNXV3BPUzFreVRraGxSRVpoVFcxNE1WbDZSalJsYlVwWVlraE9ZVmRIZUdwWlZtTjRZVVp2ZVZadWNGbFRSMUoyVjFab1UyRnRSa2xXYWtKYVZqTm9lVmxXWXpGaWJHeFlVMjVhYTFkR1NtMVpla2w0WTBkS1NGWllWbUZOYlhoMFVrWkdkMDFIU2xoU2JtUk5ZbGQ0Y2xReWJFSk5iSEJ4Vkcxd1VGSXdiRFpVTUUxNFlrVTFXRlZVVWsxV1JrcHZWMVJLUm1SRk9WVlZWRUpQWlZSR2NWZHNaR0ZoYXpVMlZGUktXbUpWTURGVWJYQlNWR3RPZFZWcVZtcFNNVlV5VTFWa2MyUkdiRmhhUjNoTlRXMVNkMWR0WTNkVE1FNXpZVE53VkdKWWFHRldNRnBMWXpGa2NsVnVXbUZOUkVaNFZWWm9iMVZHU2taV2FsSlZWbFpLZFZwRVFURk9iRVpaWTBVMVYxSXlUak5XUmxaVFkyeFNjbFJ1VWxWaWJYaG9WbXBDV21ReGJIRlVhM0JQWVRKNFIxWkhNRFZYYkdSR1kwaHdXR0pIYUU5WGFrWkxVMFphZFZSc2NHcE5SR3d6Vld0YVIyUXlVa2hUV0d4V1ltdEthRmxzWkRSak1XUnlWVzVhWVUxRVJuaFZWbWh2VlVaS1JsWnFVbFZXVmtwMVdrUkJNVTVzUmxsalJUVlhVakpPTTFaR1ZsTmpiRkp5Vkc1U1RsZEdjR2hWYWtvMFpFWnNWMXBHWkd4V1ZHeDNWVmQwVTJGR1NYZFhhbFphWVRKU1dGcFhkSE5TYkZaMFpVZHNVMDFJYUVaWk1WcEdaREZOZVZWcmFHbFNSVXB3VldwR1ZrMXNUbFphUlRWUFlrZG9TRlp0TlhkWlZtUkdZMFJhV0ZKV1dsQlpha1p6VjFaT2RWUnRSbGhTVkZaeFZqSjBhMVl3TVhOaFJXeFNZbTE0Y0ZSWE5VTmpNV1JWVkd4T2JHSkhhRXBXVnpWRFdWWkplRk51Y0dGV2JXaHlXVEJrUm1WWFNraFViWFJPWWxob05WZFdXbUZPUlRCNVVteG9hMU5GU2xwVk1GcExaREZrY2xwR1RtcE5XRUphVlRJMWQxZFdTWHBoU0dSWVZucFdVRmRVUm5KbFYxSklaVWRHVTAxdVpETlhWM0JQVXpGcmVWUnJhR3hTUlZwb1ZGY3hORTFXYkRaU2FsSnNZbFZ3V1ZscmFFOVpWbVJJWlVkd1dsWnRUalJaVlZwMlpWWmFkV05HYkZSU01Vb3lWakZhYjFVeVJuUlNhMnhYWVd0S1lWWnFUbTlsVm14WFdYcEdhV0pIZUZsVk1qVmhZVEZrUjFOdE1WcGxhMncwV1RCa1MxTkdXbGxXYlVaT1lsaG9NRlZyV2tka01ERklVMnhvVTJKdFVrNVpiR1EwWTJ4UmVXSkZUbWhXVkVaR1dWUk9hMVF5Um5OaVJGWlZWakowTTFSVlZUVldWazVWVTJzeFYxSnJWWGRXTVZwVFZtMVNSazlWVmxaV1JVcG9WbGh3UjJNeFpIUmpSM1JwVWxSR1ZsVXlNVzlaVmtwR1YyNUNWVlpGY0ZOV1IzUlBaRlpXY1ZadGNGTk5WbFY1VlRGV2EyTXlVa2RpUm1oaFVqTm9UbFJYTVZOa01XUjBXVE5rVkUxRk5YcFpWRTUzVmtkS1dXRkhSbGROUm5CTVdYcEdhMk5zVm5WWGJVWk9Va1ZhTkZaV1dtOWlNVlpIVTJ0YVYyRnNTbFpXYkZwTFpGWndSVkZVUm1wV2JFcFdWbTF6TVdKSFNrWlhWRUpYVW5wR00xVlhlRk5qYkZKMVZXeFdhV0pZYUc5V2JYQkRWMjFSZUdKSVJsVmhNMEpRV1ZSS05GSXhXa2hOUkZaWVlrZFNSMWt3YUhkWFIwcElZVVU1V0dGcldreFZNRnBoWkZaU2MyTkhjRTVTUjNkNlZsZDBZVkl5VVhsVmEyaFVWMGQ0VjFsdGRFdGhSbXh6V2tSU2FrMVhVbmxXVnpWaFdWVXhSVkp1YUZaV2JXaDJWbFZhUzFKc1duRlZiRlpYVm10d01WZHJVa0pOVjA1WFZXeFdWMkY2Vm5OWmExWmFUVVphU0UxWVpGSmlSa3A1VmtjMVUxUnNaRWRqUjJoV1lXdHZNRnBGV25OV01YQkhXa2Q0VjFaSGVETldWbVF3VlRKR1IxTllaRmhoYkZwaFdWUktVMWRHY0Zoa1NFNVRZa1phTUZwVlpITlZNREZKWVVWYVdrMVdjRWRhUkVaT1pWWldjbUZIYkZOU1ZYQjNWbGR3UjFack1YTlViRnBoVWxSV1VGbHJaRzlUUmxwMFRsaGtXbFp0VWtkWk1GSmhWMFpLVjFkc1FscGhhMXA2VmpGYVQyUldVblJTYkdoVFZrWmFlRlpxU2pCaE1WbDNUVmhPYUZKWGVGTlpiVEUwWTBaU1dFNVZUbXBOVjFKV1ZrZDRUMkpIU2toaFJYQlhWbnBXUkZkV1drcGxSazUxWTBkR1YySlhhSGxYVkVKclVtMVdXRk5yYUZWaVdGSlBXV3hvYjA1V1pGZFhiVVpQVWxSQ05WVnRlRzloTVU1R1UyeHdWazFHY0V4YVJFWnJZMnh3UjFSdGNFNVhSVXBoVmxSSk1XUXhaRmRUV0hCb1UwZFNXVlp1Y0ZkVlJtUlZVbTVLYkZZeFNrbGFWV1JIVlRBeGRWcEVUbGhXTTBKUVZYcEdjbVZXVW5KaFIzaFRVbFp3YjFaR1kzaE9SVEZYWWtSYVUyRnNTbk5aYkZaM1YxWnNjbUZGT1ZwV2JWSkpXbFZrZDFkc1duUlVhbEphVmxad01scFdXbUZrVjA1SFlrWlNVMDFWYjNsV2FrWmhZakZWZVZKdVVsTmhNbmhZV1ZkMFMxbFdXbkZVYlRsc1ZtMTRXRmRZY0VkaFYwcElaVVpzVmsxcVZtaFpWRVpyVWpGT2RFMVdjR3hoTW5jd1YxUkNhMU14VGtkWGJHeFhZbFZhVDFsc2FHOU5SbFp5VjJ0a2EwMUVSa2xWTW5odlZUSktkRlZyTlZwaVIxRXdXVEo0VW1WWFNrWlRhelZPVWtkNFIxWXhhSGRUTVZKelYydG9WV0ZzU2xaWmJHUXdUVEZTYzFkdVpGZFdiRW93V1ZWVmVGWXhTbkpqUkVKWFVrVktjbFl5TVZOU2F6bFdWbXhPYVZZemFGQldiR2gzVWpKSmVGcElVbXBTYmtKelZtMHhORmRXV1hoVmF6bFdVbXRzTkZadGNHRlhSMFY1Vld0MFYxSXpVbEJhUmxwWFkxWmFkR05HVGs1V2JGWTFWbFJHVjJFeVRYbFZhMlJwVW0xb2FGVnFUbTlVYkZKWVRWWk9hMDFYVWpCWFZFNXJWa1V4Ums1WWNGcFdSVFV6Vm10a1MxZFhSa2hTYkdST1VtNUNUVmRZY0VkaE1rNXpWbTVXV0dKVldrOVZhMVpoVGtaYVYxZHRPV2xOVmxwSVZUSjBZVll5Um5OVGJGcFhZa1p3VEZwR1duZFNWa1pWVW0xd1YySkZjRmRXYkdSNlRWWlplRk5ZWkU5VFNFSllWVzV3VjAweGJIUmxSazVxWWtaS01WWlhlRmRoVjBwWllVYzVWMkpZUWtSV01qRlNaVWRLU1ZKc1ZtaE5NRXBSVjFaU1MwNUdTWGhYYTJoT1VrWmFXVmxyWkZOU01XdDNZVWhrV0ZJd2NFbFpWVlUxVjBkR2NsZHJlRlpOUm5Cb1drWmFVMk15VGtoalJUVlRVak5rTmxac1pEQlpWa2w1VlZoc1ZtRXlhRlZXTUdRMFZqRnNkR1JGZEdoU2JYaDZWMnRTVTJGck1WaFZibXhYVm5wV2FGZFdWWGhTVmtwMVlVWmFWMkpYYURKV2JGWmhVekZLYzFkdVJsWmlSbHBZVm0xMGQwMVdaSEpWYTBwT1ZqQTFXRlpYZUZkV2JVWTJWbXhvVm1GclJYZGFWM2hoVTBVMVdWcEhiR2xTYTNBMVZtdGpNVlV4VW5OYVJXUnFVakpvVjFsWGRIWk5SbkJHVjI1T1YwMVlRa2hYYTJRMFZqRmFTR1ZFVGxkV2JWRjNWbFJLUjFJeFRsbGFSbWhvWWtad2FGZFdVa3RWTVdSSFkwWm9hMU5GTlZSWmExcGhUVVp3VmxwSVRsWk5SRVpLV1ZWV1lWZHJNVmRqUldSaFVrVmFUMXBXV2xkamJVWklZa1pPVTFaWVFqTldiR1IzVWpGYWNrMVlUbFZpUm5Cb1ZXeFNWMVZHYkhKYVJ6bFVVbXh3TUZSc2FHdFhiRnAwVld0a1drMUdTbWhXTUZwTFZqRmtjMUZzY0doaE1YQTJWbXBHWVZReVVsZFZibEpUWWtkb1ZGWnJXbUZsUmxweFUycENhRTFXYkROVVZtaFBZVVpLV0dWR1RscGlWRVV3V1RCYVUxZEZOVlpVYlhCT1ZqRktWMVpyWkRSVU1rcElVMnRvYUZKWVFsaFdibkJYVWtaa1YxZHJjR3hTYXpVeFdUQmtSMVl5U2xoaFNHeFlWa1ZLY2xWdE1WZFhSazV5WVVaV2FWZEdTbEJYVjNodllqQTFWMXBHWkZoaVZWcFFWV3hTUTA1V1ZuUmxSemxvVFZVMVIxVXllSGRXYXpGSFkwVjRZVkpGV25KWk1uaDNVakZTZEdORk5WaFNWWEJvVm14U1NrMVhVWGhhUm1SVVYwZFNVRll3WkRSWFZteHlXa1pPVjFKdGRETlhhMXBQVmtaS1ZXSkdjRnBoTVhCNlZtdGFTMVp0VGtWWGJHaG9UVmhDZVZkV1VrdFVNVTVIVkc1V1YySkdXbkJXYkZKWFpVWmFSMXBJWkZOTmJFWTBXV3RvUzFsV1NuUlZiRUpYWWxSR2RsVXhXbk5qYlVaSFZHeG9hVkp0ZHpGV2JHTXhWREZrZEZadVNsaFdSVXBXVm10V2QxTkdWWGRYYTNScVZtdGFlbGt3VlRGaFZsbDVWVlJDVjAxdVVsaFpWRVpLWlZaU1dXSkdUbGhTTTJoM1ZsUkNZVmxYUmtkVmJHaHJVakJhY1ZWdE1UUmxSbHBJWlVkMFZXSkZjREJYYTFKaFZqRktObFpzVWxwV1ZuQmhXbGN4UjFOV1VuTldiRTVzWVRGd05WWXhVa05aVjFGNVUyNUtUbFpXY0hKVmFrNVRWa1p3V0dSSFJtdGlSMUpXVlZkek1WUnNXWGRPVldoYVRVWmFXRmxXVlhoa1JsWnpVV3hhYUUxWVFrMVhWRUpoVlRKU1NGUnJhR3RTTW1oVVZtdGtORll4WkZkVmF6bFdUVlpHTkZVeWRHdFdNV1JJVld4c1YyRnJiM2RVVkVaVFZteGFWVkpyT1dsU01VbDNWMnhXVm1WR1dYaFRXR3hWWVd4YVdGVnRlR0ZqYkZwSVRWWk9VMDFyY0VoWlZWcGhWakZLVlZac1JsaFdNMmhvV2tSS1UxSXhWbk5pUjNCVFZrZDRkMVp0ZUZOV01sWkhWMnRvVGxOSGFGUldiWGhoVjJ4V1YyRkhkRnBXYkhBd1dWVldVMWR0UlhoV1ZFWmFUVVp3U0ZwR1drZGtSMHBIV2tVMVUySnJSalJXYlhCTFRrWlNjazVXYUZSaWJFcFVXV3RrYjFkV1duTlZiR1JUVm0xU2VGWkhkRTlXTVVwelUyeGtXR0V4U2xSV2ExcExZekZLY1ZSc1pGZGxiRnBSVjFaV1lWTXhXWGxUV0hCcVVteHdXRmxyYUVOTmJGcFhXa1JTVjAxVmJEVlZNblJoVmtkS1JtTkdhRmROUmxwTVdsWmFXbVZYVGtaVWJFNU9WbFJGTUZkVVFsZGlNa1pIVTJ4YWFsSnNXbFpXYTFaTFZFWlNkR1ZHWkZkTlZuQXhXVEJWTlZZeFpFaFZXSEJYWWtkT05GbDZSbEpsUm1SeVlVZG9VMVpVVmxkWFZ6QXhVVEZaZUdFemJHeFNWMUp5VlcxNFMyVkdWblJsU0dSWFRWWndNVlZYZUVOWFIwVjRZMGhLVjFaRldrdGFWbHBYWkZaR2RHUkdVbE5XV0VKVlZtMXdRMWxYVFhsV2JHUnBVbTFvY2xWc1duZGpiR3hWVkdzNVQxWnRkRE5XYlhNMVZsWlplRmRzY0ZkV00wSklWbTE0WVU1c1duUlNiSEJPWVd0YVVWWnRNVFJVTVdSWFdraEtiRkpVVm5CWmJHUnZVakZhY1ZOWWFHcE5SRVpKVmxkNGExWkhSWGxsUm14WFRVWmFNMWt4V25OV1ZrWlZVbTEwVTJGNlVYbFdhMlI2VGxaVmVGTnVWbEppYlZKb1ZXeGFTMVJHV2xoTlZtUlhWakJhU2xsclpFZFZNREI0VTJ4V1YySkdjRmhhVnpGWFpFWk9jbGRzWkdsWFJrcDJWbXBDVmsxSFZuTlhiR2hyVWxSc1QxVnFRbUZUVmxwWVpVZEdXRkp0VWtoWk1GVjRWbFphUmxOcmVGWmhhMW96VlRCa1MxSldSblJsUms1b1RXNWplVlp0Y0VkaU1VMTVVbTVTVTFkSGVGWlpWM1IzVm14YWRXTkdaRmRTYkZZMFZqSTFhMWRHU25KalNHaFhZbGhvVUZaSGMzaFdNazVKVjJ4a1UySkZjRVZYVjNCTFV6RmFkRlZyVmxoaVJrcHZWRlpvUTJJeFpGZFhiVGxWWWxaYVNGWnROVTlXVmxwSFUyNUdXbGRJUWxSVVZFWmFaVlV4U1dGR1ZsTk5WbkJoVm14a01HSXhXbGRVYTJoc1VrWndhRlp0ZUhkVVJsSnpWbFJXV0ZJeFdrZFVNVlV4VlRBeFZtTkdVbGRYU0VKUVdUSnpNVll4VW5KYVJtUm9UVlZ3ZUZkc1pEUlpWbHBYVm01R1UySnJjSE5XYlRWRFYwWmFkRTVWT1doV2JIQldWbTAxYjFac1dYcFZhazVZVm0xU1NGWXhXbE5YVm5CSFYyczFWMkpyU2tWV01uaGhZVEZaZUZkdVVsZGhNbEpVV1ZST2IxUXhVbFZSYTNSV1VteHdSMWxWYUd0WFIwWTJVV3BTVjFZemFIWldNRnByVW0xT1IxRnNWbGRXYTNCWVYyeGFZVlJ0Vm5SVWExcGhVbXh3VkZsclduZFNiR1JaWTBVNWFrMVdjRmRVVldodllWWktSMWRzV2xWV2JIQXpWVlJHZDFOSFVrVlJhemxwVmxad1NWWlhNWHBsUmxKMFUydHNVbUV4Y0ZoV2ExWkxZMnhrVjFwRmRGZE5WVFY2VmpJeGIxVXhTbGxSYXpsWFVteGFXRmRXV2s5V01XUnpWMnhXVjFKc2NGVldWekV3WXpBMWMxZFlhR2hTTUZwWFZGWldkMWRXV2xkaFNFNVhWbXh3UjFVeWVGTldhekZYWTBab1ZtRXhWVEZXYlRGTFVqRldjMVZzVG1sWFIxRXhWbTE0VTFJeFdYbFRXR1JPVjBVMWNWVXdWbmRqUmxaellVVk9hRkp0ZUZoV1Z6VlBWbFV4VjFacVVsaGhNWEF6V1d0a1MxSXhUblZpUm5CWFVsUldiMVpyV2xabFJrcFhWMjVLYTFJd1dsUlVWelZPWlVaYVdXTkZaRlZOYkVwSVYydGFjMWRIU2tkalJsSlhUVVphU0ZSc1dtRlNiRlp5V2taT1RsWlVSVEJXYlRFd1ZURldSMWR1VWxaaVJscFdWbTE0WVZOR1VsaGxSM1JYVFZad2VGWlhNWE5XTVdSSVZWUkdWMkV5VWpaYVZWcFRWMFphZFZWc1dtaE5iRXBaVmxjd2VHSXhiRmRqUm1oc1VtMVNjVmxZY0ZkVGJGbDVZek5vVldKR2NIcFpNRnBMVmpKS1IxZHJPVlZpUjFKVVZXcEdWMlJXUm5OUmJGSlRUVEpvVWxZeFpEQldNV3hZVld0a1ZWZElRbkZWTUZVeFYwWmFkRTVWVG10TlYzY3lWa2QwTUZZd01WZGpTR3hXWWtkb00xWnRNVWRqYkdSelVXeFdWMDB3TkhwWGJGWmhaREZKZUZWdVRsaGlSVFZVVkZaV2QySXhXblJsUjBab1RWZDRWMVJzYUU5Vk1rcHlUbFpvV21FeFdtaFdSM2hUVmpGa2NtUkdhR2xTTVVsM1YxUkNhMDFIUmtaTlZtaFdZVEpvVjFacVRrTmhSbHB5Vmxob2FtSlZOVWhWTW5oWFZURktXVkZyTVZkaGEyOTNWRlJLVjJNeGNFbFZiRTVwVWpKb2QxWnRNSGRPUjFaWFYyNUdVbUpZVWxaWmJGcExaVlp3UlZSdE9XaFNhMncyV1ZWYWExWnNaRWxSYm5CWFlsaG9jbHBGVlhoV01rNUdUbFUxVjAxVmNFdFdiWEJMWkRGTmVGVnVTazVYUmtwelZUQldTMWRHV25OWGEzUldVbTEwTkZZeU5XdFhSbHAwVld4d1YwMXVhR2hXYWtGNFl6Rk9jMVJzWkZOV2EzQkpWbXRTUzFOdFZraFVhMnhTWWtWS1dGUlZXbmRrYkZwWVkwVmthazFFUm5wV01qVlBXVlpPUms1WVFsZGlSMmh5Vkd0YVdtVlZOVlphUjJoT1lURndWMWRYZEdGak1XUnpWMWhzYW1WcldsWlpiR2h2VFRGWmQxWlVSbFJXYlZKNVZERlZNV0ZXU25SUFZGSlhUVzVTY1ZSV1duTlhSazVaWVVkd1UxSnNjRkpXVkVKaFpESkplRlZzYUU1U1JscFBXV3RhUzFKc1ZYbE9WM1JvVFZWc05GVXlOV3RXVlRGWVlVWkNXbFpzY0ZoVWJURkhVbFpPYzJGSGFHaE5iazQwVmpGa05GWXdNSGxXYkdoVllUSjRXVmxzYUZOalJteDBaRVZ3VG1KSFVsWlZiVEV3VjBkS1YxTnFRbGRTTTJoNlZtdGtSMk50VGtaT1ZsWlhaV3hhUlZaSE1UUlZNVTVZVW1wYVYySllRbkJXYlhSM1UyeGFjVk51WkZwV01GcFlWa2QwYTFaR1pFaGxSbHBXWVRGYWVsUnJXbE5XTVhCSFZHMXdVMVpIZUdGWFYzUnJUVVpaZVZKWVpGaFhSM2haV1ZSS1UwMHhWbGhOVms1cVlsWkdObGt3V205WFJrbDVZVVpvVjFadGFETlpNbk40VWpGV2MyRkhlRk5XV0VKNVYxWm9kMUl5VmtkWGEyaE9VMGRvVmxacVJtRmxWbEpXWVVkMFYxWnJOVWxaTTNCRFZsWlplbFJZYUZwbGExcElWakZhYTJOdFZraGxSbWhUVmtaSk1WWnRkRmRpTWs1eVRsVm9WbUpyTlhCVVZFcFRWa1pzVlZGdVpGWk5WbkI2Vm0weFIxVnJNVmRYYkdoWFlsaFNjbFpYTVV0U2JHUnpXa1phYVZkR1NrMVdiR1EwV1ZaYWMxcElTbFZpUm5CWVdXdGFkMU5XV2xkYVJGSlRUVlp3ZWxVeU5VdFdSMHBHWTBab1YySkdjRE5WYTFwaFZqRmtjMXBHVGs1V1ZuQTJWbGN4TkZsV1ZYbFNXR1JxVW1zMVdGbHJXbUZoUmxaVlVteGtWMDFXY0hsWGExcExZVlpLVjJOR2FGZFdla1YzVlhwR1YyTXhaSE5YYkdob1RVUldXRlp0TVRSWlZrNUhWbXhvYkZKWFVsaFphMVozWlZaVmVXVkZkRlZpUld3MVZrZHdVMVl4V25SVldHUldZV3RhVEZsNlJrdGpNV1J6Vkcxb1RtSnRhRmxXYlRFMFZqRnNWMVZ1VGxkaVIxSllXVlJLVTFVeGJISldiVVpYVFZaYU1GcEZWakJYUmtweVkwWmtWMDF1VWxSV01GcGhVbXhPY21GR1pGZE5NbWhKVm1wQ1lXRXhaRmRhU0ZKVFlYcFdWRlJYTVc5V01WcHpWMnhPVkUxcldubFVWbFpyVm0xS2MxZHVSbFppYmtKNldUQmFjMWRYVGtsVWJFNU9Wak5vV1ZacVNURlVNVnBHVFZab1ZtRXlVbUZXYkZwaFYwWnNWVk5zWkdwTmF6VktXVlZrUjFZeFdYbGhSa1pYVm0xUk1GVnFSbUZqTVZKMVZteG9hVk5GU2xsV1JsSkhVekF4YzFkdVVteFNNMUpoVm0xek1WZFdXblJrUm1SV1RXdHdTRmt3V205V01rVjRWMjFvVjFac2NGaFpla1ozVW0xU1IxZHRhR3hoTVhCS1ZtMTRhMDFIVFhoV2JsSlVZVEZ3V1ZsclpGTldNV3h5VjJ0MGFGSnNjREJhVldSSFZUSktSMk5JYkZkU00yaFFWbXBHWVZKc1pISmFSbVJYWWtoQ1ZWZFhjRWRqTVZsNFZHNUthRkpVVmxoVmJYaDNWbXhrV0dWR1dteFNWRlpJV1d0U1lWWkhSbk5UYkd4WFlrWktTRll3V2xwbFYxSkdaRVprYVZKWGR6RldSRUp2WVRGYVZrMVdaRmRXUlZwaFZGWmFkMDB4VW5SbFJUbHFUVlZhZVZSc1pHOVVhekZHVjFSS1YySkhhRE5WZWtFeFVtczFWMXBHVm1sU01taHZWbFJDWVZsV1duTmlSbFpVWWtVMVZWbHJXbUZsVmxwMFkwWk9WMUpzYkRSV01uUmhWakpLVlZGWWFGaFdiVkpIV2xaa1IxTldaSE5XYkdSWFRWVndWbFpzVWtkWlZrbDVWV3hvVkdFeWVGWlphMXBMVkRGYWRHVkdaRTlTYkhCWldUQlZOV0ZGTVhOWGJHaFdZbFJXVkZaRVJtRmtSbFp5VDFaYWFWWkZWWGRXYWtvMFZqSlNTRlJyV2xWaVNFSllXV3hhUzFOV1pGaGpSVGxyVFZad1IxUldWbk5XYlVaelkwWmtXbUpVVmtSV2ExcDNWMGRXUms1WGVGZE5WbkJJVjJ0V2EyTXhXWGROVlZaWFlsVmFXRlp1Y0VKbFJsWTJVbTEwVTAxV2NIaFdNbmhoWVZkS2NsTnRhRmhXZWtVd1ZYcEdhMVl4V25WVmJYUlVVMFZLZVZaR1dsZGtNbFpYWVROa1dHRXlVbGxaYkZaM1YxWmFXR1JJWkZkaVJtdzJWVmMxUzFsV1NYcGhSWFJoVWtWYVVGcEdaRTlTTWs1R1RsZHNXRkl5YUhaV2JUQjRaREZHZEZacmFGZGlSMmhYVmpCa05GVkdXbk5WYkdSWVZteGFNRlJzVmt0aE1ERllWVzVvVm1KVVZsQldiWGhMWTJ4a2RXSkdXbWxYUmtsNlYxWldWbVZHU25SVWEyeHBVakJhV0Zsc1drdGlNVnBIV1ROb1YwMXJOVEJWYlhCaFZqSktSMWRzYkZaaGEzQjJWVEJhYTFkSFZraGtSMmhPVWtWYU5sWlhlRzlrTWtaelZHdGFWR0pyTldGWmJGSkhWa1p3VjFkc1pFOWlSVFZhV1ZWYVMyRldTalpoTTNCWVZqTlNkbHBFUm10U01XUnpZa2RHYkdFd2NGaFhiR1F3VXpGT1IxWlliR3hTV0VKeVZGZDBZVkl4Y0VaYVJ6bFdUV3R3UjFrd1drdFhSMFY0VTJ4Q1YxSkZXa3hXYWtaaFpGWldkRkpzVGxkaWEwcFZWbTB4TkZsV2JGZFRiR1JwVW14d1dGbFVTbE5pTVd4eVYyMUdWRkpzYkRWYVJWcFBWbGRLUjJOR1pGZE5ia0pNVm0xNFlXTXhaSE5SYkdSVFlraENWVlpITVRSVk1rNXpWRzVTYTFKVVZsaFVWRUY0VFRGYWMxVnJkRTlTYkVZMVZUSTFTMkZyTUhsaFJtaGFWa1UxUkZaVVJuTmpNWEJIVTJzMVUySkdXWHBYVmxaV1RsWmFWMU5ZWkZoaE1YQllXV3hvVTFaR1dYZFhiWFJUVFZkU2VWUnNXbmRXTVZwMVVXeEdXRll6UWt4VmVrWlBWakZTZFZOc1pHbFNia0paVjFjeE1GTXhWa2RhU0VwWVlsVmFWRlJXVlhoT1ZsVjVaVWRHVjJKVmNGcFdWekExVmxaYVdHRklXbUZTYkhCb1ZqQmtWMUl4VG5KT1ZtUnBVbGhDV2xZeFpEQldNVkY0Vmxoc1UxZEhVbEJXYlRFMFZteGFjbFp1WkZaU2JIQlhWakl4TUZVeVNrZFRibkJYVFc1b00xWnFSbUZUUjFaR1kwWmtWMDB4U2xsV2ExSkhZekZrUjFac2JHRlNNMmhWVldwT2IySXhXa2RaTTJocFRXeEtlbFl5ZEZkV1IwVjVWV3hPVlZac1dqTldha1pXWlVaV2NsUnNXbE5pUjNjd1ZtcEdiMkV4YkZkVGExcFVZbTVDVjFsc2FHOVRSbHAwWlVaa2FtSlZXa2hWTWpFMFlWWmFjbU5GTVZkTlZuQllWMVprVG1WV1ZuTmFSMnhPVFcxb2RsZHNaRFJUTVd4WFZXeGtZVkpHU2xWVmJURTBaV3hrVlZSdE9WWk5SRVpYV1d0U1UxZHJNVWRYYkdoWFVrVmFURlpzV2tkalZtUnpWMnMxYVdKWGFIWldNVkpIWVRGV2RGVllhRlJpYTNCWFdXeG9RMWRHVWxkV2JscHJUVmRTV1ZwRldrOVdiVVkyVm10b1YxWXphR2hXVkVwR1pEQTFXRTlXWkdsWFJrbDZWMVJLTkdOdFZrZGpSV1JWWWtWd2NGVnNhRU5UUmxsNVpFYzVhVTFXVmpSVk1uaHZWbTFGZUdOR2FGWmlXR2hvVm10YVZtVlhWa2hrUjNSVFZrVmFXRmRyVm10U01rcElVMnhzWVUweVVsbFpWRVpMVWtaYVJWTnJPVk5OVlhCNFZqSXhiMVV5UmpaV2JGWllWbXhLU0ZkV1pGTmpNVnAxVTJ4a2FWWkhlRmxYVjNSV1RWVXhSMVpZYkd0U1JVcHZWbTE0YzAweFdYbE9WMFpYVFZad1IxVXllRzlXYlVaeVkwVjBZVlpXY0doWk1WcExZekZ3UjFSc2FGTldXRUpPVm0xNGEwMUhSbkpPVm1oV1ltczFWbGx0ZUdGalZsWjBUbFZPVmsxV2NEQmFSV1JIVmtaYWMyTkljRmRXTTFKb1ZrY3hSMDV0U2tkYVJscHBVbXR3VlZadGRHRlpWbVJYVW01S1lWSnNXbkJXYTFaaFpWWmtWMXBFVWxSTlZUVklWbTAxUzJGV1NYcGhSbXhXWVd0YVRGWkdXbUZrUjFKSVkwZDRVMkV6UVhkV2JHUXdXVlphV0ZOclpHcFNiRnBZV1Zkek1XUnNWbFZTYkdSWVZqQTFTVlJzWkRCaFZrcFhZMFp3VjFaRmIzZFpWRVpYWXpGa1dXTkdXbWxTTTJoWlZsZDRZVmxXVWtkV2JHaHNVakJhY1ZSWGRIZFNNV3QzVjJzNVYwMVdjRlpXYlhSelZqRmFjMU5zUWxwV1JVWTBWbXBLUzFJeFduTldiV3hwVTBWS1VWWnNaRFJpTVZWNFZHeGtXRmRIYUdoVmFrNVRWakZzY2xadFJsZE5WbG93V2xWV1QyRkZNWE5YYm1oV1ZteEtWMVZHUlRsUVVUMDk=