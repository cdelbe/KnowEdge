created: 20181108075031937
creator: Charles Delbé
modified: 20181108075031937
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\sad_smile.png
tmap.id: 3216018e-8c6b-4758-885c-0969c2aae991
type: image/png

