created: 20181108075031900
creator: Charles Delbé
modified: 20181108075031900
modifier: Charles Delbé
title: c:\Users\Charles\dev\projects\tiddlywiki\wiki\wiki\tiddlers\libs\ckeditor\plugins\smiley\images\angry_smile.gif
tmap.id: 4c3750bf-04ea-434c-b76a-a4866a7bbe6d
type: image/gif

Y3JlYXRlZDogMjAxODExMDgwNzQ1MDg0OTQNCmNyZWF0b3I6IENoYXJsZXMgRGVsYsOpDQptb2RpZmllZDogMjAxODExMDgwNzQ1MDg0OTQNCm1vZGlmaWVyOiBDaGFybGVzIERlbGLDqQ0KdGl0bGU6IGM6XFVzZXJzXENoYXJsZXNcZGV2XHByb2plY3RzXHRpZGRseXdpa2lcd2lraVx3aWtpXHRpZGRsZXJzXGxpYnNcY2tlZGl0b3JccGx1Z2luc1xzbWlsZXlcaW1hZ2VzXGFuZ3J5X3NtaWxlLmdpZg0KdG1hcC5pZDogMzhjZTY2ZmYtMWE2Mi00ZjYzLTg0NjEtYWYxMDQ4YTMwNTQ1DQp0eXBlOiBpbWFnZS9naWYNCgpZM0psWVhSbFpEb2dNakF4T0RFeE1EZ3dOelF5TVRNek5EY05DbU55WldGMGIzSTZJRU5vWVhKc1pYTWdSR1ZzWXNPcERRcHRiMlJwWm1sbFpEb2dNakF4T0RFeE1EZ3dOelF5TVRNek5EY05DbTF2WkdsbWFXVnlPaUJEYUdGeWJHVnpJRVJsYkdMRHFRMEtkR2wwYkdVNklHTTZYRlZ6WlhKelhFTm9ZWEpzWlhOY1pHVjJYSEJ5YjJwbFkzUnpYSFJwWkdSc2VYZHBhMmxjZDJscmFWeDNhV3RwWEhScFpHUnNaWEp6WEd4cFluTmNZMnRsWkdsMGIzSmNjR3gxWjJsdWMxeHpiV2xzWlhsY2FXMWhaMlZ6WEdGdVozSjVYM050YVd4bExtZHBaZzBLZEcxaGNDNXBaRG9nT0RRd1lqWTRZMk10Tm1RMU5DMDBNRFF6TFRsaVl6VXRabU5oTkRGbU4ySXpORFExRFFwMGVYQmxPaUJwYldGblpTOW5hV1lOQ2dwWk0wcHNXVmhTYkZwRWIyZE5ha0Y0VDBSRmVFMUVaM2RPZWswd1RWUlpOVTFVUVU1RGJVNTVXbGRHTUdJelNUWkpSVTV2V1ZoS2MxcFlUV2RTUjFaeldYTlBjRVJSY0hSaU1sSndXbTFzYkZwRWIyZE5ha0Y0VDBSRmVFMUVaM2RPZWswd1RWUlpOVTFVUVU1RGJURjJXa2RzYldGWFZubFBhVUpFWVVkR2VXSkhWbnBKUlZKc1lrZE1SSEZSTUV0a1Iyd3dZa2RWTmtsSFRUWllSbFo2V2xoS2VsaEZUbTlaV0VweldsaE9ZMXBIVmpKWVNFSjVZakp3YkZrelVucFlTRkp3V2tkU2MyVllaSEJoTW14alpESnNjbUZXZUROaFYzUndXRWhTY0ZwSFVuTmFXRXA2V0VkNGNGbHVUbU5aTW5Sc1drZHNNR0l6U21OalIzZ3hXakpzZFdNeGVIcGlWMnh6V2xoc1kyRlhNV2hhTWxaNldFZEdkVm96U2pWWU0wNTBZVmQ0YkV4dFpIQmFaekJMWkVjeGFHTkROWEJhUkc5blRUSk5NazV0U1RST1ZFMTBUVWRLYlUxNU1EQk9iVXBwVEZSck0wMTZZM1JQUkVFeldXMU9iVmxxVW1wTlJHTjVSRkZ3TUdWWVFteFBhVUp3WWxkR2JscFRPVzVoVjFsT1EyZHdXazB3Y0hOWFZtaFRZa1p3UldJeVpFNWhhMFkwVkRCU1JtVkZNVVZhTTJSUFpXdEZlRlJYY0dwTlJUVkZVVlUxUkdKVk5UVlhiR1JIVFVkSmVsTlVXa3BTVlRWMlYxWm9TMk14Y0ZsVVYyUlRVakZhZWxkWVRsQmpSVkpTWTBoU2FVMXNTbmRYYlRGellrWndSV0l5WkU1aGEwWTBWREJTUm1WRk1VVmFNMlJQWld0RmVGUlhjR3BOUlRWRlVWVTFSR0pVUmpKWGEyUnpZbGRHV0ZadWJGQmhWVXBGV1ZWa1IyVlhTa2hXYm5CS1VsWktjMWxyWkUxU1NFWlNUVVYwYTFJeWQzZFphMlJXVG10c1NGUlVXbGxTYkZvMlYyeG9TMlZzYUVaVWJUbGFWMFZ3ZWxkc2FFOVpNWEJJVm1wS1dWTkZTalZaYWtwM1lrWnJlbFZ1Y0ZsVFJrcDNWMnRrVTJNeVZsbGFTRUpvVFcxNGFscEVTbk5qYlVaWFpVUk9hRll6VW5kWFJXaFRZMFp3U0ZWdVRtRlhSWEEyVjBWa05HTkdiSFZVYlU1YVRXNVNjMWRyWkhOTlIwbDZVMjFPYWxJelozaFhha3B6WkZkTmVHVkljR2xXTW5oNlYyeG9jMWt5UmxoTlYyaGhUV3hhTmxkRlpFZGtWbTk2VTJwV1dVMHdOVEJaVm1RMFlrVjRkRnBJUW1GYWVrSk1Xa1ZqZUdGSFRrUk9XRUpoVWtjNWJsZFdVa2RpUm5CRlducE9UbUpWVmpCWGExSnFUVlUxUkUxRVFrOVNSa1YzVkVaU2NtUXdOVlZhTTFKUFlXMWtNMWRzVWxwTmF6RkZXak5zV2sxclZqTlNSa1ozVFVkV1dWRnRlRkJoVlVwM1dXeGtSMkpzY0ZSUFZ6Vm9WakZzVDFFeVpIZFhhekIzWTBoT1dGWnRhRlJaYTFwM1VsZEplVnBGTldoaE1Ga3dWa1JDVTFKdFZrWk5WVlpoVFRKU1VGcFhkRWRPYkZKWFZXMDFiRlpVVlRKWlZFRXhVa2RLVms1VVZsaGlSMUpJVkZWa1NtVnNUbFZYYTNCVFZsUldNbFl4V205VE1rMTRZMFpzVlZZeVVsUlZha1poWld4a1dWUnNRbXBTVmtwVFdUQm9VMkZWTVhOVGJtUllZbFJHZWxsclduZFNWMGw1V2tVMWFHRXdXVEJXUkVKVFVtMVdSazFWVm1GTk1sSlFXbGQwUjA1c1VsZFZiVFZzVmxSVk1sbFVRVEZTUjBwVlVtcEtXR0V5VW5wWmJHUkhWMFphZFdKR1FtaFdWWEJHVjFaV2ExSXlWbGhUYTJoWFltNUNTMVZzV2t0ak1XeHlXa1V4VTFORldsTlVWVll3WVRGSmVXUXpaRnBoTWxKWFZHMTBjMU5HVWxWWGJHeFRZa1p2TWxZeWVHOVRNbFp6WVVWYVZXSlViR0ZXTUZaM1pXeGtjMkZGT1ZwTldFSkpWbTF3UzFkV1RrWlRhbFphWVd0d00xbHJXbkpsYkZaMVkwWnNWRkpyY0ROV01uUnJWVEpOZVZac2JHRlRSVXB2VkZjeE5HRnNjRVZUYms1cVlsVmFXRnBWVWs5aFJsbDZWVzVrV0ZKWGFGUlpNRnAzVTBaV2RWUnRSbGhTV0VFeVZqQldhMDVIVGtkaVNGWlZZbFUxWVZSWE5WTmpNV1J5V2toT1RsSXdiRFpWTWpGUFlXeEplbG96YUZoaGEzQjZXa1prVG1WSFZrbGpSMnhYVFc1b05sWXllRzlqTVd0NVVteG9UbFl5YUdoVVYzaGhUbXhrUmxwRlpHdFdiVGsyVlRKd1YxZFZNSGRPVkVKYVZtMVJNRmxyVmpSa1JuQkpVVzFHWVdWclNrMVhhMVpxWlVkR1NGUnJVazlYUlVwb1ZXdGpOV0pzVWxkYVJYUnBWbFJXUmxZeFVsZFViRmw0WWtSQ1ZWWnRVbFJaVmxWNFkwVXhSVkZzUWxkU1ZsWTBWa1ZhYTFKdFZrWlBWVlpvVFRGS2FGbFhlSEpOUmxGNFZXMDFhMDFFUmxaV2JURjNWR3N4YzJOSVVsTlNhMW96VkZWa1YxZFdSblJsUmtKb1ZsVndNMWRYZUd0U01rcHpZMFpTVUZaNlZtOVdha1p6VkRGRmVWcElaRmhoZWtJeldUQm9UMWRHV25SaFJsSmFZVEZ3TTFWc1pFcGxWbkJHVGxkb2FFMUdhM2RXYTFKRFZURktkRlpyV2s1V1ZscG9WRlJLVTFWR2JGaGpNMlJPVm14S1dsa3dWVEZVTVVwVlZsUktWazFXVlhoVmEyUkxWbXMxVlZac2FHbFNNVXBKVmtaV2ExTnRWbk5VYkZaWVlUTkNWRlpzVWxkTmJGbDRWMjA1VkUxck1UUlpNRnB6VmxaWmVWVnNVbFpoYTFwb1dsZDRhMWRXVW5OUmJYQlRWbXR3VkZkVVFtOVZNa1pXVFZoT1ZHSnRVbGxaYkZKSFpXeHNjbGR1WkZOV01HdzFWMnRWTVdGSFJYZFhWRUpYVWtWS1ZGVnRNVmRTYXpGV1ZtMUdUazFzU2xGWFZtUjZaREF4VjFWc2JHcFNWRlpRVld4U1ZrMXNWWGhXVkVaVFVqQndWbFZ0Y0V0WFIwVjVWVzV3V21KSFVraFdNRnBoWkZkS1IxRnRhRmRXV0VKSFZqRmFWMkV4U1hsV2JHaFVZVEpvV0ZsdE5VTlRNVlp6VjJ0MGFrMVhlSGxYYTFWNFZURk9SbGRzVGxWV1ZsbDNXVlJHU21WWFVYcGFSbkJvVFd4S1dGWkhNVEJqTVU1SFZXeFdXR0pIZUZSWmExcDJUV3haZVdWSE9WUk5iRnA2V1ZWV1lWWlhTbFZpUjBaWFRVWmFNMXBYZUd0ak1rWkdUMVp3VGxkRlNrcFdiVEYzVXpGa1YxUnJXbFJoYkZwaFdWZDBkMDB4YkhKWGJrcHNZa1phTVZrd1duTldSa3B5WTBST1YwMXVVbkpXVkVwT1pWWmFjMkpIUmxSU1ZYQjJWa1pqZUU1SFJuTmpSVlpVWW1zMWNWbHNWbUZYUm5CV1ZXczVhRkpzYkRaV1Z6VnJWMFpLV0dGR1VscE5SbkF6VlRCYVYyUldVblJTYkdoVFYwVkZlVlpxUWxkaE1EVklWR3RrYVZOR1dsWlpiRlV4V1ZaU1dFNVdUbXBOVjFKNVYydG9UMVJzU1hkaVJGcFdUV3BHVUZsWGVFcGxiRzk2WVVab2FHRXpRalpYYTFwclZHMVdTRlpyYkdwU01uaFlWRmMxYjA1c1dYbGxSemxxVFZkME5WVnRlRzlVYkZsNVlVZG9WVll6YUdoVWJYaHJVbXh3UmxwSGRGZGlWR3N5VmxSS2QxWXhaRlpOU0dSUFZrVktZVlp0TVZKTlJteHlWbXBTYTFKdVFrcFZWekZIV1ZkV2NsTnJNVmhoTVZweFdsVmtSMU5HVW5KVmF6bFlVbFZ3YjFaWGRHcE9WMHB6Vld4b2FsSXdXbkJWYkZKSFYxWmFXRTFZWkZaU2JIQkpXa1ZTUTFkR1pFbFJiR1JWVmpOb2VsWnJWWGhTVmtaeVRsWmtVMVl6VGpOV2ExWmhZVEZKZVZKdVRtcFNiRnBXVmpCYVMyRkdXbkphUnpscVRWWktXVmt3WXpGaVJrcFZVbXhzVjJKVVJuWldSM2hoVTBkTmVscEdUbE5oTVc5NlZrWldhMVl4WkZkU2JsSnNVbXRLYjFac1ZuZE5NV1JZWlVkMFUwMXJjSHBaTUZwVFZVWmFObFp0T1ZkaGExcDZWa1JHUm1WV2NFbGFSbWhvWld0SmVsZFVRbTlVTVdSSFYyNVNhRkpzU21GWlZFWjNUVEZXYzFwRmNHeFdia0pIVkd4a2IyRkZNVWRoTTJSWFlURktSRlpVUmt0a1JscHlWMnMxVjFac2NHOVdSbEpMVlRGV1IySkdhR3BOTWxKUFZXMTRTMWRHV2xobFNHUlZUVlZ3VmxWdGRHRldhekZYVmxob1ZtRXlVa3hXYlhNeFZsWmFjMkZIYkZOTlZYQktWbXRhVjJFeFRuUldiazVWWWtaYVdWbFVUa05XUmxwelZXeGtUbUpHYkRSV01qQTFWa1V4Y2sxVVVscE5SbkI2Vm14YVdtVldWbk5WYkZwb1lURndiMWRzWkRSaE1XUlhWVzVPVW1KWVFsUldiWFIzVmtaa1ZWRnRPVlpOYTFwWFZGWm9UMVpIU25SVmJHeGFZa1pLU0ZwWGVITmpiR1IxV2taT1YwMUhkekZXTW5SV1RWZEdTRkpZWkZoV1JVcFlWV3RXUzFaR1ZuUk5WbVJUWVhwR1YxWnRNVWRVYXpGelUyeEdXRlp0VWpaYVJFRjRVakZXYzFwR1dtbFRSVXBSVmxkNFUxSXhTbk5XV0doWFZrVmFWRlZxUW5kV2JGWjBZMFYwV0ZJd1ZqVldWelYzVjIxS1NGVnJhRmROUm5Cb1drWmtTMUl4Um5SaFJtUlhWMFZLU0ZacVJtRldNa1Y0VTFoc1YySkhhRlZaVkVwdlYwWnNkRTVWVGxSTlZscDZWakowTUdGck1WaGxTR3hZWVRGV05GWlVSazlTYkdSelZHeFdWMVpzYkROWFZsSkhVMjFXV0ZWWWNHRlNia0p2VkZkNFMxZEdXa2hOVkVKcVRWVTFTRlpYZUZkWFIwcElaVVpTV21FeGNESlVWM2hhWlZkV1NFOVdVazVpUm5BMlYxWldWMWxXV2xoVGJGWnBVakJhV0ZSVldtRk5NWEJZWlVkMGFrMXJXa2RVTVZwM1ZHeGtSbE5yY0ZkaVZFWXpWWHBHYTFZeFVuSlhiRkpvWWtad2FGZFdaREJrTURCNFlraEtXR0pyY0hOWmExcGhUVlpyZDFkdVRsZFNhM0I1V1RCU1QxWXdNWFZWYmtwWFZrVndUMXBXV21Gak1rcElVbXhTVTFaWVFqSldhMXBxWlVVMVNGSnVUbXBTVmxwVldXMXpNV05XYkhOV2JVWllVbTVDVjFaWGN6VmhSa3B6WWtSYVYxWjZWbkpXTUZwTFYwZEdSMVZzY0U1U2JrRjZWbFJDWVZZeVVsZFZibEpUWWtkb1ZGWXdWa1psVmxweFVXeGthRTFXUmpWV1J6VlBZV3hLZEdGR1pGcGlXRkpNV1RKNFYyUlhUa2xVYXpsWFlsWktTRmRXVmxkVU1rWnlUVmhPVkdKSGVGbFpWRXB2VWtac1YxcEZkR3BoZWxaWldUQmFkMkpIUlhsa2VrSllWa1ZLY2xWNlJrOVNNV1IxVW14a2FWSXphRlZXUm1NeFltMVJlRmRZYUZoaVdGSnZWRmQwZDFOV1drZGhSemxwVW10c05WbFZhRU5YYlVwSVZXeFNWV0pHY0ROV2FrWnJWbFphZEdWSGJGZFhSVXBoVmpGa01HSXhVWGhpUm1SWFlXeHdXRmx0ZUdGWlZscDBUVlpPV2xac2NFbGFSVlUxWVRGYWMxZHFSbGRXTTJnelZqQmFTMVpzWkZsaFJtaFhZa2hDZVZac1pIcE5WMDUwVTJ0YWFGSnRhRmxWYWs1dlZXeGFXR1JIZEZWTlJFSTBWMnRvVTFSc1dsbFJiRUpYWWtkb2RsWXhXbFpsVlRGWlZHeHdWMkV5ZDNwV2JURjNVVEZhV0ZKWWJGWmlSa3BoVm10V1lVMHhXbkpXV0doWVVqQmFTVlZ0ZUd0Vk1rVjRWMVJDVjJFeFdtaFdWRVp6VjBaS2NscEhjRk5XTW1oWVYxZDRiMUV4VVhoVmJHaHFUVEpvVUZWdGVFZE9SbHBZWkVSQ2FGSnNjREJhVlZwUFZsWmFWMWRZWkZwV1JWcFFWVEJrVjFKV1VuTmhSMnhUWVRJNU5WWnFTbmRUTVVsNFdrVmFUbFp0YUc5VmFrSmhWREZzY2xkc2NHeFdiR3cxV1RCV01HRnJNWEpqUm1SWFZqTm9URmxXVlhoVFZsWnpXa1p3VjAweFNrMVhiR1EwVmpKT1YxSnNWbGRpUlRWWVZGVm9RMU5zWkZkV2JHUm9UV3RXTTFSV1ZtRlhSMHBKVVd4a1YySllhRE5WYTFwelYwZFdSbHBHWkdsU1dFSTFWbXhrTkZFeFZYaFRiRnBxVW10YVdWWnFUbE5XUm14MFkzcEdVMDFXV25wV2JYaFBWakZLYzJOR1VsZGlXR2hVV1hwR1QxSXhWblZVYkdSb1lUQndXRmRXYUhkV2F6RnpWMnhvYWxKWFVsZFpiRlozVmpGU2MxWlVWbHBXYTNCWVZqSjBhMVpYUlhsVmEyUmhWak5vTTFWdGVGTmpNazVJWlVkc1UxWXpVVEZXYlhoaFlUSlJlVk51U2s5V1ZuQlBWbXhhZDFac2JITmhSazVXVFZac00xZHJZelZWYXpGWFVtcFNXR0V4VlhoWlZFRjRWbXhrY1ZGc1pGZGxiRnBOVjFkMGExSnRVWGxVYTJSU1lrWndjRlZ0ZEhkVlZscFlaVWRHVmsxck5WaFZiWGh6WVd4S2NtTkZPVlpoTVZwb1ZrVmFZVk5IVmtkYVJtUk9Va1ZhU0ZaR1dsZFdNa1pYVTJ4a2FsSXlhRmhaYkdoVFZqRndWbGRzWkZoV01IQkdWVmN4TUdGSFZuUmxSbWhYWWtkU00xVjZSbUZXTVdSeVYyMXdVMVpVVmxwWFYzaFRVakZSZUZWc1pGaGhNbEpZVld4U2MxWXhXWGxqZWxaVllrVndXVnBFVG5OV01rVjRZMFpTV0Zac2NFZGFWbHBYWkZaV2MxWnNaRk5XUmxwVlZqRmFZVlV5VFhkTldFNVdZbXRhVTFsVVRsTlVNV3h5Vm01a1YySkhlSGxXYlhoUFYyeFpkMk5HV2xwV1YyaDZWbTE0WVZKdFRraFNiRlpvVFZadk1sZHJVa2RWTWsxNFVtNU9WV0pHY0hOWmJHaHZVMVpaZUZWclRtaE5WbFkwVmtjMVQxWnRTa2RYYkdoYVlrZG9WRlpzV2xOV2JGWnpVMnMxVTJKSVFYZFhhMVpXVGxaYVIxZHVWbEppYldoWVdXeG9VMVJHV2xoTlZtUlhWakJ3U2xrd1dtRldNa3BIWTBaV1dGWXphRmRVYkZwaFl6RldkVk5zWkdsWFJrcFpWbTE0YjFFeFNrZFhiR2hPVTBkb1dGbFljRmRYUmxWNVpFZEdWMDFYVWtkWk1HaExWbTFLU0ZWc1VsWk5WbkF6VlRCa1UxTkdTbk5UYld4VFYwVktXbFpzV210bGF6VlhWbTVTVTFkSGFGbFphMVozVjFac1ZWSnRSbGhTYkZvd1drVlNUMkV3TVhKT1ZXUlhUVzVvVUZsV1drdFdiVTVIVW14a1YxSlZjRmxXYWtsNFZUSk9jazlXWkZoaVJuQnZWRlpvUTFkR1dsaGtSM1JQVW1zMVNGWnROVTloUmtsM1YyNUdWVlpzV25wVVZFWmFaVlV4U1dGR1dsTmlTRUphVm14a01HSXhXWGhYYkdSVVlrZG9WMVJYTlc5VVJuQkhWMjEwYW1KSVFraFdWekZ2VkcxS1JtSXpaRmRpUmtwTVZGVlZlRkl4VW5KaFJscHBZa1Z3V0ZkV1VrOWlNVnBYVm01U2ExSllRazlWYlhoM1VqRmFkRTFFVmxkaVJtd3pWR3hXYTFaWFNrZFhibkJYVW0xU1dGcEZaRmRTYXpsWFYyczFVMkpHYkRaV01uaFhXVlpaZUZOdVVsWmhiSEJYV1d4b1UxWkdiSE5hUnpsV1ZtMVNWbFpITld0Vk1ERllaVVpvVjJKWVVuWldNR1JMVmxkS1IxcEdXbWxTTVVZelZrWmtORmxXVGtoV2EyUlZZa1pLVDFsclZuWmxSbVJYVm0xR1ZVMVdjRWhXTWpWTFZURmFSbGRzYUZkaVdHaG9XbGQ0YzJNeGNFWlBWazVPVm10d05WZHJWbXRTTWtaWVUydGFhbEpzY0ZoV2ExWnpUa1paZVdONlJsZE5WMUo1VmpJeGQxVXlSWGhqUmtwWFlsUkZNRlY2UmxOU01rNUdZVVU1VjFaVVZsbFdSbHBXWlVVMWMxZFlhRlppUjFKWVZGVlNSMU5zV2toalJYUlhWakJ3U0Zrd2FIZFdNVXBYVjFod1lWWnRVa2hWTUdSSFVqRmFjMVZzVG1sWFJUUXdWbTB4ZDFNd01VWk9WVnBPVm14d1VWWnRNVk5qUmxaelZXeGtWMDFXV25wV1YzaHJZVzFLUjJORmFGZFNiRXBVVmtSR1lXUkhWa2xpUmxaWFlsVTBNRlpzVm1GWGJWRjNUbFphVUZac1dsVlZNRlpMVG14a1dHUkhSbFpOYkVwSVYydGFWMVl5U2xaWGJUbGhWak5vV0ZScldtRlNWa3AwWkVkc1RsWnNjRmxYVkVKdlV6RlJlRmRxV21sU2JIQmhWbTE0UzJWc1dsWlhiazVYVFZad1ZsWnRNWE5XTWtwSlVWaGtXRll6VW1oVlZFcEdaVlpPY21KR1NtaGhNSEJaVm0xNGEySXhiRmRWYms1aFVsZFNWRmxZY0hOV2JGVjVZM3BHVjAxRVFqUlZNbmhMVmpBeGNWRllhRlpXUlhCUFdsVmFZV05zVm5OUmJFNVRZa2hDTWxacldtRldNVTE1VW10a1dHSnNTbk5WTUdSVFYwWldkR042Um14aVJtdzFWRlpvVDFZeVJqWlNibkJXVFc1U1ZGWXlNVWRqYkdSelVXeFdWMVp1UWsxWGExcGhWREpOZUZkdVVtdFNhelZ2VkZjMWFtUXhXblJOV0dSVlRWZFNlVlJzV205V1IwcHlUbFpTV2xZelVqTldNVnB6WkVkU1JtUkdXazVYUlVwS1ZrWmFVMVV5UlhsVGEyUllZa2Q0V0ZSV1drdFhSbXhYVmxob1YySkdjSGhWTW5oWFZqSktXR0ZHVmxkaVIxRjNWR3RWTVdNeFRuVldiV3hUWWtoQ2QxWlhlRmRXYlZaSFdrWldWR0ZzU2xWWmJGcExaVlpSZUZkdVRsZFNNSEJJVlRKNGExWnRTbGxWYWtwVlZsWndhRmt5ZUd0amJGSnpXa1UxYVZKdVFscFdiWGhxWkRKV1IxZFliRk5pYTNCVldXdGFkMVpzVlhkaFJVNVVVbXhLZWxZeU1VZFZNVXBWWWtWYVYySlVSVEJaVmxwTFl6Sk9SVkZzWkZOTk1taFZWbXRTUjFsWFRuUlZXSEJxVWpCYWMxbFVSbmRYVmxwellVaGthbUY2UmtoV1ZtaHZWMGRLU1ZGdVNscFhTRUpZVm0xNGEyTnNaSFJQVmxaWFZrVkpNVll5ZEZOVE1WbDVVbTVLVDFZd1dtaFdiRnBXVFZaV2NWTnJaRlJTTVVwSVdWVmtiMkZXVGtaVGJUbFhZbGhTY1ZwVlpFNWxSa3AxVkcxR1ZGSldjSFpXVkVKWFV6RmFWMkpJVGxkV1JWcHhXV3RhUzAxR2NGWlhhemxvVm14c05GVXlOWGRYUjBWNFkwVlNWMDF1YUZoVWJURkhVMWRLUjFkck5WZE5WWEJLVmpGa05HRXhUWGhYYmtwUFZtMW9jRlZzVWtkVU1WcHhVbXQwVjFac2JEUlhhMmhMVkRGS1ZWSnVjRmRXYldoNlZteGtSMk5zWkhWUmJHUm9ZVEJ2ZWxkclZtRmhNbEpHVGxaYVlWSnNjRTlXTUZaTFVteGFSVkZ0T1ZSTlZuQXdWVEo0YTFaSFNuTlRiVVpYWWxob00xcEhlSE5qTVhCSFZHMTBWMkpJUVhkWFYzUnJVakpHUjFkcmFHdGxhMHBZV1ZkMGMwNUdiRlZTYkdSWVVtdHdlbGxWV2s5aFZscEhWMnhvVjFZelFreFVhMlJQVWpGd1NWSnNVbWxUUlVwNlZtMHdlRlV3TVVkYVNFcGFUVEpvYjFWdGVITk9SbGw1VGxkR1dGSXdjRlpWYlRWM1YyMUtWVkpyYUZaaE1WVXhWbXhhUzJSSFJrZGFSVFZwWWxaRmVGWnRkR0ZoYlZaSVZWaHNWV0pIVW5GVk1GcExZMFpWZDFkcmRHbE5WM2hZV1ZWYVQxZEdXblJrUkZKWVZrVTFkbGxXV2xwa01EVlhZa1pXVjJKWGFFMVhWbEpMVWpGa1YxWnNiR2xTYmtKd1ZXeFNVMDB4WkZWUmJGcHNVbXMxV0ZWdE5WTmlSa2w1WVVab1ZtSkhhRU5VVlZwaFl6RmFkRTlYY0dsV2Exa3hWbFJHYjJNeFpFaFNiazVZWVhwc1lWbHJXa3RsVm5CWFYyeE9XRkl3TlVkVU1XUXdWR3hrUmxOcVVsZFdSVnBVVldwS1IyTXhTbGxqUmxwWFVsaENXRlp0TUhoaU1WcEhWMnhrWVZKck5YRlphMXBoVFZacmQxWllhRlZoZWtJelZUSjBhMWRIUlhoWGJrcFlWbXhXTkZsNlJrOWpNa3BIVjIxc1YxSldjRkZXYTFwWFdWWmtkRlZZYUdwU1YyaFFWakJrVTFaV1duRlNhM1JZVW14YVdWa3dWakJXTVVwMFZXdG9WMDFYYUhwV2JGcGhVbXhPVlZGc1ZsZGxhMXBWVjJ0YWExUXhUa2hWYTFwUFZtMVNiMVJWYUVOTk1WbDRWMjFHVmsxV1JqUldiWGhoVkd4T1NHVkhSbFZXUlc4d1ZtcEdWMk5zV2xWU2JYUnBVbXR3V2xaR1dtdFNNa1pYVjFoa2FsSldjRmhXYWs1dlUwWmFSMVpZYUdwV2ExcGFWMnRhYTFZeFdYZE5WRkpZWWtaYVYxUldXbXRXTVhCSFlrWm9hVmRGU2xsV1Z6RTBaREZWZUZkcldsWmhlbXhZV1Zod1IwMUdXbGhPVlU1V1VtdHdTRlV5YzNoWlZscHpVMjVhVlZZemFFOWFWekZIVG14YWRHSkhiRk5XYmtKWlZteGplRTFHVFhoV2JrNVlZa1p3V1ZsVVFURldNVnAwWlVkR1ZGSnNXbGxhVlZaclZqSktSbU5JYkZaTmJtaE1WbXBHWVZZeVRrWlZiR1JYWWtoQ1dWWlhjRWRTTWsxNFUyNU9XR0pGTlc5VVZXaERWa1phZEdWR1pGcFdhMVkwVm0xNGExWXlSWGxWYkU1YVlURmFhRlpxUmxka1IxSkdaRVphYVZKdVFsaFdha293VkRGYWMxZHVUbGhoTW1oWFZtcE9iMU5HV25SbFJYUnFZa1UxZWxVeWVHdFdNVnAxVVd0V1YySkdjR2hXYWtaS1pVWktkVlJzVG1sU2JrSlZWMVpTUTJReFZYaFhiazVYWWxWYVUxUldXbUZYUmxwMFpFZDBWbUpWY0VkV01uaHJWbTFLV1ZWcmVGZFdNMmhvVm0xNGEyTnNVbk5YYkdScFVtNUNTbFpzV210T1JrbDRWMjVPVkdKcmNGVlphMVozVjBaYWMxZHVaRk5TYkhCWVZqSjRhMVV3TVZaWGJuQldZbGhvYUZaVVNrWmtNazVIVkd4a2FWSnNjRzlXVmxKSFZqRlplRmR1U21GU2EzQndWV3hhZDFkR1dsaE5WRUpVVFZaYWVsWXllR0ZYUjBWM1RsWmtWMkpZYUdoVk1GcFhWMGRXUmxwR1pHbFNXRUkxVmxSS05GTXhXWGhYYkdScVVsWktXRlp0ZUhkWFJsWnhVbXRrYWsxVmNIcFdNbmhQWVVVeFNWRnNVbGRpV0doWVYxWmFSbVZHV25OYVJtUm9UV3hLVkZkWGRGZFpWbGw0Vm01U2ExSllVbGRaYTFwM1ZqRlplV1JGT1ZkaVJuQjZWakowYjFac1dYcGhSV2hYWWxob1RGa3llRTlqTVU1eldrWmtWMkpyU2taV2JYaGhXVlpaZUZOWWFGTmlhelZVV1d0YWQxWkdiRlZSYm1SV1RWWndlbFp0TVVkVmF6RlhWMnhvVjJKWVVuSldWekZMVW14a2MxcEdXbWxYUmtwTlZteGtORmxXV25OYVNFcFZZa1p3V0ZsclduZFRWbHBYV2tSU1UwMVdjSHBWTWpWTFZrZEtSbU5HYUZkaVJuQXpWV3RhWVZZeFpITmFSazVPVmxad05sWlhNVFJaVmxWNVVsaGthbEpyTlZoWmExcGhZVVpXVlZKc1pGZE5WbkI1VjJ0YVMyRldTbGRqUm1oWFZucEZkMVY2Umxkak1XUnpWMnhvYUUxRVZsaFdiVEUwV1ZaT1IxWnNhR3hTVjFKWVdXdFdkMlZXVlhsbFJYUlhUVlp3V0Zrd1ZsTldNVnB6WTBab1ZtRnJXa2haZWtaTFl6RmtjMVJ0YUU1VFJVcFZWbTB4TkZZeGJGZFNXR2hYWWtkU1dGbFVTbE5WTVd4eVZtMUdWMDFXV2pCYVJWWXdWbTFLUjJOR1pGZE5ibEpRVm0xNFlXTXhaSEpoUmxwWFRUSm9TVlp0TVRSVE1rNXpWRzVPVkdKSFVsaFdiVFZEVWxaYWMxZHRSbGROVld3MFZXMDFUMVV5U2tkalJsSmFWa1ZLTTFaVVJtRmpNVnAwVW14S1RsWnNjRmxXYlRFd1lURldkRk5yV2xoaVIxSlhXV3hvVTFSR1dsaGxSMFpYWWtkU2VWWkhlR0ZXTWtwSFkwVnNWMVp0VVRCVmFrWmhZekZPZFZOc1VtbFNXRUpaVm0xNFlXUXhTa2RYYkdSWVlrZFNWRlJXVm1GbGJGWjBaVWRHVmsxclZqTlpNRnBQVmpKS1IxZHRhRlpXUlZwWVZtcEdZV05zY0VkVGJXeFRWbTVDV1Zac1kzaE5SazE0Vm01T1dHSkdjRmxaVkVFeFZqRmFkR1ZIUmxSU2JGcFpXbFZXYTFZeVNrWmpTR3hXVFc1b1RGWnFSbUZXTWs1R1ZXeGtWMkpJUWxsV1YzQkhVakpOZUZOdVRsaGlSVFZ2VkZWb1ExWkdXblJsUm1SYVZtdFdORlp0ZUd0V01rVjVWV3hPV21FeFdtaFdha1pYWkVkU1JtUkdXbWxTYmtKWVZtcEtNRlF4V25OWGJrNVlZVEpvVjFacVRtOVRSbHAwWlVWMGFtSkZOWHBWTW5oclZqRmFkVkZyVmxkaVJuQm9WbXBHU21WR1NuVlViRTVwVW01Q1ZWZFdVa05rTVZWNFYyNU9WMkpWV2xOVVZscGhWMFphZEdSSGRGWmlWWEJIVmpKNGExWnRTbGxWYTNoWFZqTm9hRlp0ZUd0amJGSnpWMnhrYVZKdVFrcFdiRnByVGtaSmVGZHVUbFJpYTNCVldXdFdkMWRHV25OWGJtUlRVbXh3V0ZZeWVHdFZNREZXVjI1d1ZtSllhR2hXVkVwR1pESk9SMVJzWkdsU2JIQnZWbFpTUjFZeFdYaFhia3BoVW10d2NGVnNXbmRYUmxwWVRWUkNWRTFXV25wV01uaGhWMGRGZDA1V1pGZGlXR2hvVlRCYVYxZEhWa1phUm1ScFVsaENOVlpVU2pSVE1WbDRWMnhrYWxKV1NsaFdiWGgzVjBaV2NWSnJaR3BOVlhCNlZqSjRUMkZGTVVsUmJGSlhZbGhvV0ZkV1drWmxSbHB6V2taa2FFMXNTbFJYVjNSWFdWWlplRlp1VW10U1dGSlhXV3RhZDFZeFdYbGtSVGxYWWtad2VsWXlkRzlXYkZsNllVVm9WMkpZYUV4Wk1uaFBZekZPYzFwR1pGZGlhMHBHVm0xNFlWbFdXWGhUV0doVFltczFWRmxyV25kV1JteFZVVzVrVmsxV2NIcFdiVEZIVldzeFYxZHNhRmRpV0ZKeVZsY3hTMUpzWkhOYVJscHBWMFpLVFZac1pEUlpWbHB6V2toS1ZXSkdjRmhaYTFwM1UxWmFWMXBFVWxOaVZrWTBXVEJTWVZVeVNrWmpSemxWVmxad00xVXdXbUZXTVdSeldrWk9UbFpVUlhwV1JFWlhXVlpWZVZKcVdsTmlSVFZZV1d0YVlXRkdWbFZTYkdSWFRWWndlVmRyV2t0aFZrbDRVMnRvVjFaNlJYZFdSRVpyWTJzeFZsZHNhR2xTVkZaWVZtMHdlRlV3TVhOalJXaHNVbGRTV0ZscldtRldiRnBZWlVaT2FGSlVSakJaVlZaclYwWmFkRlZVUWxaaGEzQlFXVEp6ZUZac1pITmhSMnhUVm01Q1ZWWXhXbE5STWxGNFZWaG9WMWRJUW5GVmJURlRWVEZTVjFkcmRFNVNiWFF6Vm0xNFQyRkhTa1pqU0d4WFRXNUNVRlp0ZUdGa1JsWjFVMnhhVjAweWFFbFdiWGhoWVRKT2RGVnJaRlJpUjFKWVdXdG9RMUl4V25SbFIwWm9UVlpzTkZaR2FHOVZNa3BJVlcxb1lWWXpUWGhaTVZwVFZteGFkRkpzVmxOaVNFSmFWMnRXYWs1V1ZYaFhiRlpUWVRKU1dGUlhOVkpOUmxwVlVWaG9WRkpzV25wV01uaGhWR3hhYzFaWWFGZFdla1V3VlhwR1MyTXhUblZWYXpsWFZrZDRWVlpYZUZka2F6RlhWMWhvV2sweWFGZFpXSEJIVTBaYVdHVkhkR2hXYXpWSVdUQmFhMVpXV2paV2JscGhVbXh3YUZacVJsZGpNVkp6Vm0xc1YxZEZTa2xXYkZKTFRVVXhSMVZZYkZOWFIyaFpXVmR6TVZkR1duSldhM1JYVW14d01GcFZWbXRoYkZsM1YydGFWMkpZYUhaV1ZFWktaVVpPY1ZOc2FHaE5WWEJOVm10U1IyTXhXWGxUV0hCaFVtMVNiMWxyV25kbFJscDBaVWM1VWsxV1draFdNalZMWVVaSmVsVnNaRnBpUmxwb1ZXcEdXbVZYVmtaVWJIQlhWa1ZKZWxaVVJsTlRNVnB6VjI1U2FGTkZjR0ZVVlZwM1ZqRndSVk5yZEZOTlYxSjZWa2Q0YTJGV1duSmpSemxYVFZaS1NGWnFSbFprTURWV1drWk9hVkp1UWxCV2JYaGhaREZWZUdKSVNsZGlTRUpQVm0xNGQxTkdaSEpXVkZaV1lYcEdWMWt3YUhOV01ERnhWbXRvV2xZemFFdGFWbVJYVTFaa2MxZHNaRk5XYmtKV1ZqSjRhMlZ0VmtkWGJHUlRZbXhLVVZadGVHRlhSbHB4VW10YWEwMVhVbGxaTUZVMVZsVXhSVkZxVWxwTlJuQjZXVlZhVDFOR1ZuSlBWbVJwVjBkb2IxZHJVa2RqTVdSR1RsWnNZVkl6UW5CV2JGcDNVMFphUjFkdE9WZE5WM2hZVmpGb2MySkdTbGRUYldoWFlrWndURlpyV25KbFJtUnpXa1prYVZaVVZrdFdWRW8wVlRKR1YxTlljR0ZOTWxKWlZtcE9VMVpHYkZWU2EyUnFUVmRTV2xsVlpIZFZNVnBHVjJ4YVdGWXphSFpaYWtaaFl6RmtXV0pIZUZSU1ZGWjZWMWQwYTFVeFNYaGpSbHBYWVd0S1dGWnRlSGRUUmxWNVRWVmtXR0pHY0VkVk1uaHZWMnhhVjJOSVNscE5ibWhRV1RKNGEyUkhSa2RoUms1WFYwVkdORlp0TVRCWlZsVjVWRmhvVjJKck5WaFdNR1JUVmpGc2NsZHJkRmRXYlhoV1ZrY3dOVlV5U2toVmJIQmFUVWRvVUZaRVNrdFNNazVIWVVaa2FWZEhhRzlXYlhoaFYyMVdjMVp1U2xkaVJuQlBXVmQwUm1ReFdrZGFSRkpxVFd4S1dGWXlOVXRXTWtwWVpVVTVXbFo2UlRCVmJYaGhWMGRXU0dSRk5WTmhNMEYzVmxSR2IyUXlSbGRUYWxwcFVucHNZVmxVUmxabFJuQldWMnhLYTAxV1dqQlZiWGhUWVZaS1ZWWnJhRmRpUjFGM1ZYcEdWMlJHVG5WVWJGSm9UVmhDYUZkV1VrZGtNVWw0Vld4YVdHSnJOVmxXYWtKaFVqRmtjbGR0Um1oV2JHdzBWV3hvYTFZeVNraFVhbEpWVmxad2NscEZXa3RrVmxKMFVteE9hVkp1UWs5V2ExcFRVVEZzVjFaWWFGZGlSbHBWV1cxek1WVkdWblJOVms1WVZteEdORll5TVRCV01VcFZVbXBHVjFZelRqUldiVEZMVW1zMVNWcEdaRk5XYmtKSlYydFdhMUl4U1hoVWJsSnBVbFJXV0ZsclduTk9WbHAwWTBWa1ZrMXJiRFZXVjNodlZsZEtSMWRzV2xwaVZFWjJWa1JHVTFkSFVrbGFSM2hYWW10S1dWWnFTakJaVjBWNVUydG9WbUpHY0ZkVVZ6VlRWMFphV0dWSFJsaFNiRnA2VlcxNGExVXdNSGhUYWtwWVZrVnNORlY2Ums5WFJrNXlWMjFHVTJKR2NGbFdWM2hoWkRGTmVGZFliR3BTV0ZKV1ZGWmFWMDVHV25OaFIzUm9WbXR3ZWxZeU5VZFdiVVp5VGxaT1ZWWnNjSEpaTWpGSFUwZFNTR1JGTldoTk1FcEtWbXBLTUdJeVJYaFhibEpUVjBkU1VGWnJXa3RXTVd4eVYyMUdUazFXY0VkV01uTTFZVEZhYzJOSWFGZGlWRVoyVmtkNFMxWXlUa1ZSYkdSb1RWaENlVlpIZEd0VmJWRjNUVlphV0dGNlZsbFZiVFZEVjBaYVIxZHRkR3hpVmtZMFZqSjRhMWR0Vm5OWGJGWmFZa1phTTFZeWVISmtNVnB4Vld4b1UySklRalpXYWtreFpERmtTRkp1U21obGEwcFdXV3RhZDFaR1dYZGFSazVUWVhwR1dWbFZWVEZVYkVsNlZWUkNWMkZyV2xSVmFrcE9aVVprY2xwR1ZsaFNNVXBhVjFaU1IxTXhaRWRYYms1aFVrWktWRlp0TVRSbFZsbDVZM3BXVm1KVldUSlZiWFJ6VjBkRmVHTkZhRmRoTVhCeVZXMTRUMk5XUm5OaFIyeFRZbXRLUmxac1pEQlpWbEY0V2taa1ZHSnNTbEZXYWtvMFZERnNjbGR1WkZkaVJsWTJXVEJXVDFVd01WZFNhbEpYVWpOb2NsWXdaRVprTWs1SFlVWmthVmRGTVRSV2JYUmhWVEZaZUZkdVNtRlNNbmhQVld0V1lWTldXbGhOVkVKVVRWWkdOVlp0TlV0V1IwVjVaVVprVjJKWWFHaFpNbmhXWlZVeFZtUkdVbE5pUm5CWFZtMHhORmxXV1hkTldGSm9Va1ZhV0ZsclduZGhSbFY1VFZaS2JGSnNjRnBYYTJSelZUSldkR1ZHVWxoV00yaG9WWHBHVTFJeFpISmhSM1JUVjBaS2RsWnRNVEJrTVZsNFYyeGthRkl6VWxoVmFrSlhUa1paZVU1WVRsaFNiSEI2VmpKMGIxWXhTbk5qUm1oV1RVZFNURlZxUmxOa1IxWkhXa2Q0YUUxWVFscFdiWGhoWVRKUmVWSlliRlppUjFKVVdXMTBkMVpXYkZWU2JtUlhVbXhXTTFkcll6VmhhekZYVjFSS1YxSjZSWGRXVkVwTFVteGtjMXBHV2s1aWJFcFpWMVphWVZOdFZuTlNiRlpTWWtad1dGcFhkR0ZPYkZwelZtMUdhazFXY0hwWk1GWmhZVVpLYzFkc1VsZGlSbkF6VlcxNGExZEhVa2RVYkU1T1lrVnZkMVpyV205ak1WcFlVMnhzVm1KRk5WaFpiVFZEVjBaYWNsZHVUbGhTTVVwSFdrVlZNVlJzWkVaU1dHeFhZa2RPTkZsNlJscGtNREZXVjJzNVYxWXphRnBXYlRCNFZURk9SMVpZYkd4VFJYQnpWbXhTYzFOc1pISlhiR1JYVFZad1IxWXllRk5XTWtwSVZGaG9WMkZyV2xkYVZWcFBWMVp3UjJGSGFFNVdXRUpWVm0wd2VFNUhVblJXYTJSWFltdGFVMWxyVlRGalZteHlWbXhrVDFKc2NFbGFWV1F3Vm1zeFYyTkdaRmROYmxKeVZtMHhTMUl4WkhOVmJGcG9UV3hLU1ZadGNFZFZNazVYVlc1U2ExSlVWbFJXYlRWRFYxWmFkRTFVUWxkTlZXdzBWa2Q0YTFaWFNraGhSbHBhWVRGd00xWXhXbk5qYkZwMFVteHdWMkpJUWpaV2Fra3hWREZWZVZOcldtcFRSM2haV1ZSR2QyVnNiSEphUlhSclVteGFlVlpIZUd0VWJVcDBZVVZzVjJKWVVtaFZNakZTWlVaa2RWTnRiRk5pUlhCM1ZtcENhMkl4VG5OWGJsSnJVbnBzVjFSV1ZuZFRSbHBIWVVjNWFHSkZjRmRaTUZwUFZqSktXVlZ0YUZaaGExcFlWbXBHWVZaV1duSk9WVFZYVmxoQ1dGWnJXbGRWYlZGNFVXeEtVVlpFUVRrPQ==